{"version":3,"sources":["components/ProfileHeader/ProfileHeader.module.css","components/BurgerConstructorItem/BurgerConstructorItem.module.css","components/ModalOverlay/ModalOverlay.module.css","components/App/App.module.css","components/IngredientDetails/IngredientDetails.module.css","pages/profile.module.css","components/NavigationLink/NavigationLink.tsx","components/Navigation/Navigation.tsx","components/ProfileHeader/ProfileHeader.tsx","components/AppHeader/AppHeader.tsx","services/actions/viewedIngredient.js","components/Card/Card.tsx","components/BurgerIngredients/BurgerIngredients.tsx","services/actions/constructorIngredients.js","services/api/api.tsx","services/actions/order.js","components/BurgerConstructorItem/BurgerConstructorItem.tsx","components/BurgerConstructorItems/BurgerConstructorItems.tsx","images/done.svg","components/OrderDetails/OrderDetails.tsx","components/ModalOverlay/ModalOverlay.tsx","components/Modal/Modal.tsx","services/cookieFunctions.js","components/BurgerConstructor/BurgerConstructor.tsx","components/IngredientDetails/IngredientDetails.tsx","services/actions/allIngredients.js","components/ProtectedRoute/ProtectedRoute.tsx","services/actions/auth.js","pages/forgot-password.tsx","pages/reset-password.tsx","pages/login.tsx","pages/profile-order.tsx","pages/profile.tsx","pages/ingredient-details.tsx","pages/profile-orders.tsx","pages/register.tsx","components/App/App.tsx","services/reducers/reducers.js","services/reducers/auth.js","services/reducers/index.js","index.tsx","pages/register.module.css","pages/reset-password.module.css","pages/login.module.css","pages/forgot-password.module.css","components/Card/Card.module.css","components/BurgerIngredients/BurgerIngredients.module.css","components/BurgerConstructorItems/BurgerConstructorItems.module.css","components/OrderDetails/OrderDetails.module.css","components/Modal/Modal.module.css","components/NavigationLink/NavigationLink.module.css","components/BurgerConstructor/BurgerConstructor.module.css","components/AppHeader/AppHeader.module.css","components/Navigation/Navigation.module.css"],"names":["module","exports","NavigationLink","Component","icon","text","path","className","styles","link","type","linkText","activeClassName","linkTextActive","to","exact","Navigation","navigation","BurgerIcon","ListIcon","ProfileHeader","profileLink","ProfileIcon","AppHeader","header","headerContainer","ADD_VIEWED_INGREDIENT_DATA","REMOVE_VIEWED_INGREDIENT_DATA","Card","card","onCardClick","dispatch","useDispatch","useSelector","state","constructorIngredients","isBun","useDrag","item","collect","monitor","isDrag","isDragging","dragRef","count","_id","filter","length","location","useLocation","ingredientId","cardStyles","join","ref","pathname","background","onClick","payload","counter","size","src","image","alt","name","pic","price","priceNum","BurgerIngredients","React","useState","current","setCurrent","allIngredients","useInView","threshold","bunRef","inViewBuns","sauceRef","inViewSauces","mainRef","inViewMains","useEffect","setTab","tab","document","getElementById","scrollIntoView","behavior","bun","sauce","main","burgerIngredientsStyles","section","style","display","value","active","scroll","cards","map","ADD_CONSTRUCTOR_INGREDIENTS_BUN","ADD_CONSTRUCTOR_INGREDIENTS","DELETE_CONSTRUCTOR_INGREDIENTS","MOVE_CONSTRUCTOR_INGREDIENTS","RESET_CONSTRUCTOR","api","headers","ingredientsRequest","a","fetch","getOrder","orderItems","method","body","JSON","stringify","ingredients","handleResponse","res","ok","json","then","err","Promise","reject","authApi","serverUrl","this","email","password","Authorization","Accept","token","data","GET_ORDER_REQUEST","GET_ORDER_SUCCESS","SET_ORDER_ERROR","BurgerConstructorItem","burger","index","locked","dropRef","useRef","useDrop","accept","handlerId","getHandlerId","hover","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","clientOffset","getClientOffset","hoverClientY","y","drop","drag","constructorItemStyles","itemWrapper","thumbnail","isLocked","handleClose","BurgerConstructorItems","key","uuidv4","onDropHandler","dropTarget","constructorItemsStyles","ul","OrderDetails","orderNum","store","order","number","stylesOrderDetails","orderWrapper","doneImage","ModalOverlay","onClose","stylesModalOverlay","overlay","Modal","open","children","title","onKeydown","event","addEventListener","removeEventListener","ReactDom","createPortal","modalStyles","modalHeader","modalHeaderWrapper","headerText","button","getRefreshTokenFromCookie","cookie","replace","getAccessTokenFromCookie","setCookie","accessToken","split","refreshToken","BurgerConstructor","history","loginSuccess","auth","isRefreshToken","isOpen","setIsOpen","orderSend","ingredientsIds","element","openOrder","status","success","catch","push","orderModal","totalPrice","useMemo","reduce","acc","constructorStyles","items","totalWrapper","IngredientDetails","id","useParams","itemData","find","currentIngredient","viewedIngredient","stylesIngredientDetails","ingredientContainer","list","calories","caloriesNum","proteins","fat","carbohydrates","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_ERROR","ProtectedRoute","rest","isLogin","render","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAIL","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAIL","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAIL","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAIL","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAIL","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_FAIL","REFRESH_TOKEN_REQUEST","REFRESH_TOKEN_SUCCESS","REFRESH_TOKEN_FAIL","console","log","getUserInfo","user","message","tokenRefresh","tokenAccess","updateUserInfo","ForgotPasswordPage","setEmail","forgotPasswordSuccess","from","loginWrapper","loginContent","formTitle","onSubmit","e","preventDefault","forgotPassword","form","inputWrapper","placeholder","onChange","target","submitWrapper","paragraph","ResetPasswordPage","setPassword","setToken","useHistory","resetPasswordSuccess","resetPassword","LoginPage","loginStyles","login","ProfileOrderPage","ProfilePage","userInfo","setUserInfo","isUserInfoChanged","setIsUserInfoChanged","handleChangeUserInfo","inputName","prev","logoutSuccess","profileStyles","linkContainer","linkActive","logout","formContainer","disabled","buttonContainer","IngredientDetailsPage","container","ProfileOrdersPage","RegisterPage","setName","registerSuccess","register","App","action","mainStyles","DndProvider","backend","HTML5Backend","initialStateAllIngredients","ingredientsFailed","initialStateConstructorIngredients","initialStateViewedIngredient","initialStateOrder","orderRequest","orderFailed","authInitialState","registerRequest","registerError","loginRequest","loginError","forgotPasswordRequest","forgotPasswordError","resetPasswordRequest","resetPasswordError","logoutRequest","logoutError","refreshTokenRequest","refreshTokenSuccess","refreshTokenError","getUserInfoRequest","getUserInfoSuccess","getUserInfoError","updateUserInfoRequest","updateUserInfoSuccess","updateUserInfoError","rootReducer","combineReducers","elem","i","splice","enhancer","window","compose","applyMiddleware","thunk","createStore","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.f0e33713.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileLink\":\"ProfileHeader_profileLink__AF3AC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrapper\":\"BurgerConstructorItem_itemWrapper__3glNO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"ModalOverlay_overlay__3Zmwc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__3oxZb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientContainer\":\"IngredientDetails_ingredientContainer__3B6Yy\",\"image\":\"IngredientDetails_image__2WgZ6\",\"title\":\"IngredientDetails_title__2aCO9\",\"list\":\"IngredientDetails_list__2cDET\",\"calories\":\"IngredientDetails_calories___686P\",\"caloriesNum\":\"IngredientDetails_caloriesNum__yAzOL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"profile_section__3V6WD\",\"linkContainer\":\"profile_linkContainer__1Bkf3\",\"link\":\"profile_link__13c86\",\"linkActive\":\"profile_linkActive__2AN07\",\"form\":\"profile_form__3RJ5b\",\"formContainer\":\"profile_formContainer__2I6xV\",\"button\":\"profile_button__IsH0j\",\"paragraph\":\"profile_paragraph__3D9m3\",\"buttonContainer\":\"profile_buttonContainer__2qAtn\"};","import { NavLink } from 'react-router-dom';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './NavigationLink.module.css';\r\ninterface INavigationLink {\r\n    path:string;\r\n    text:string;\r\n    icon:any;\r\n}\r\nconst NavigationLink:React.FC<INavigationLink>=({ icon: Component, text, path })=> {\r\n    return (\r\n        <span className={`${styles.link} text_color_inactive pl-5 pr-5 pt-4 pb-4 mt-4 mb-4`}>\r\n      <Component type=\"secondary\" />\r\n      <NavLink\r\n          className={`${styles.linkText} text text_type_main-default text_color_inactive ml-2`}\r\n          activeClassName={styles.linkTextActive}\r\n          to={path}\r\n          exact={true}\r\n      >\r\n        {text}\r\n      </NavLink>\r\n    </span>\r\n    );\r\n}\r\n\r\n/*NavigationLink.propTypes = {\r\n    icon: PropTypes.elementType.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    path: PropTypes.string.isRequired,\r\n};*/\r\n\r\nexport default NavigationLink;\r\n","import { BurgerIcon, ListIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport NavigationLink from '../NavigationLink/NavigationLink';\r\n\r\nimport styles from './Navigation.module.css';\r\n\r\nfunction Navigation() {\r\n    return (\r\n        <nav className={styles.navigation}>\r\n            <NavigationLink icon={BurgerIcon} text=\"Конструктор\" path=\"/\" />\r\n            <NavigationLink icon={ListIcon} text=\"Лента заказов\" path=\"/feed\" />\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import NavigationLink from '../NavigationLink/NavigationLink';\r\nimport { ProfileIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport styles from './ProfileHeader.module.css'\r\n\r\nfunction ProfileHeader() {\r\n    return (\r\n        <div className={styles.profileLink}>\r\n            <NavigationLink icon={ProfileIcon} text=\"Личный кабинет\" path=\"/profile\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileHeader;\r\n","import { Link } from 'react-router-dom';\r\nimport { Logo } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport ProfileHeader from \"../ProfileHeader/ProfileHeader\";\r\nimport styles from './AppHeader.module.css';\r\n\r\nfunction AppHeader() {\r\n    return (\r\n        <header className={styles.header}>\r\n            <div className={styles.headerContainer}>\r\n                <Navigation />\r\n                <Link to=\"/\">\r\n                    <Logo />\r\n                </Link>\r\n                <ProfileHeader/>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default AppHeader;\r\n","export const ADD_VIEWED_INGREDIENT_DATA = \"ADD_VIEWED_INGREDIENT_DATA\";\r\nexport const REMOVE_VIEWED_INGREDIENT_DATA =\"REMOVE_VIEWED_INGREDIENT_DATA\";\r\n    export function getViewedIngredient(ingredientItem) {\r\n        return {\r\n            type: ADD_VIEWED_INGREDIENT_DATA,\r\n            payload: ingredientItem,\r\n        };\r\n    }\r\n","import React from 'react';\r\nimport {Counter, CurrencyIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport cardStyles  from './Card.module.css'\r\nimport {cardPropTypes} from \"../../propTypes/propTypes\";\r\nimport PropTypes from \"prop-types\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ADD_VIEWED_INGREDIENT_DATA} from \"../../services/actions/viewedIngredient\";\r\nimport {DragSourceMonitor, useDrag} from \"react-dnd\";\r\nimport {Link, useLocation} from \"react-router-dom\";\r\nimport {IItem} from \"../../services/types/types\";\r\ninterface ICard {\r\n    card:IItem;\r\n    onCardClick: (card:IItem)=>void;\r\n}\r\n\r\nconst Card : React.FC<ICard> =  ({card, onCardClick}) => {\r\n    const dispatch=useDispatch();\r\n    const  {constructorIngredients, isBun}=useSelector((state:any)=>({\r\n        constructorIngredients: state.constructorIngredients.constructorIngredients,\r\n        isBun: state.constructorIngredients.isBun,\r\n    }))\r\n    const [{isDrag}, dragRef] = useDrag({\r\n        type: 'item',\r\n        item: card,\r\n        collect: (monitor) => ({\r\n            isDrag: monitor.isDragging()\r\n        })\r\n    });\r\n    function handleClick() {\r\n        dispatch({\r\n            type: ADD_VIEWED_INGREDIENT_DATA,\r\n            payload: card,\r\n        });\r\n        onCardClick(card);\r\n        return false;\r\n    };\r\n\r\n    const count = card.type === 'bun' && isBun?._id === card._id ? 2 : card.type !== 'bun' ? constructorIngredients.filter(\r\n            (item: { _id: string|undefined; })=> item._id === card._id).length\r\n        : 0;\r\n\r\n    const location = useLocation();\r\n    const ingredientId = card['_id'];\r\n    return (\r\n\r\n                    <Link\r\n                        className={[\"mr-2 ml-4 mt-6 mb-10\",cardStyles.card].join(' ')}\r\n                        ref={dragRef}\r\n                        to={{\r\n                            pathname: `/ingredients/${ingredientId}`,\r\n                            state: {background: location},\r\n                        }}\r\n                        onClick={handleClick}\r\n                    >\r\n                    <div className={cardStyles.counter}>\r\n                        <Counter count={count} size=\"default\" />\r\n                    </div>\r\n                    <img src={card.image} alt={card.name} className={[\"pr-4 pl-4\", cardStyles.pic].join(' ')} />\r\n                    <div className={[\"pt-1 pb-1\", cardStyles.price].join(' ')}>\r\n                        <p className={[\"pr-2 text text_type_digits-default\", cardStyles.priceNum].join(' ')}>{card.price}</p>\r\n                        <CurrencyIcon type=\"primary\" />\r\n                    </div>\r\n                    <p className={[\"text text_type_main-default\",cardStyles.name].join(' ')}>{card.name}</p>\r\n                </Link>\r\n    );\r\n};\r\n\r\n/*Card.propTypes = {\r\n   card: cardPropTypes.isRequired,\r\n    onCardClick: PropTypes.func.isRequired,\r\n};*/\r\n\r\nexport default Card;","import React, {useEffect, useMemo, FC} from 'react';\r\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport burgerIngredientsStyles from './BurgerIngredients.module.css'\r\nimport Card from \"../Card/Card\";\r\nimport PropTypes from \"prop-types\";\r\nimport {useSelector} from \"react-redux\";\r\nimport { useInView } from 'react-intersection-observer';\r\nimport {IItem} from \"../../services/types/types\";\r\n\r\n\r\ninterface IBurgerIngredients {\r\n    onCardClick: ()=>void;\r\n}\r\nconst BurgerIngredients: FC<IBurgerIngredients> = ({onCardClick}) => {\r\n    const [current, setCurrent] = React.useState<string>('one')\r\n    const {  allIngredients,constructorIngredients, isBun } = useSelector((state:any) => ({\r\n        allIngredients: state.allIngredients.allIngredients,\r\n        constructorIngredients: state.constructorIngredients.constructorIngredients,\r\n        isBun: state.constructorIngredients.isBun,\r\n    }));\r\n\r\n    const [bunRef, inViewBuns] = useInView({ threshold: 0 });\r\n    const [sauceRef, inViewSauces] = useInView({ threshold: 0 });\r\n    const [mainRef, inViewMains] = useInView({ threshold: 0 });\r\n    useEffect(() => {\r\n        if (inViewBuns) {\r\n            setCurrent(\"one\");\r\n        }\r\n        else if (inViewSauces) {\r\n            setCurrent(\"two\");\r\n        }\r\n        else if (inViewMains) {\r\n            setCurrent(\"three\");\r\n        }\r\n    }, [inViewBuns, inViewSauces, inViewMains]);\r\n    const setTab = (tab:string) => {\r\n        setCurrent(tab);\r\n        const item = document.getElementById(tab);\r\n        if (item) item.scrollIntoView({ behavior: \"smooth\" });\r\n    };\r\n    const bun = allIngredients.filter((item:IItem) => {\r\n        return item.type === \"bun\";\r\n    });\r\n    const sauce = allIngredients.filter((item:IItem) => {\r\n        return item.type === \"sauce\";\r\n    });\r\n    const main = allIngredients.filter((item:IItem) => {\r\n        return item.type === \"main\";\r\n    });\r\n\r\n\r\n    return (\r\n        <section className={[\"mr-10\",burgerIngredientsStyles.section].join(' ')}>\r\n            <p className=\"text text_type_main-large pb-5 pt-10\">\r\n                Соберите бургер\r\n            </p>\r\n            <nav>\r\n                <div style={{ display: 'flex' }} className=\"pb-10\">\r\n                    <Tab value=\"one\" active={current === 'one'} onClick={setTab}>\r\n                        Булки\r\n                    </Tab>\r\n                    <Tab value=\"two\" active={current === 'two'} onClick={setTab}>\r\n                        Соусы\r\n                    </Tab>\r\n                    <Tab value=\"three\" active={current === 'three'} onClick={setTab}>\r\n                        Начинки\r\n                    </Tab>\r\n                </div>\r\n            </nav>\r\n            <div>\r\n                <div className={burgerIngredientsStyles.scroll}>\r\n                    <section ref={bunRef} >\r\n                        <p className=\"text text_type_main-medium\">\r\n                        Булки\r\n                        </p>\r\n                        <div className={burgerIngredientsStyles.cards}>\r\n                        {bun&&bun.map((card:IItem) => {\r\n                            return <Card card={card} key={card._id}  onCardClick={onCardClick}   />\r\n                        }\r\n                        )}\r\n                        </div>\r\n                    </section>\r\n                    <section ref={sauceRef}>\r\n                        <p className=\"text text_type_main-medium\">\r\n                        Соусы\r\n                        </p>\r\n                        <div className={burgerIngredientsStyles.cards}>\r\n                        {sauce.map((card:IItem) => {\r\n                            return <Card card={card} key={card._id} onCardClick={onCardClick}/>\r\n                            }\r\n                        )}\r\n                        </div>\r\n                    </section>\r\n                    <section ref={mainRef}>\r\n                        <p className=\"text text_type_main-medium\">\r\n                        Начинки\r\n                        </p>\r\n                        <div className={burgerIngredientsStyles.cards}>\r\n                        {main.map((card:IItem) => {\r\n                            return <Card card={card} key={card._id}  onCardClick={onCardClick}/>\r\n                        }\r\n                    )}\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n            </div>\r\n\r\n        </section>\r\n    );\r\n};\r\n/*BurgerIngredients.propTypes = {\r\n    onCardClick: PropTypes.func.isRequired,\r\n};*/\r\n\r\nexport default BurgerIngredients;","export const ADD_CONSTRUCTOR_INGREDIENTS_BUN='ADD_CONSTRUCTOR_INGREDIENTS_BUN';\r\nexport const ADD_CONSTRUCTOR_INGREDIENTS='ADD_CONSTRUCTOR_INGREDIENTS';\r\nexport const DELETE_CONSTRUCTOR_INGREDIENTS='DELETE_CONSTRUCTOR_INGREDIENTS';\r\nexport const MOVE_CONSTRUCTOR_INGREDIENTS='MOVE_CONSTRUCTOR_INGREDIENTS';\r\nexport const RESET_CONSTRUCTOR='RESET_CONSTRUCTOR';","const api = 'https://norma.nomoreparties.space/api';\r\nconst headers= { 'Content-Type': 'application/json'};\r\nexport const ingredientsRequest = async () => {\r\n    return await fetch(`${api}/ingredients`)\r\n};\r\nexport const getOrder = async (orderItems:string[]) => {\r\n    return await fetch(`${api}/orders`, {\r\n        method: 'POST',\r\n        headers,\r\n        body: JSON.stringify({ ingredients:orderItems })\r\n    });\r\n};\r\n\r\nexport const handleResponse=(res: Response) =>{\r\n    return res.ok ? res.json() : res.json().then((err) => Promise.reject(err));\r\n};\r\n\r\nclass AuthApi {\r\n    private serverUrl: string;\r\n    constructor({ serverUrl}:{serverUrl:string}) {\r\n        this.serverUrl = serverUrl;\r\n    }\r\n\r\n    register(email:string, password:string, name:string) {\r\n        return fetch(`${this.serverUrl}/auth/register`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Authorization: '',\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ email, password, name }),\r\n        }).then(handleResponse);\r\n    }\r\n\r\n    login(email:string, password:string) {\r\n        return fetch(`${this.serverUrl}/auth/login`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Authorization: '',\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',},\r\n            body: JSON.stringify({ email, password }),\r\n        }).then(handleResponse);\r\n    }\r\n\r\n    forgotPassword(email:string) {\r\n        return fetch(`${this.serverUrl}/password-reset`, {\r\n            method: 'POST',\r\n            headers:{\r\n                Authorization: '',\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',},\r\n            body: JSON.stringify({ email }),\r\n        }).then(handleResponse);\r\n    }\r\n\r\n    resetPassword(password:string, token:string) {\r\n        return fetch(`${this.serverUrl}/password-reset/reset`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Authorization: '',\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ password, token }),\r\n        }).then(handleResponse);\r\n    }\r\n\r\n    logout(token:string) {\r\n        return fetch(`${this.serverUrl}/auth/logout`, {\r\n            method: 'POST',\r\n            headers:{\r\n                Authorization: '',\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ token }),\r\n        }).then(handleResponse);\r\n    }\r\n\r\n    refreshToken(token:string) {\r\n        return fetch(`${this.serverUrl}/auth/token`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Authorization: '',\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ token }),\r\n        }).then(handleResponse);\r\n    }\r\n\r\n    getUserInfo(token:string) {\r\n        return fetch(`${this.serverUrl}/auth/user`, {\r\n            method: 'GET',\r\n            headers: { Authorization: `Bearer ${token}`,\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json', },\r\n        })\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                return data;\r\n            });\r\n    }\r\n\r\n    updateUserInfo(token:string, name:string, email:string, password:string) {\r\n        return fetch(`${this.serverUrl}/auth/user`, {\r\n            method: 'PATCH',\r\n            headers:\r\n                { Authorization: `Bearer ${token}`,\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json', },\r\n            body: JSON.stringify({\r\n                name: name,\r\n                email: email,\r\n                password: password,\r\n            }),\r\n        })\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                return data;\r\n            });\r\n    }\r\n}\r\n\r\nconst authApi = new AuthApi({\r\n    serverUrl: api,\r\n});\r\n\r\nexport default authApi;","import {getOrder} from \"../api/api\";\r\n\r\nexport const GET_ORDER_REQUEST = 'GET_ORDER_REQUEST';\r\nexport const GET_ORDER_SUCCESS = 'GET_ORDER_SUCCESS';\r\nexport const SET_ORDER_ERROR='SET_ORDER_ERROR';\r\n\r\nexport const getOrderNum=(orderItems, openOrder) => {\r\n    return function(dispatch) {\r\n        dispatch({\r\n            type: GET_ORDER_REQUEST,\r\n        });\r\n        getOrder(orderItems)\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка ${res.status}`);\r\n            })\r\n            .then((res) => {\r\n                if (res && res.success) {\r\n                    dispatch({\r\n                        type: GET_ORDER_SUCCESS,\r\n                        number: res.order.number,\r\n                    });\r\n                    openOrder(true);\r\n\r\n                } else {\r\n                    dispatch({\r\n                        type: SET_ORDER_ERROR,\r\n                    });\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                dispatch({\r\n                    type: SET_ORDER_ERROR,\r\n                });\r\n            });\r\n    };\r\n}\r\n","import {ConstructorElement, DragIcon,} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {DropTargetMonitor, useDrag, useDrop} from \"react-dnd\";\r\nimport { useRef, FC } from \"react\";\r\nimport { MOVE_CONSTRUCTOR_INGREDIENTS, DELETE_CONSTRUCTOR_INGREDIENTS} from \"../../services/actions/constructorIngredients\";\r\nimport {cardPropTypes} from \"../../propTypes/propTypes\";\r\nimport constructorItemStyles from './BurgerConstructorItem.module.css'\r\nimport {IItem} from \"../../services/types/types\";\r\n\r\ninterface IBurgerConstructorItem {\r\n    type?: \"top\" | \"bottom\" ,\r\n    index: number,\r\n    burger: IItem,\r\n    locked?: boolean,\r\n}\r\nconst BurgerConstructorItem: FC<IBurgerConstructorItem>=({ type, burger, index, locked })=>{\r\n\r\n    const dispatch = useDispatch();\r\n    function handleClose() {\r\n        dispatch({\r\n            type: DELETE_CONSTRUCTOR_INGREDIENTS,\r\n            index: index,\r\n        });\r\n    }\r\n    const dropRef = useRef<HTMLDivElement>(null);\r\n    const [{ handlerId }, drop] = useDrop({\r\n        accept: \"ingredients\",\r\n        collect(monitor:DropTargetMonitor) {\r\n            return {\r\n                handlerId: monitor.getHandlerId(),\r\n            };\r\n        },\r\n        hover(item:{index: number}, monitor: DropTargetMonitor) {\r\n            if (!dropRef.current) {\r\n                return;\r\n            }\r\n            const dragIndex:number = item.index;\r\n            const hoverIndex = index;\r\n            if (!dragIndex || dragIndex === hoverIndex) {\r\n                return;\r\n            }\r\n            const hoverBoundingRect = dropRef.current.getBoundingClientRect();\r\n            const hoverMiddleY =\r\n                (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n            const clientOffset = monitor.getClientOffset();\r\n            if (!clientOffset) return;\r\n            const hoverClientY = clientOffset.y - hoverBoundingRect.top;\r\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n                return;\r\n            }\r\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n                return;\r\n            }\r\n\r\n            dispatch({\r\n                type: MOVE_CONSTRUCTOR_INGREDIENTS,\r\n                payload: { dragIndex, hoverIndex },\r\n            });\r\n            item.index = hoverIndex;\r\n        },\r\n    });\r\n    const [{ isDragging }, drag] = useDrag({\r\n        type: \"ingredients\",\r\n        item: () => {\r\n            return { burger, index };\r\n        },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    });\r\n\r\n    drag(drop(dropRef));\r\n\r\n    return (\r\n        <div ref={dropRef} data-handler-id={handlerId} className={ [\"mb-4\", constructorItemStyles.itemWrapper].join(' ')}>\r\n            {burger.type !== \"bun\" ? (<DragIcon type=\"primary\" />) : null}\r\n\r\n            <ConstructorElement\r\n\r\n                text={burger.type !== \"bun\"? burger?.name: type===\"top\"? burger?.name+\" (верх)\":burger?.name+\" (низ)\"}\r\n                price={burger?.price}\r\n                thumbnail={burger?.image}\r\n                type={type}\r\n                isLocked={locked}\r\n                handleClose={handleClose}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n/*BurgerConstructorItem.propTypes = {\r\n    type: PropTypes.string,\r\n    index: PropTypes.number,\r\n    burger: cardPropTypes.isRequired,\r\n    locked: PropTypes.bool\r\n};*/\r\n\r\nexport default BurgerConstructorItem;","import constructorItemsStyles from './BurgerConstructorItems.module.css'\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n    ADD_CONSTRUCTOR_INGREDIENTS,\r\n    ADD_CONSTRUCTOR_INGREDIENTS_BUN\r\n} from \"../../services/actions/constructorIngredients\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport BurgerConstructorItem from \"../BurgerConstructorItem/BurgerConstructorItem\";\r\nimport {IItem} from \"../../services/types/types\";\r\n\r\n\r\nfunction BurgerConstructorItems(){\r\n\r\n    const { constructorIngredients, isBun } = useSelector((state:any) => ({\r\n        constructorIngredients: state.constructorIngredients.constructorIngredients,\r\n        isBun: state.constructorIngredients.isBun,\r\n\r\n    }));\r\n    const dispatch = useDispatch();\r\n    const [, dropTarget] = useDrop({\r\n        accept: \"item\",\r\n        drop(item:IItem) {\r\n            onDropHandler(item);\r\n        },\r\n    });\r\n\r\n    function onDropHandler(item:IItem) {\r\n        if (item.type === \"bun\") {\r\n            dispatch({\r\n                type: ADD_CONSTRUCTOR_INGREDIENTS_BUN,\r\n                item: item,\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: ADD_CONSTRUCTOR_INGREDIENTS,\r\n                item: { ...item, key: uuidv4() },\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section  ref={dropTarget}>\r\n            <ul className={ constructorItemsStyles.ul}>\r\n                <li className={ constructorItemsStyles.item}>\r\n                    {(isBun)&& (\r\n                        <BurgerConstructorItem\r\n                            type=\"top\"\r\n                            burger={isBun}\r\n                            locked\r\n                            index={0}\r\n                        />\r\n                    )}\r\n                </li>\r\n                <div className={ constructorItemsStyles.scroll}>\r\n                    {constructorIngredients && (\r\n                            constructorIngredients.filter((item:IItem) => item.type !== \"bun\").map((item:IItem, index:number) => {\r\n                                    return (\r\n                                        <BurgerConstructorItem\r\n                                            key={item.key}\r\n                                            burger={item}\r\n                                            index={index}\r\n                                        />\r\n                                    );\r\n                                }))}\r\n                </div>\r\n                <li className={[\"pt-4\",  constructorItemsStyles.item].join(' ')}>\r\n                    <div className={ constructorItemsStyles.itemWrapper}>\r\n                        {isBun && (\r\n                            <BurgerConstructorItem\r\n                                type=\"bottom\"\r\n                                burger={isBun}\r\n                                locked\r\n                                index={0}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </li>\r\n\r\n            </ul>\r\n        </section>\r\n    );\r\n}\r\nexport default BurgerConstructorItems;","export default __webpack_public_path__ + \"static/media/done.05f77629.svg\";","import React from 'react';\r\nimport stylesOrderDetails from './OrderDetails.module.css'\r\nimport doneImage from '../../images/done.svg'\r\nimport {useSelector} from \"react-redux\";\r\n\r\n\r\nconst OrderDetails = () => {\r\n    const orderNum = useSelector((store:any) => store.order.order.number);\r\n\r\n    return (\r\n        <div className={stylesOrderDetails.orderWrapper}>\r\n            <div className={[\"mt-4 mb-8 text text_type_digits-large\",stylesOrderDetails.orderNum].join('  ')}>\r\n                 { orderNum }\r\n            </div>\r\n            <p className={[\"mb-15 text text_type_main-medium\", stylesOrderDetails.order].join('  ')}>\r\n                идентификатор заказа\r\n            </p>\r\n            <img src={doneImage} alt={'Готово'} className=\"mb-15\"/>\r\n            <p className={[\"mb-2 text text_type_main-default\", stylesOrderDetails.order].join('  ')}>\r\n                Ваш заказ начали готовить\r\n            </p>\r\n            <p className={[\"mb-30 text text_type_main-default text_color_inactive\", stylesOrderDetails.order].join('  ')}>\r\n                Дождитесь готовности на орбитальной станции\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderDetails;","import React from 'react';\r\nimport stylesModalOverlay from './ModalOverlay.module.css'\r\nimport PropTypes from \"prop-types\";\r\n\r\ninterface IModalOverlay {\r\n    onClose: () => void;\r\n}\r\nconst ModalOverlay: React.FC<IModalOverlay> = ({onClose}) => {\r\n    return (\r\n        <div className={stylesModalOverlay.overlay} onClick={onClose}>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ModalOverlay;","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport modalStyles from './Modal.module.css'\r\nimport {CloseIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport ModalOverlay from \"../ModalOverlay/ModalOverlay\";\r\nimport {useEffect} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\ninterface IModal {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    title:string;\r\n}\r\nconst Modal: React.FC<IModal>= ({ open, children, onClose, title })=>{\r\n    const onKeydown = (event:KeyboardEvent) => {\r\n        if(event.key === 'Escape'){\r\n            onClose()\r\n        }\r\n    }\r\n     useEffect(() => {\r\n         document.addEventListener('keydown', onKeydown)\r\n         return () => document.removeEventListener('keydown', onKeydown)\r\n     })\r\n    if (!open) return null\r\n\r\n    return ReactDom.createPortal(\r\n        <>\r\n\r\n            <ModalOverlay onClose={onClose}/>\r\n            <div className={[\"pr-10 pl-10 pt-10\", modalStyles.modalHeader].join(' ')}>\r\n                <div className={modalStyles.modalHeaderWrapper}>\r\n                    <h2 className={[\"text text_type_main-large\", modalStyles.headerText].join(' ')}>\r\n                        {title}\r\n                    </h2>\r\n                    <button onClick={onClose} className={modalStyles.button}>\r\n                        <CloseIcon type=\"primary\" />\r\n                    </button>\r\n                </div>\r\n                {children}\r\n            </div>\r\n        </>,\r\n        document.getElementById('portal')!\r\n    )\r\n}\r\n\r\n/*Modal.propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    children: PropTypes.node.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n};*/\r\n\r\nexport default Modal;\r\n","export function getRefreshTokenFromCookie() {\r\n    return document.cookie.replace(/(?:(?:^|.*;\\s*)refreshToken\\s*=\\s*([^;]*).*$)|^.*$/, '$1');\r\n}\r\nexport function getAccessTokenFromCookie() {\r\n    return document.cookie.replace(/(?:(?:^|.*;\\s*)accessToken\\s*=\\s*([^;]*).*$)|^.*$/, '$1');\r\n}\r\nexport function setCookie(data) {\r\n    const accessToken = data.accessToken.split('Bearer ')[1];\r\n    const refreshToken = data.refreshToken;\r\n    document.cookie = `accessToken=${accessToken}`;\r\n    document.cookie = `refreshToken=${refreshToken}`;\r\n}\r\n\r\n","import React, {useState, FC} from 'react';\r\nimport {  CurrencyIcon, Button} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport constructorStyles from './BurgerConstructor.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { RESET_CONSTRUCTOR} from \"../../services/actions/constructorIngredients\";\r\nimport {getOrderNum, SET_ORDER_ERROR} from \"../../services/actions/order\";\r\nimport BurgerConstructorItems from \"../BurgerConstructorItems/BurgerConstructorItems\";\r\nimport {useMemo} from \"react\";\r\nimport OrderDetails from \"../OrderDetails/OrderDetails\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport {getRefreshTokenFromCookie} from \"../../services/cookieFunctions\";\r\nimport { History } from 'history';\r\nimport {IItem} from \"../../services/types/types\";\r\n\r\ninterface IBurgerConstructor {\r\n    history : History\r\n}\r\n\r\nconst BurgerConstructor: FC<IBurgerConstructor> = ({history}) => {\r\n    const { loginSuccess } = useSelector((state:any) => state.auth);\r\n    const isRefreshToken = getRefreshTokenFromCookie();\r\n    const dispatch=useDispatch();\r\n    const { constructorIngredients, isBun } = useSelector((state:any) => ({\r\n        constructorIngredients: state.constructorIngredients.constructorIngredients,\r\n        isBun: state.constructorIngredients.isBun,\r\n\r\n    }));\r\n\r\n    const [isOpen, setIsOpen] = useState<boolean>(false)\r\n\r\n    const handleCloseModal = () => {\r\n        setIsOpen(false);\r\n    }\r\n    const orderSend=()=>{\r\n        if (loginSuccess || isRefreshToken) {\r\n            if(isBun!==null){\r\n                if (isBun._id) {\r\n            const ingredientsIds = [\r\n                ...constructorIngredients.map((element:{ _id: string|undefined; }) => element._id),\r\n                isBun._id,\r\n            ];\r\n            dispatch(getOrderNum(ingredientsIds, setIsOpen));\r\n\r\n\r\n            dispatch({\r\n                type: RESET_CONSTRUCTOR,\r\n            });\r\n\r\n        }\r\n        }\r\n        else {\r\n            dispatch({\r\n                type: SET_ORDER_ERROR,\r\n            });\r\n        }\r\n        }\r\n        else {\r\n            history.push('/login');\r\n        }\r\n    }\r\n\r\n    const orderModal= (\r\n        <Modal open={isOpen} onClose={handleCloseModal}  title={\"\"} >\r\n            <OrderDetails/>\r\n        </Modal>\r\n    )\r\n\r\n    const totalPrice = useMemo(() => {\r\n        return constructorIngredients.reduce(function (acc:number, item:IItem ) {\r\n            let totalPrice = item.price;\r\n            if (item.type === 'bun') {\r\n                totalPrice += item.price;\r\n            }\r\n            return acc + totalPrice;}, 0) + (isBun ? isBun.price * 2 : 0);\r\n    }, [constructorIngredients, isBun]);\r\n\r\n    return (\r\n\r\n        <>\r\n            <section className={[\"pt-25 pl-4 pr-4\", constructorStyles.items].join(' ')}>\r\n                <BurgerConstructorItems/>\r\n                    <div className={[\"pt-10\", constructorStyles.totalWrapper].join(' ')}>\r\n                        <div className={[\"pr-10\", constructorStyles.totalPrice].join(' ')}>\r\n                            <p className=\"text text_type_digits-medium\">\r\n                                {totalPrice ||0}\r\n                            </p>\r\n                            <CurrencyIcon type=\"primary\"/>\r\n                        </div>\r\n                        \r\n                        <Button type=\"primary\" size=\"large\" onClick={()=>{\r\n                            orderSend();\r\n                        }}>\r\n                            Оформить заказ\r\n                        </Button>\r\n                        {isOpen&&orderModal}\r\n                    </div>\r\n\r\n            </section>\r\n\r\n\r\n            </>\r\n    );\r\n};\r\n\r\n/*BurgerConstructor.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n};*/\r\n\r\nexport default BurgerConstructor;","import React from 'react';\r\nimport stylesIngredientDetails from \"./IngredientDetails.module.css\"\r\nimport {useSelector} from \"react-redux\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport  {useEffect} from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {getViewedIngredient} from \"../../services/actions/viewedIngredient\";\r\n\r\n\r\n\r\nconst IngredientDetails = () => {\r\n\r\n    const { id } = useParams<{id: string}>();\r\n    const dispatch = useDispatch();\r\n    const ingredients = useSelector((state:any) => state.allIngredients);\r\n\r\n    useEffect(() => {\r\n            const itemData = ingredients.allIngredients?.find((item: { _id: string|undefined; }) => item._id === id);\r\n            itemData && dispatch(getViewedIngredient(itemData));\r\n        }, [id,ingredients.allIngredients]\r\n    );\r\n\r\n\r\n    const currentIngredient = useSelector((state:any) => state.viewedIngredient.currentIngredient);\r\n\r\n\r\n\r\n    return (\r\n        <div className={stylesIngredientDetails.ingredientContainer}>\r\n            <img src={currentIngredient.image} alt={currentIngredient.name} className={[\"mb-4\",stylesIngredientDetails.image].join(' ')}/>\r\n            <h3 className={[\"text text_type_main-medium mb-8\", stylesIngredientDetails.title].join(' ')}>\r\n                {currentIngredient.name}\r\n            </h3>\r\n            <ul className={[\"mb-15\",stylesIngredientDetails.list ].join(' ')}>\r\n                <li className={[\"mr-5\",stylesIngredientDetails.calories].join(' ')}>\r\n                    <p className=\"text text_type_main-default\">\r\n                        Калории,ккал\r\n                    </p>\r\n                    <p className={[\"mt-2 text text_type_digits-default\", stylesIngredientDetails.caloriesNum].join(' ')}>\r\n                        {currentIngredient.calories}\r\n                    </p>\r\n\r\n                </li>\r\n                <li className={[\"mr-5 text text_type_digits-default\",stylesIngredientDetails.calories].join(' ')}>\r\n                    <p className=\"text text_type_main-default\">\r\n                        Белки, г\r\n                    </p>\r\n                    <p className={[\"mt-2 text text_type_digits-default\", stylesIngredientDetails.caloriesNum].join(' ')}>\r\n                        {currentIngredient.proteins}\r\n                    </p>\r\n\r\n                </li>\r\n                <li className={[\"mr-5\",stylesIngredientDetails.calories].join(' ')}>\r\n                    <p className=\"text text_type_main-default\">\r\n                        Жиры, г\r\n                    </p>\r\n                    <p className={[\"mt-2 text text_type_digits-default\" , stylesIngredientDetails.caloriesNum].join(' ')}>\r\n                        {currentIngredient.fat}\r\n                    </p>\r\n                </li>\r\n                <li className={stylesIngredientDetails.calories}>\r\n                    <p className=\"text text_type_main-default\">\r\n                        Углеводы, г\r\n                    </p>\r\n                    <p className={[\"mt-2 text text_type_digits-default\", stylesIngredientDetails.caloriesNum].join(' ')}>\r\n                        {currentIngredient.carbohydrates}\r\n                    </p>\r\n                </li>\r\n            </ul>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default IngredientDetails;","import {ingredientsRequest} from \"../api/api\";\r\n\r\nexport const GET_INGREDIENTS_REQUEST = 'GET_INGREDIENTS_REQUEST';\r\nexport const GET_INGREDIENTS_SUCCESS = 'GET_INGREDIENTS_SUCCESS';\r\nexport const GET_INGREDIENTS_ERROR = 'GET_INGREDIENTS_ERROR';\r\n\r\nexport function getIngredients() {\r\n    return function(dispatch) {\r\n        dispatch({\r\n            type: GET_INGREDIENTS_REQUEST\r\n        });\r\n        ingredientsRequest()\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка ${res.status}`);\r\n            })\r\n            .then((res) => {\r\n                if (res && res.success) {\r\n                    dispatch({\r\n                        type: GET_INGREDIENTS_SUCCESS,\r\n                        allIngredients: res.data,\r\n                    });\r\n                } else {\r\n                    dispatch({\r\n                        type: GET_INGREDIENTS_ERROR,\r\n                    });\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                dispatch({\r\n                    type: GET_INGREDIENTS_ERROR,\r\n                });\r\n            });\r\n    };\r\n}","import { Route, Redirect } from 'react-router-dom';\r\nimport {getRefreshTokenFromCookie} from \"../../services/cookieFunctions\";\r\nimport React, { FC }  from \"react\";\r\n\r\ninterface IProtectedRoute {\r\n    path:string;\r\n    exact: boolean;\r\n}\r\n\r\nconst ProtectedRoute: FC<IProtectedRoute>=({ children, ...rest })=> {\r\n    const isLogin = !!getRefreshTokenFromCookie();\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(location) => {\r\n                return isLogin ? (children) : (<Redirect to={{ pathname: '/login'}} />);\r\n            }}\r\n        />\r\n    );\r\n}\r\n\r\nexport default ProtectedRoute;","import {getAccessTokenFromCookie, getRefreshTokenFromCookie, setCookie} from \"../cookieFunctions\";\r\nimport authApi from \"../api/api\";\r\n\r\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\n\r\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL';\r\n\r\nexport const REGISTER_REQUEST = 'REGISTER_REQUEST';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\n\r\nexport const FORGOT_PASSWORD_REQUEST = 'FORGOT_PASSWORD_REQUEST';\r\nexport const FORGOT_PASSWORD_SUCCESS = 'FORGOT_PASSWORD_SUCCESS';\r\nexport const FORGOT_PASSWORD_FAIL = 'FORGOT_PASSWORD_FAIL';\r\n\r\nexport const RESET_PASSWORD_REQUEST = 'RESET_PASSWORD_REQUEST';\r\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS';\r\nexport const RESET_PASSWORD_FAIL = 'RESET_PASSWORD_FAIL';\r\n\r\nexport const GET_USER_REQUEST = 'GET_USER_REQUEST';\r\nexport const GET_USER_SUCCESS = 'GET_USER_SUCCESS';\r\nexport const GET_USER_FAIL = 'GET_USER_FAIL';\r\n\r\nexport const UPDATE_USER_REQUEST = 'UPDATE_USER_REQUEST';\r\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS';\r\nexport const UPDATE_USER_FAIL = 'UPDATE_USER_FAIL';\r\n\r\nexport const REFRESH_TOKEN_REQUEST = 'REFRESH_TOKEN_REQUEST';\r\nexport const REFRESH_TOKEN_SUCCESS = 'REFRESH_TOKEN_SUCCESS';\r\nexport const REFRESH_TOKEN_FAIL = 'REFRESH_TOKEN_ERROR';\r\n\r\nexport function register(email, password, name) {\r\n    return function (dispatch) {\r\n        dispatch({ type: REGISTER_REQUEST });\r\n\r\n        return authApi\r\n            .register(email, password, name)\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    dispatch({\r\n                        type: REGISTER_SUCCESS,\r\n                        user: data.user,\r\n                        accessToken: data.accessToken.split('Bearer ')[1],\r\n                        refreshToken: data.refreshToken,\r\n                    });\r\n                    setCookie(data);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                dispatch({ type: REGISTER_FAIL });\r\n            });\r\n    };\r\n}\r\n\r\nexport function login(email, password) {\r\n    return function (dispatch) {\r\n        dispatch({ type: LOGIN_REQUEST });\r\n\r\n        return authApi\r\n            .login(email, password)\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    dispatch({\r\n                        type: LOGIN_SUCCESS,\r\n                        user: data.user,\r\n                        accessToken: data.accessToken.split('Bearer ')[1],\r\n                        refreshToken: data.refreshToken,\r\n                    });\r\n                    setCookie(data);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                dispatch({ type: LOGIN_FAIL });\r\n            });\r\n    };\r\n}\r\n\r\nexport function forgotPassword(email) {\r\n    return function (dispatch) {\r\n        dispatch({ type: FORGOT_PASSWORD_REQUEST });\r\n\r\n        return authApi\r\n            .forgotPassword(email)\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    console.log(data.message);\r\n                    dispatch({\r\n                        type: FORGOT_PASSWORD_SUCCESS,\r\n                    });\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                dispatch({ type: FORGOT_PASSWORD_FAIL });\r\n            });\r\n    };\r\n}\r\n\r\nexport function resetPassword(password, token) {\r\n    return function (dispatch) {\r\n        dispatch({ type: RESET_PASSWORD_REQUEST });\r\n\r\n        return authApi\r\n            .resetPassword(password, token)\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    console.log(data.message);\r\n                    dispatch({\r\n                        type: RESET_PASSWORD_SUCCESS,\r\n                    });\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                dispatch({ type: RESET_PASSWORD_FAIL });\r\n            });\r\n    };\r\n}\r\nexport function logout(token) {\r\n    return function (dispatch) {\r\n        dispatch({ type: LOGOUT_REQUEST });\r\n\r\n        return authApi\r\n            .logout(token)\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    console.log(data.message);\r\n                    dispatch({\r\n                        type: LOGOUT_SUCCESS,\r\n                    });\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                dispatch({ type: LOGOUT_FAIL });\r\n            });\r\n    };\r\n}\r\n\r\nexport function refreshToken(token) {\r\n    return function (dispatch) {\r\n        dispatch({ type: REFRESH_TOKEN_REQUEST });\r\n\r\n        return authApi\r\n            .refreshToken(token)\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    const accessToken = data.accessToken.split('Bearer ')[1];\r\n                    const refreshToken = data.refreshToken;\r\n                    document.cookie = `accessToken=${accessToken}`;\r\n                    document.cookie = `refreshToken=${refreshToken}`;\r\n                    dispatch({\r\n                        type: REFRESH_TOKEN_SUCCESS,\r\n                        accessToken: accessToken,\r\n                        refreshToken: refreshToken,\r\n                    });\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                dispatch({ type: REFRESH_TOKEN_FAIL });\r\n            });\r\n    };\r\n}\r\n\r\nexport function getUserInfo(token) {\r\n    return function (dispatch) {\r\n        dispatch({ type: GET_USER_REQUEST });\r\n\r\n        return authApi\r\n            .getUserInfo(token)\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    dispatch({\r\n                        type: GET_USER_SUCCESS,\r\n                        user: data.user,\r\n                    });\r\n                } else {\r\n                    throw data;\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                if (err.message === 'jwt expired') {\r\n                    const tokenRefresh = getRefreshTokenFromCookie();\r\n                    dispatch(refreshToken(tokenRefresh));\r\n                    const tokenAccess = getAccessTokenFromCookie();\r\n                    dispatch(getUserInfo(tokenAccess));\r\n                } else {\r\n                    console.log(err);\r\n                }\r\n                dispatch({ type: GET_USER_FAIL });\r\n            });\r\n    };\r\n}\r\n\r\nexport function updateUserInfo(token, name, email, password) {\r\n    return function (dispatch) {\r\n        dispatch({ type: UPDATE_USER_REQUEST });\r\n\r\n        return authApi\r\n            .updateUserInfo(token, name, email, password)\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    dispatch({\r\n                        type: UPDATE_USER_SUCCESS,\r\n                        user: { name, email, password },\r\n                    });\r\n                } else {\r\n                    throw data;\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                if (err.message === 'jwt expired') {\r\n                    const tokenRefresh = getRefreshTokenFromCookie();\r\n                    dispatch(refreshToken(tokenRefresh));\r\n                    const tokenAccess = getAccessTokenFromCookie();\r\n                    dispatch(updateUserInfo(tokenAccess, name, email, password));\r\n                } else {\r\n                    console.log(err);\r\n                }\r\n                dispatch({ type: UPDATE_USER_FAIL });\r\n            });\r\n    };\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport styles from \"./forgot-password.module.css\"\r\nimport {Button, Input} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport {Link, Redirect,  useLocation} from 'react-router-dom';\r\nimport {forgotPassword} from '../services/actions/auth';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getRefreshTokenFromCookie} from \"../services/cookieFunctions\";\r\nimport {useState} from \"react\";\r\nimport {TLocationState} from \"../services/types/types\";\r\n\r\n\r\n const  ForgotPasswordPage = () => {\r\n    const dispatch = useDispatch();\r\n    const [email, setEmail] = useState<string>('');\r\n    const location = useLocation<TLocationState>();\r\n\r\n    const formSubmit = (e:React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        dispatch(forgotPassword(email));\r\n        setEmail('');\r\n    };\r\n    const { forgotPasswordSuccess } = useSelector((state:any) => state.auth);\r\n\r\n    const isLogin = !!getRefreshTokenFromCookie();\r\n\r\n    if (forgotPasswordSuccess) {\r\n        return <Redirect to={{ pathname: '/reset-password', state: { from: location } }} />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {isLogin ? (\r\n                <Redirect to=\"/\" />\r\n            ) : (\r\n        <div className={styles.loginWrapper}>\r\n            <div className={styles.loginContent}>\r\n                <p className={`text text_type_main-medium ${styles.formTitle}`}>Восстановление пароля</p>\r\n                <form onSubmit={formSubmit} className={styles.form}>\r\n                    <div className={styles.inputWrapper}>\r\n                        <Input\r\n                            value={email}\r\n                            name={'email'}\r\n                            type={'email'}\r\n                            placeholder={'Укажите e-mail'}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            size={'default'}\r\n                        />\r\n                    </div>\r\n                    <div className={styles.submitWrapper}>\r\n                        <Button type=\"primary\" size=\"medium\">\r\n                            Восстановить\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n                <div>\r\n                    <p className={`text text_type_main-default ${styles.paragraph}`}>Вспомнили пароль? <Link\r\n                        className={styles.link} to=\"/login\">Войти</Link></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n            )};\r\n            </>\r\n        );\r\n}\r\nexport default ForgotPasswordPage;","import React, { useState} from 'react';\r\nimport styles from \"./reset-password.module.css\";\r\nimport {Button, Input, PasswordInput} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport {Link, Redirect, useHistory, useLocation} from 'react-router-dom';\r\nimport {resetPassword} from '../services/actions/auth';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getRefreshTokenFromCookie} from \"../services/cookieFunctions\";\r\nimport {TLocationState} from \"../services/types/types\";\r\n\r\nconst ResetPasswordPage = () => {\r\n    const [password, setPassword] = useState<string>('');\r\n    const [token, setToken] = useState<string>('');\r\n    const history = useHistory();\r\n    const location = useLocation<TLocationState>();\r\n    const isLogin = !!getRefreshTokenFromCookie();\r\n    const dispatch = useDispatch();\r\n    const formSubmit = (e:React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        dispatch(resetPassword(password, token));\r\n        setPassword('');\r\n        setToken('');\r\n    };\r\n    const { resetPasswordSuccess } = useSelector((state:any) => state.auth);\r\n\r\n    if (resetPasswordSuccess) {\r\n        return <Redirect to=\"/login\" />;\r\n    }\r\n\r\n    if (!location.state) {\r\n        history.push('/');\r\n    }\r\n    return (\r\n        <>\r\n            {isLogin ? (\r\n                <Redirect to=\"/\"/>\r\n            ) : (\r\n                <div className={styles.loginWrapper}>\r\n                    <div className={styles.loginContent}>\r\n                        <p className={`text text_type_main-medium ${styles.formTitle}`}>Восстановление пароля</p>\r\n                        <form onSubmit={formSubmit} className={styles.form}>\r\n                            <div className={styles.inputWrapper}>\r\n                                <PasswordInput\r\n                                    name={'password'}\r\n                                    value={password}\r\n                                    onChange={e => setPassword(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className={styles.inputWrapper}>\r\n                                <Input\r\n                                    type={'text'}\r\n                                    placeholder={'Введите код из письма'}\r\n                                    onChange={e => setToken(e.target.value)}\r\n                                    name={'code'}\r\n                                    size={'default'}\r\n                                    value={token}\r\n                                />\r\n                            </div>\r\n                            <div className={styles.submitWrapper}>\r\n                                <Button type=\"primary\" size=\"medium\">\r\n                                    Сохранить\r\n                                </Button>\r\n                            </div>\r\n                        </form>\r\n                        <div>\r\n                            <p className={`text text_type_main-default ${styles.paragraph}`}>Вспомнили пароль? <Link\r\n                                className={styles.link} to=\"/login\">Войти</Link></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\nexport default ResetPasswordPage;","import React, {useState} from 'react';\r\nimport loginStyles from './login.module.css'\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {login} from '../services/actions/auth'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Input, PasswordInput, Button} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport {getRefreshTokenFromCookie} from \"../services/cookieFunctions\";\r\n\r\n\r\n const LoginPage = () => {\r\n    const dispatch = useDispatch();\r\n    const [email, setEmail] = useState<string>('');\r\n    const [password, setPassword] = useState<string>('');\r\n\r\n    const onSubmit = (e:React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password));\r\n        setEmail('');\r\n        setPassword('');\r\n    }\r\n    const { loginSuccess } = useSelector((state:any) => state.auth);\r\n\r\n    if (loginSuccess) {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n    const isLogin = !!getRefreshTokenFromCookie();\r\n\r\n    return (\r\n        <>\r\n            {isLogin ? (\r\n                <Redirect to=\"/\" />\r\n            ) : (\r\n        <div className={loginStyles.loginWrapper}>\r\n            <div className={loginStyles.loginContent}>\r\n                <p className={`text text_type_main-medium ${loginStyles.formTitle}`}>Вход</p>\r\n                <form onSubmit={onSubmit} className={loginStyles.form}>\r\n                    <div className={'mb-6'}>\r\n                        <Input\r\n                            value={email}\r\n                            name={'email'}\r\n                            type={'email'}\r\n                            placeholder={'E-mail'}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            size={'default'}\r\n                        />\r\n                    </div>\r\n                    <div className={'mb-6'}>\r\n                        <PasswordInput\r\n                            value={password}\r\n                            name={'password'}\r\n                            size={'default'}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className={loginStyles.submitWrapper}>\r\n                        <Button type=\"primary\" size=\"medium\">\r\n                            Вход\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n                <div>\r\n\r\n                    <p className={[\"text text_type_main-default\", loginStyles.text].join(' ')}>\r\n                        Вы — новый пользователь?\r\n                        <Link className={loginStyles.link} to=\"/register\">\r\n                            Зарегистрироваться\r\n                        </Link>\r\n                    </p>\r\n                    <p className={[\"text text_type_main-default\", loginStyles.text].join(' ')}>\r\n                        Забыли пароль?\r\n                        <Link className={loginStyles.link} to=\"/forgot-password\">\r\n                            Восстановить пароль\r\n                        </Link>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\nexport default LoginPage;"," const ProfileOrderPage = () => {\r\n    return (\r\n        <div>Что в заказе</div>\r\n    )\r\n}\r\nexport default ProfileOrderPage;","import React, {useEffect} from \"react\";\r\nimport profileStyles from './profile.module.css';\r\nimport {NavLink, useHistory} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getAccessTokenFromCookie, getRefreshTokenFromCookie, setCookie} from \"../services/cookieFunctions\";\r\nimport {Button, Input} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {getUserInfo, logout, updateUserInfo} from \"../services/actions/auth\";\r\n\r\ninterface IUserInfo {\r\n    name: string;\r\n    email: string,\r\n    password: string,\r\n}\r\n\r\n const ProfilePage = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [userInfo, setUserInfo] = React.useState<IUserInfo>({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n    });\r\n    const [isUserInfoChanged, setIsUserInfoChanged] = React.useState<boolean>(false);\r\n    const handleSubmit = (e:React.SyntheticEvent<Element, Event>) => {\r\n        e.preventDefault();\r\n        const token = getAccessTokenFromCookie();\r\n        dispatch(updateUserInfo(token, userInfo.name, userInfo.email, userInfo.password));\r\n        setIsUserInfoChanged(false);\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        const token = getRefreshTokenFromCookie();\r\n        dispatch(logout(token));\r\n        setCookie({\r\n            accessToken: 'Bearer ',\r\n            refreshToken: '',\r\n        });\r\n        setUserInfo({ name: '', email: '', password: '' });\r\n    };\r\n\r\n    const handleChangeUserInfo = (e:React.SyntheticEvent<Element, Event>) => {\r\n        const target = e.target as HTMLInputElement;\r\n        const { name:  inputName } = target;\r\n        setUserInfo((prev) => ({\r\n            ...prev,\r\n            [inputName]: target.value,\r\n        }));\r\n        setIsUserInfoChanged(true);\r\n    };\r\n\r\n    const { logoutSuccess } = useSelector((state:any) => state.auth);\r\n    const { user } = useSelector((state:any) => state.auth);\r\n\r\n    useEffect(() => {\r\n        const token = getAccessTokenFromCookie();\r\n        dispatch(getUserInfo(token));\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        setUserInfo((prev) => ({\r\n            ...prev,\r\n            name: user.name,\r\n            email: user.email,\r\n        }));\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        if (logoutSuccess) {\r\n            history.push('/login');\r\n        }\r\n    }, [logoutSuccess, history]);\r\n\r\n    return (\r\n        <section className={profileStyles.section}>\r\n            <div className={profileStyles.linkContainer}>\r\n                <NavLink\r\n                    to={'/profile'}\r\n                    exact={true}\r\n                    className={`${profileStyles.link} text text_type_main-medium text_color_inactive`}\r\n                    activeClassName={profileStyles.linkActive}\r\n                >\r\n                    Профиль\r\n                </NavLink>\r\n                <NavLink\r\n                    to={'/profile/orders'}\r\n                    exact={true}\r\n                    className={`${profileStyles.link} text text_type_main-medium text_color_inactive`}\r\n                    activeClassName={profileStyles.linkActive}\r\n                >\r\n                    История заказов\r\n                </NavLink>\r\n                <button\r\n                    className={`${profileStyles.button} text text_type_main-medium text_color_inactive`}\r\n                    onClick={handleLogout}\r\n                >\r\n                    Выход\r\n                </button>\r\n                <p className={`${profileStyles.paragraph} text text_type_main-default text_color_inactive mt-20`}>\r\n                    В этом разделе вы можете изменить свои персональные данные\r\n                </p>\r\n            </div>\r\n            <form className={profileStyles.form}>\r\n                <div className={profileStyles.formContainer}>\r\n                    <Input\r\n                        value={userInfo.name}\r\n                        name={'name'}\r\n                        type={'text'}\r\n                        placeholder={'Имя'}\r\n                        onChange={handleChangeUserInfo}\r\n                        size={'default'}\r\n                        icon={'EditIcon'}\r\n                        disabled={true}\r\n\r\n                    />\r\n                    <Input\r\n                        value={userInfo.email}\r\n                        name={'email'}\r\n                        type={'email'}\r\n                        placeholder={'Логин'}\r\n                        onChange={handleChangeUserInfo}\r\n                        size={'default'}\r\n                        icon={'EditIcon'}\r\n                        disabled={true}\r\n\r\n                    />\r\n                    <Input\r\n                        value={userInfo.password}\r\n                        name={'password'}\r\n                        type={'password'}\r\n                        placeholder={'Пароль'}\r\n                        onChange={handleChangeUserInfo}\r\n                        size={'default'}\r\n                        icon={'EditIcon'}\r\n                        disabled={true}\r\n\r\n                    />\r\n                    {isUserInfoChanged && (\r\n                        <div className={profileStyles.buttonContainer}>\r\n                            <Button type=\"secondary\" size=\"medium\">\r\n                                Отмена\r\n                            </Button>\r\n                            <Button type=\"primary\" size=\"medium\" onClick={handleSubmit}>\r\n                                Сохранить\r\n                            </Button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </form>\r\n        </section>\r\n    );\r\n}\r\nexport default ProfilePage;","import React from 'react';\r\nimport InrgedientDetails from '../components/IngredientDetails/IngredientDetails';\r\n\r\nimport styles from './ingredient-details.module.css';\r\n\r\nconst IngredientDetailsPage = () => {\r\n\r\n    return (\r\n        <div className={`${styles.container} mt-30`}>\r\n            <h2 className=\"text text_type_main-large\">Детали ингредиента</h2>\r\n            <InrgedientDetails />\r\n        </div>\r\n    );\r\n};\r\nexport default IngredientDetailsPage;"," const ProfileOrdersPage = () => {\r\n    return (\r\n        <div>История заказов</div>\r\n    )\r\n}\r\nexport default ProfileOrdersPage;","import React, { useState, useEffect} from 'react';\r\nimport styles from \"./register.module.css\";\r\nimport {Input, PasswordInput, Button} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport {Link, Redirect, useHistory} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {register} from '../services/actions/auth';\r\nimport {getRefreshTokenFromCookie} from \"../services/cookieFunctions\";\r\n\r\nconst RegisterPage = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [name, setName] = useState<string>('');\r\n    const [email, setEmail] = useState<string>('');\r\n    const [password, setPassword] = useState<string>('');\r\n    const isLogin = !!getRefreshTokenFromCookie();\r\n    const { registerSuccess } = useSelector((state:any) => state.auth);\r\n    const handleSubmit = (e:React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        dispatch(register(email, password, name));\r\n        setEmail('');\r\n        setPassword('');\r\n        setName('');\r\n    };\r\n    useEffect(() => {\r\n        if (registerSuccess) {\r\n            history.push('/login');\r\n        }\r\n    }, [registerSuccess, history]);\r\n    return (\r\n        <>\r\n            {isLogin ? (\r\n                <Redirect to=\"/\" />\r\n            ) : (\r\n        <div className={styles.loginWrapper}>\r\n            <div className={styles.loginContent}>\r\n                <p className={`text text_type_main-medium ${styles.formTitle}`}>Регистрация</p>\r\n                <form className={styles.form} onSubmit={handleSubmit}>\r\n                    <div className={styles.inputWrapper}>\r\n                        <Input\r\n                            type={'text'}\r\n                            placeholder={'Имя'}\r\n                            onChange={e => setName(e.target.value)}\r\n                            name={'name'}\r\n                            size={'default'}\r\n                            value={name}\r\n                        />\r\n                    </div>\r\n                    <div className={styles.inputWrapper}>\r\n                        <Input\r\n                            type={'email'}\r\n                            placeholder={'E-mail'}\r\n                            onChange={e => setEmail(e.target.value)}\r\n                            name={'email'}\r\n                            size={'default'}\r\n                            value={email}\r\n                        />\r\n                    </div>\r\n                    <div className={styles.inputWrapper}>\r\n                        <PasswordInput\r\n                            name={'password'}\r\n                            value={password}\r\n                            onChange={e => setPassword(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className={styles.submitWrapper}>\r\n                        <Button type=\"primary\" size=\"medium\">\r\n                            Зарегистрироваться\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n                <div>\r\n                    <p className={`text text_type_main-default ${styles.paragraph}`}>Уже зарегистрированы? <Link\r\n                        className={styles.link} to=\"/login\">Войти</Link></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\nexport default RegisterPage;","import React from 'react';\r\nimport {useEffect, useState} from \"react\";\r\nimport AppHeader from \"../AppHeader/AppHeader\";\r\nimport BurgerIngredients from \"../BurgerIngredients/BurgerIngredients\";\r\nimport BurgerConstructor from \"../BurgerConstructor/BurgerConstructor\";\r\nimport mainStyles from \"./App.module.css\"\r\nimport Modal from \"../Modal/Modal\";\r\nimport IngredientDetails from \"../IngredientDetails/IngredientDetails\";\r\nimport OrderDetails from \"../OrderDetails/OrderDetails\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getIngredients} from \"../../services/actions/allIngredients\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport {Router, Route, Switch, useHistory, useLocation} from \"react-router-dom\";\r\nimport ProtectedRoute from \"../ProtectedRoute/ProtectedRoute\";\r\nimport ForgotPasswordPage from \"../../pages/forgot-password\";\r\nimport ResetPasswordPage from \"../../pages/reset-password\";\r\nimport LoginPage from \"../../pages/login\";\r\nimport ProfileOrderPage from \"../../pages/profile-order\";\r\nimport ProfilePage from \"../../pages/profile\";\r\nimport IngredientDetailsPage from \"../../pages/ingredient-details\"\r\nimport ProfileOrdersPage from \"../../pages/profile-orders\";\r\nimport RegisterPage from \"../../pages/register\";\r\nimport {TLocationState} from \"../../services/types/types\"\r\nfunction App() {\r\n\r\n    const [isOpen, setIsOpen] = useState<boolean>(false);\r\n    const handleOpenIngredientModal = () => {\r\n        setIsOpen(true);\r\n    }\r\n    const handleCloseModal = () => {\r\n        setIsOpen(false);\r\n    }\r\n    const dispatch=useDispatch();\r\n    useEffect(\r\n        () => {\r\n            dispatch( getIngredients());\r\n        },\r\n        [dispatch]\r\n    );\r\n    const history = useHistory();\r\n\r\n    let location = useLocation<TLocationState>();\r\n    let background =(history.action === 'PUSH' || history.action === 'REPLACE') && location.state && location.state.background;\r\n\r\n        return (\r\n            <>\r\n            <AppHeader/>\r\n    <Switch location={background || location}>\r\n        <Route path=\"/\" exact={true}>\r\n            <main className={mainStyles.main}>\r\n            <DndProvider backend={HTML5Backend}>\r\n                <BurgerIngredients onCardClick={handleOpenIngredientModal} />\r\n                <BurgerConstructor history={history}/>\r\n            </DndProvider>\r\n            </main>\r\n        </Route>\r\n        <Route path=\"/login\" exact={true}>\r\n            <LoginPage />\r\n        </Route>\r\n        <Route path=\"/register\" exact={true}>\r\n            <RegisterPage />\r\n        </Route>\r\n        <Route path=\"/forgot-password\" exact={true}>\r\n            <ForgotPasswordPage />\r\n        </Route>\r\n        <Route path=\"/reset-password\" exact={true}>\r\n            <ResetPasswordPage />\r\n        </Route>\r\n        <ProtectedRoute path=\"/profile\" exact={true}>\r\n            <ProfilePage />\r\n        </ProtectedRoute>\r\n        <ProtectedRoute path=\"/profile/orders\" exact={true}>\r\n            <ProfileOrdersPage />\r\n        </ProtectedRoute>\r\n        <ProtectedRoute path=\"/profile/orders/:id\" exact={true}>\r\n            <ProfileOrderPage />\r\n        </ProtectedRoute>\r\n        <Route path=\"/ingredients/:id\" exact={true}>\r\n            <IngredientDetailsPage />\r\n        </Route>\r\n    </Switch>\r\n\r\n                {background && (\r\n                    <Modal open={isOpen} onClose={handleCloseModal}  title={ \"Детали ингредиента\"} >\r\n                        <IngredientDetails/>\r\n                    </Modal>\r\n                )}\r\n            </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { SET_ORDER_ERROR, GET_ORDER_REQUEST, GET_ORDER_SUCCESS} from \"../actions/order\";\r\nimport {ADD_VIEWED_INGREDIENT_DATA, REMOVE_VIEWED_INGREDIENT_DATA} from \"../actions/viewedIngredient\";\r\nimport {GET_INGREDIENTS_ERROR, GET_INGREDIENTS_REQUEST, GET_INGREDIENTS_SUCCESS} from \"../actions/allIngredients\";\r\nimport {MOVE_CONSTRUCTOR_INGREDIENTS, ADD_CONSTRUCTOR_INGREDIENTS,RESET_CONSTRUCTOR, DELETE_CONSTRUCTOR_INGREDIENTS, ADD_CONSTRUCTOR_INGREDIENTS_BUN} from \"../actions/constructorIngredients\";\r\n\r\nconst initialStateAllIngredients= {\r\n    allIngredients: [],\r\n    ingredientsRequest: false,\r\n    ingredientsFailed: false,\r\n}\r\nconst initialStateConstructorIngredients={\r\n   constructorIngredients:  [] ,\r\n    isBun: null,\r\n}\r\nconst initialStateViewedIngredient = {\r\n    currentIngredient: {},\r\n};\r\nconst initialStateOrder={\r\n    order: {\r\n        number: null,\r\n    },\r\n    orderRequest: false,\r\n    orderFailed: false,\r\n};\r\n\r\nexport const allIngredientsReducer = (state = initialStateAllIngredients, action) => {\r\n    switch (action.type) {\r\n        case GET_INGREDIENTS_REQUEST: {\r\n            return {\r\n                ...state,\r\n                ingredientsRequest: true\r\n            };\r\n        }\r\n        case GET_INGREDIENTS_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                ingredientsFailed: false,\r\n                allIngredients: action.allIngredients,\r\n                ingredientsRequest: false,\r\n            };\r\n        }\r\n        case GET_INGREDIENTS_ERROR: {\r\n            return {\r\n                ...state,\r\n                ingredientsFailed: true,\r\n                ingredientsRequest: false\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const constructorIngredientsReducer = (state = initialStateConstructorIngredients, action) => {\r\n    switch (action.type) {\r\n        case ADD_CONSTRUCTOR_INGREDIENTS_BUN: {\r\n                return {\r\n                        ...state,\r\n                        isBun: action.item,\r\n                    };\r\n        }\r\n        case  ADD_CONSTRUCTOR_INGREDIENTS: {\r\n            return {\r\n                ...state,\r\n                constructorIngredients: [...state.constructorIngredients, action.item],\r\n            };\r\n        }\r\n        case DELETE_CONSTRUCTOR_INGREDIENTS: {\r\n                return {\r\n                    ...state,\r\n                    constructorIngredients: state.constructorIngredients.filter((elem, i) => i !== action.index),\r\n                }\r\n        }\r\n        case MOVE_CONSTRUCTOR_INGREDIENTS: {\r\n            const { dragIndex, hoverIndex } = action.payload;\r\n            const constructorIngredients = [...state.constructorIngredients];\r\n            constructorIngredients[dragIndex] = constructorIngredients.splice(hoverIndex, 1, constructorIngredients[dragIndex])[0];\r\n            return {\r\n                ...state,\r\n                constructorIngredients,\r\n            };\r\n        }\r\n        case RESET_CONSTRUCTOR: {\r\n            return {\r\n                ...state,\r\n                constructorIngredients: initialStateConstructorIngredients.constructorIngredients,\r\n                isBun: initialStateConstructorIngredients.isBun,\r\n            };\r\n        }\r\n\r\n        default: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const viewedIngredientReducer = (state = initialStateViewedIngredient, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_VIEWED_INGREDIENT_DATA: {\r\n            return {\r\n                ...state,\r\n                currentIngredient: action.payload,\r\n            };\r\n        }\r\n        case REMOVE_VIEWED_INGREDIENT_DATA: {\r\n            return {\r\n                ...state,\r\n               currentIngredient: initialStateViewedIngredient.currentIngredient,\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const orderReducer = (state = initialStateOrder, action) => {\r\n    switch (action.type) {\r\n        case GET_ORDER_REQUEST: {\r\n            return {\r\n                ...state,\r\n                orderRequest: true,\r\n                orderFailed: false,\r\n                order: {\r\n                    ...state.order,\r\n                   number: initialStateOrder.order.number,\r\n                },\r\n\r\n            };\r\n        }\r\n        case GET_ORDER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                orderFailed: false,\r\n                order: {\r\n                    ...state.order,\r\n                    number: action.number,\r\n                },\r\n                orderRequest: false,\r\n            };\r\n        }\r\n        case SET_ORDER_ERROR: {\r\n            return {\r\n                ...state,\r\n                orderFailed: true,\r\n                orderRequest: false,\r\n                order: {\r\n                    ...state.order,\r\n                   number: initialStateOrder.order.number,\r\n                },\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\n","import {\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_REQUEST,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAIL,\r\n    REGISTER_REQUEST,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    FORGOT_PASSWORD_REQUEST,\r\n    FORGOT_PASSWORD_SUCCESS,\r\n    FORGOT_PASSWORD_FAIL,\r\n    RESET_PASSWORD_REQUEST,\r\n    RESET_PASSWORD_SUCCESS,\r\n    RESET_PASSWORD_FAIL,\r\n    GET_USER_REQUEST,\r\n    GET_USER_SUCCESS,\r\n    GET_USER_FAIL,\r\n    UPDATE_USER_REQUEST,\r\n    UPDATE_USER_SUCCESS,\r\n    UPDATE_USER_FAIL,\r\n    REFRESH_TOKEN_REQUEST,\r\n    REFRESH_TOKEN_SUCCESS,\r\n    REFRESH_TOKEN_FAIL\r\n} from '../actions/auth';\r\n\r\nconst authInitialState = {\r\n    user: {\r\n        email: '',\r\n        name: '',\r\n    },\r\n    accessToken: '',\r\n    refreshToken: '',\r\n    registerRequest: false,\r\n    registerSuccess: false,\r\n    registerError: false,\r\n    loginRequest: false,\r\n    loginSuccess: false,\r\n    loginError: false,\r\n    forgotPasswordRequest: false,\r\n    forgotPasswordSuccess: false,\r\n    forgotPasswordError: false,\r\n    resetPasswordRequest: false,\r\n    resetPasswordSuccess: false,\r\n    resetPasswordError: false,\r\n    logoutRequest: false,\r\n    logoutSuccess: false,\r\n    logoutError: false,\r\n    refreshTokenRequest: false,\r\n    refreshTokenSuccess: false,\r\n    refreshTokenError: false,\r\n    getUserInfoRequest: false,\r\n    getUserInfoSuccess: false,\r\n    getUserInfoError: false,\r\n    updateUserInfoRequest: false,\r\n    updateUserInfoSuccess: false,\r\n    updateUserInfoError: false,\r\n};\r\n\r\nexport const authReducer = (state = authInitialState, action) => {\r\n    switch (action.type) {\r\n        case REGISTER_REQUEST: {\r\n            return {\r\n                ...state,\r\n                registerRequest: true,\r\n                registerSuccess: false,\r\n                registerError: false,\r\n            };\r\n        }\r\n        case REGISTER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                registerSuccess: true,\r\n                accessToken: action.accessToken,\r\n                refreshToken: action.refreshToken,\r\n                user: action.user,\r\n            };\r\n        }\r\n        case REGISTER_FAIL: {\r\n            return {\r\n                ...state,\r\n                registerRequest: false,\r\n                registerSuccess: false,\r\n                registerError: true,\r\n            };\r\n        }\r\n        case LOGIN_REQUEST: {\r\n            return {\r\n                ...state,\r\n                loginRequest: true,\r\n                loginSuccess: false,\r\n                loginError: false,\r\n            };\r\n        }\r\n        case LOGIN_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                loginRequest: false,\r\n                loginSuccess: true,\r\n                logoutSuccess: false,\r\n                accessToken: action.accessToken,\r\n                refreshToken: action.refreshToken,\r\n                user: action.user,\r\n            };\r\n        }\r\n        case LOGIN_FAIL: {\r\n            return {\r\n                ...state,\r\n                loginRequest: false,\r\n                loginSuccess: false,\r\n                loginError: true,\r\n            };\r\n        }\r\n        case FORGOT_PASSWORD_REQUEST: {\r\n            return {\r\n                ...state,\r\n                forgotPasswordRequest: true,\r\n                forgotPasswordSuccess: false,\r\n                forgotPasswordError: false,\r\n            };\r\n        }\r\n        case FORGOT_PASSWORD_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                forgotPasswordRequest: false,\r\n                forgotPasswordSuccess: true,\r\n            };\r\n        }\r\n        case FORGOT_PASSWORD_FAIL: {\r\n            return {\r\n                ...state,\r\n                forgotPasswordRequest: false,\r\n                forgotPasswordSuccess: false,\r\n                forgotPasswordError: true,\r\n            };\r\n        }\r\n        case RESET_PASSWORD_REQUEST: {\r\n            return {\r\n                ...state,\r\n                resetPasswordRequest: true,\r\n                resetPasswordSuccess: false,\r\n                resetPasswordError: false,\r\n            };\r\n        }\r\n        case RESET_PASSWORD_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                resetPasswordRequest: false,\r\n                resetPasswordSuccess: true,\r\n            };\r\n        }\r\n        case RESET_PASSWORD_FAIL: {\r\n            return {\r\n                ...state,\r\n                resetPasswordRequest: false,\r\n                resetPasswordSuccess: false,\r\n                resetPasswordError: true,\r\n            };\r\n        }\r\n        case LOGOUT_REQUEST: {\r\n            return {\r\n                ...state,\r\n                logoutRequest: true,\r\n                logoutSuccess: false,\r\n                logoutError: false,\r\n            };\r\n        }\r\n        case LOGOUT_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                logoutRequest: false,\r\n                logoutSuccess: true,\r\n                loginSuccess: false,\r\n                accessToken: authInitialState.accessToken,\r\n                refreshToken: authInitialState.refreshToken,\r\n                user: authInitialState.user,\r\n            };\r\n        }\r\n        case LOGOUT_FAIL: {\r\n            return {\r\n                ...state,\r\n                logoutRequest: false,\r\n                logoutSuccess: false,\r\n                logoutError: true,\r\n            };\r\n        }\r\n        case REFRESH_TOKEN_REQUEST: {\r\n            return {\r\n                ...state,\r\n                refreshTokenRequest: true,\r\n                refreshTokenSuccess: false,\r\n                refreshTokenError: false,\r\n            };\r\n        }\r\n        case REFRESH_TOKEN_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                refreshTokenRequest: false,\r\n                refreshTokenSuccess: true,\r\n                accessToken: action.accessToken,\r\n                refreshToken: action.refreshToken,\r\n            };\r\n        }\r\n        case REFRESH_TOKEN_FAIL: {\r\n            return {\r\n                ...state,\r\n                refreshTokenRequest: false,\r\n                refreshTokenSuccess: false,\r\n                refreshTokenError: true,\r\n            };\r\n        }\r\n        case GET_USER_REQUEST: {\r\n            return {\r\n                ...state,\r\n                getUserInfoRequest: true,\r\n                getUserInfoSuccess: false,\r\n                getUserInfoError: false,\r\n            };\r\n        }\r\n        case GET_USER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                getUserInfoRequest: false,\r\n                getUserInfoSuccess: true,\r\n                user: action.user,\r\n            };\r\n        }\r\n        case GET_USER_FAIL: {\r\n            return {\r\n                ...state,\r\n                getUserInfoRequest: false,\r\n                getUserInfoSuccess: false,\r\n                getUserInfoError: true,\r\n            };\r\n        }\r\n        case UPDATE_USER_REQUEST: {\r\n            return {\r\n                ...state,\r\n                updateUserInfoRequest: true,\r\n                updateUserInfoSuccess: false,\r\n                updateUserInfoError: false,\r\n            };\r\n        }\r\n        case UPDATE_USER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                updateUserInfoRequest: false,\r\n                updateUserInfoSuccess: true,\r\n                user: action.user,\r\n            };\r\n        }\r\n        case UPDATE_USER_FAIL: {\r\n            return {\r\n                ...state,\r\n                updateUserInfoRequest: false,\r\n                updateUserInfoSuccess: false,\r\n                updateUserInfoError: true,\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n","import {allIngredientsReducer, constructorIngredientsReducer, viewedIngredientReducer, orderReducer} from \"./reducers\";\r\nimport { combineReducers } from 'redux';\r\nimport {authReducer} from \"./auth\";\r\nconst rootReducer = combineReducers({\r\n    allIngredients: allIngredientsReducer,\r\n    constructorIngredients: constructorIngredientsReducer,\r\n    viewedIngredient: viewedIngredientReducer,\r\n    order: orderReducer,\r\n    auth: authReducer,\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport  rootReducer from './services/reducers';\r\nimport {Provider} from 'react-redux'\r\nimport { compose, createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { BrowserRouter } from 'react-router-dom';\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\nconst composeEnhancers = window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] as typeof compose || compose;\r\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\r\nconst store = createStore(rootReducer, enhancer);\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n          <BrowserRouter>\r\n              <App />\r\n          </BrowserRouter>\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrapper\":\"register_loginWrapper__14GKp\",\"loginContent\":\"register_loginContent__WKkd4\",\"formTitle\":\"register_formTitle__hvpsM\",\"form\":\"register_form__3jzE-\",\"inputWrapper\":\"register_inputWrapper__oR1PZ\",\"submitWrapper\":\"register_submitWrapper__2YmRA\",\"paragraph\":\"register_paragraph__3d-yh\",\"link\":\"register_link__1WKiv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrapper\":\"reset-password_loginWrapper__1BMtj\",\"loginContent\":\"reset-password_loginContent__2n5wJ\",\"formTitle\":\"reset-password_formTitle__2fJLD\",\"form\":\"reset-password_form__2c9jy\",\"inputWrapper\":\"reset-password_inputWrapper__3c58K\",\"submitWrapper\":\"reset-password_submitWrapper__3I_M1\",\"paragraph\":\"reset-password_paragraph__2bDpe\",\"link\":\"reset-password_link__Q_BeI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrapper\":\"login_loginWrapper__3vAlh\",\"loginContent\":\"login_loginContent__34CYZ\",\"formTitle\":\"login_formTitle__C1Nut\",\"form\":\"login_form__18WSd\",\"submitWrapper\":\"login_submitWrapper__19jHo\",\"text\":\"login_text__2Xv_W\",\"link\":\"login_link__1_K0k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrapper\":\"forgot-password_loginWrapper__2-nqb\",\"loginContent\":\"forgot-password_loginContent__3zB4U\",\"formTitle\":\"forgot-password_formTitle__3XCLr\",\"form\":\"forgot-password_form__1R-uN\",\"inputWrapper\":\"forgot-password_inputWrapper__2jOuF\",\"submitWrapper\":\"forgot-password_submitWrapper__5xf3l\",\"paragraph\":\"forgot-password_paragraph__20-8M\",\"link\":\"forgot-password_link__2faUD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2vDVy\",\"counter\":\"Card_counter__pMgfG\",\"price\":\"Card_price__24HFz\",\"priceNum\":\"Card_priceNum__2oucV\",\"name\":\"Card_name__mE20S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"BurgerIngredients_section__3QJWm\",\"cards\":\"BurgerIngredients_cards__otbMP\",\"scroll\":\"BurgerIngredients_scroll__3Qo5l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"BurgerConstructorItems_ul__c2fl1\",\"item\":\"BurgerConstructorItems_item__1esmR\",\"itemWrapper\":\"BurgerConstructorItems_itemWrapper__337yb\",\"scroll\":\"BurgerConstructorItems_scroll__1gh2P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderWrapper\":\"OrderDetails_orderWrapper__2guS_\",\"order\":\"OrderDetails_order__1imyX\",\"orderNum\":\"OrderDetails_orderNum__2nrDL OrderDetails_order__1imyX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalHeader\":\"Modal_modalHeader__1yxhH\",\"modalHeaderWrapper\":\"Modal_modalHeaderWrapper__3ByN4\",\"headerText\":\"Modal_headerText__3yTsi\",\"button\":\"Modal_button__v-eXO\",\"overlay\":\"Modal_overlay__2btyM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"NavigationLink_link__2gCc3\",\"linkText\":\"NavigationLink_linkText__1MCq3\",\"linkTextActive\":\"NavigationLink_linkTextActive__2lIFm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"BurgerConstructor_items__si86D\",\"totalWrapper\":\"BurgerConstructor_totalWrapper__1sKpw\",\"totalPrice\":\"BurgerConstructor_totalPrice__tN5Gh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppHeader_header__3k3xj\",\"headerContainer\":\"AppHeader_headerContainer__CzLrW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigation_navigation__DvYFG\"};"],"sourceRoot":""}