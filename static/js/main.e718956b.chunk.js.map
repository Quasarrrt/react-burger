{"version":3,"sources":["components/Navigation/Navigation.module.css","components/ProfileHeader/ProfileHeader.module.css","components/BurgerConstructorItem/BurgerConstructorItem.module.css","components/ModalOverlay/ModalOverlay.module.css","components/App/App.module.css","components/Price/Price.module.css","pages/order-info.module.css","components/Orders/Orders.module.css","pages/profile-order.module.css","components/IngredientDetails/IngredientDetails.module.css","components/OrderInfo/OrderInfo.module.css","pages/feed.module.css","components/NavigationLink/NavigationLink.tsx","components/Navigation/Navigation.tsx","components/ProfileHeader/ProfileHeader.tsx","components/AppHeader/AppHeader.tsx","services/hooks.ts","services/types/viewedIngredient.ts","components/Card/Card.tsx","components/BurgerIngredients/BurgerIngredients.tsx","services/types/contructorIngredients.ts","services/api/api.tsx","services/types/order.ts","components/BurgerConstructorItem/BurgerConstructorItem.tsx","services/actions/constructorIngredients.ts","components/BurgerConstructorItems/BurgerConstructorItems.tsx","images/done.svg","components/OrderDetails/OrderDetails.tsx","components/ModalOverlay/ModalOverlay.tsx","components/Modal/Modal.tsx","services/cookieFunctions.ts","components/BurgerConstructor/BurgerConstructor.tsx","services/actions/order.ts","components/IngredientDetails/IngredientDetails.tsx","services/actions/viewedIngredient.ts","services/types/ordersData.ts","components/Price/Price.tsx","components/OrderInfo/OrderInfo.tsx","pages/order-info.tsx","services/actions/ordersData.ts","services/types/allIngredients.ts","services/reducers/alllIngredients.ts","services/reducers/contructorIngredients.ts","services/reducers/viewedIngredient.ts","services/reducers/order.ts","services/types/auth.ts","services/reducers/auth.ts","services/types/ws.ts","services/reducers/ws.ts","services/reducers/ordersData.ts","services/types/userOrdersData.ts","services/reducers/userOrdersData.ts","services/types/orderDetails.ts","services/reducers/orderDetails.ts","services/reducers/index.ts","services/store.ts","services/middlewares/socketMiddleware.ts","components/CardOrder/CardOrder.tsx","utils/utils.ts","components/Orders/Orders.tsx","pages/feed.tsx","components/ProtectedRoute/ProtectedRoute.tsx","services/api/authApi.ts","services/actions/auth.ts","pages/forgot-password.tsx","pages/reset-password.tsx","pages/login.tsx","components/ProfileNavigationMenu/ProfileNavigationMenu.tsx","pages/profile.tsx","pages/ingredient-details.tsx","pages/profile-orders.tsx","pages/register.tsx","pages/profile-order.tsx","services/actions/userOrdersData.ts","components/App/App.tsx","services/actions/allIngredients.ts","services/actions/orderDetails.ts","index.tsx","pages/reset-password.module.css","pages/forgot-password.module.css","pages/login.module.css","components/ProfileNavigationMenu/ProfileNavigationMenu.module.css","components/Card/Card.module.css","components/CardOrder/CardOrder.module.css","components/BurgerIngredients/BurgerIngredients.module.css","components/BurgerConstructorItems/BurgerConstructorItems.module.css","components/OrderDetails/OrderDetails.module.css","pages/register.module.css","components/Modal/Modal.module.css","pages/profile.module.css","components/NavigationLink/NavigationLink.module.css","components/BurgerConstructor/BurgerConstructor.module.css","pages/profile-orders.module.css","components/AppHeader/AppHeader.module.css"],"names":["module","exports","NavigationLink","Component","icon","text","path","className","styles","link","type","linkText","activeClassName","linkTextActive","to","exact","Navigation","navigation","BurgerIcon","ListIcon","ProfileHeader","profileLink","ProfileIcon","AppHeader","header","headerContainer","useDispatch","dispatchHook","useSelector","selectorHook","ADD_VIEWED_INGREDIENT_DATA","REMOVE_VIEWED_INGREDIENT_DATA","Card","card","onCardClick","dispatch","state","constructorIngredients","isBun","useDrag","item","collect","monitor","isDrag","isDragging","dragRef","count","_id","filter","length","location","useLocation","ingredientId","cardStyles","join","ref","pathname","background","onClick","payload","counter","size","src","image","alt","name","pic","price","priceNum","BurgerIngredients","React","useState","current","setCurrent","allIngredients","useInView","threshold","bunRef","inViewBuns","sauceRef","inViewSauces","mainRef","inViewMains","useEffect","setTab","tab","document","getElementById","scrollIntoView","behavior","bun","sauce","main","burgerIngredientsStyles","section","style","display","value","active","scroll","cards","map","ADD_CONSTRUCTOR_INGREDIENTS_BUN","ADD_CONSTRUCTOR_INGREDIENTS","DELETE_CONSTRUCTOR_INGREDIENTS","MOVE_CONSTRUCTOR_INGREDIENTS","RESET_CONSTRUCTOR","apiUrl","handleResponse","res","ok","json","then","err","Promise","reject","ingredientsRequest","a","fetch","getOrder","orderItems","token","method","headers","body","JSON","stringify","ingredients","api","serverUrl","_headers","_serverUrl","this","Authorization","Accept","GET_ORDER_REQUEST","GET_ORDER_SUCCESS","SET_ORDER_ERROR","BurgerConstructorItem","burger","index","locked","dropRef","useRef","useDrop","accept","handlerId","getHandlerId","hover","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","clientOffset","getClientOffset","hoverClientY","y","drop","drag","constructorItemStyles","itemWrapper","thumbnail","isLocked","handleClose","ingredientItemIndex","BurgerConstructorItems","ingredientItem","key","uuidv4","addConstructorIngredients","onDropHandler","dropTarget","constructorItemsStyles","ul","OrderDetails","orderNumber","store","order","stylesOrderDetails","orderWrapper","orderNum","doneImage","ModalOverlay","onClose","stylesModalOverlay","overlay","Modal","open","children","title","isGoBack","onKeydown","event","addEventListener","removeEventListener","close","ReactDom","createPortal","modalStyles","modalHeader","modalHeaderWrapper","headerText","button","setCookie","data","accessToken","split","refreshToken","cookie","getRefreshTokenFromCookie","replace","getAccessTokenFromCookie","BurgerConstructor","history","loginSuccess","auth","isRefreshToken","isOpen","setIsOpen","orderModal","orderSend","localStorage","getItem","ingredientsIds","element","status","success","number","catch","getOrderNum","push","totalPrice","useMemo","reduce","acc","constructorStyles","items","totalWrapper","IngredientDetails","id","useParams","itemData","find","currentIngredient","viewedIngredient","stylesIngredientDetails","ingredientContainer","list","calories","caloriesNum","proteins","fat","carbohydrates","GET_ORDERS_DATA_REQUEST","GET_ORDERS_DATA_SUCCESS","GET_ORDERS_DATA_ERROR","Price","textType","typeIcon","priceStyles","OrderInfo","ordersData","orderDetailsData","orderInfo","orders","date","ISOString","dateInMs","Date","parse","toLocaleString","formatDateFromISOStringToLocaleString","createdAt","orderInfoStyles","orderStatus","descriptionList","descriptionDefinition","ingredient","ingredientData","figure","img","figcaption","ingredientName","info","OrderInfoPage","getOrdersData","console","log","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_ERROR","initialStateAllIngredients","ingredientsFailed","initialStateConstructorIngredients","initialStateViewedIngredient","initialStateOrder","orderRequest","orderFailed","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAIL","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAIL","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAIL","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAIL","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAIL","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_FAIL","REFRESH_TOKEN_REQUEST","REFRESH_TOKEN_SUCCESS","REFRESH_TOKEN_FAIL","authInitialState","user","email","registerRequest","registerSuccess","registerError","loginRequest","loginError","forgotPasswordRequest","forgotPasswordSuccess","forgotPasswordError","resetPasswordRequest","resetPasswordSuccess","resetPasswordError","logoutRequest","logoutSuccess","logoutError","refreshTokenRequest","refreshTokenSuccess","refreshTokenError","getUserInfoRequest","getUserInfoSuccess","getUserInfoError","updateUserInfoRequest","updateUserInfoSuccess","updateUserInfoError","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_ORDERS","initialStateWS","wsConnected","error","ordersDataInitialState","ordersDataRequest","ordersDataError","GET_USER_ORDERS_DATA_REQUEST","GET_USER_ORDERS_DATA_SUCCESS","GET_USER_ORDERS_DATA_ERROR","userOrdersDataInitialState","userOrdersData","userOrdersDataRequest","userOrdersDataError","SET_ORDER_DETAILS","CLEAR_ORDER_DETAILS","orderDetailsInitialState","orderDetails","rootReducer","combineReducers","action","elem","i","splice","webSocket","wsActions","wsStart","wsSendMessage","onOpen","onError","wsGetOrders","enhancer","window","compose","applyMiddleware","thunk","socket","next","WebSocket","wsUrl","onopen","onerror","onmessage","parseData","onclose","message","send","createStore","CardOrder","onCardOrderClick","cardOrderstyles","cardOrder","backgroundOrders","idWithDateContainer","ingredientsWithPriceContainer","ingredientsContainer","zIndex","Math","abs","Orders","OrderFeedPage","feedStyles","orderFeed","heading","container","stats","readyWithInProgressContainer","ordersContainer","numberOfOrders","total","totalToday","ProtectedRoute","rest","isLogin","render","from","authApi","password","logout","getUserInfo","tokenRefresh","ForgotPasswordPage","setEmail","loginWrapper","loginContent","formTitle","onSubmit","e","preventDefault","forgotPassword","form","inputWrapper","placeholder","onChange","target","submitWrapper","paragraph","ResetPasswordPage","setPassword","setToken","useHistory","resetPasswordStyles","resetPassword","buttonWrapper","LoginPage","loginStyles","login","setItem","formContainer","ProfileNavigationMenu","handleLogout","menuText","profileNavigationStyles","linkContainer","linkActive","ProfilePage","userInfo","setUserInfo","isUserInfoChanged","setIsUserInfoChanged","handleChangeUserInfo","inputName","prev","nameRef","emailRef","passwordRef","handleIconClick","classList","remove","disabled","focus","profileStyles","onIconClick","buttonContainer","updateUserInfo","IngredientDetailsPage","ProfileOrdersPage","profileOrderStyles","RegisterPage","setName","registerStyles","noValidate","register","ProfileOrderPage","getUserOrdersData","App","handleCardOrderClick","setOrderDetails","handleCloseModal","useCallback","goBack","mainStyles","DndProvider","backend","HTML5Backend","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.e718956b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigation_navigation__DvYFG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileLink\":\"ProfileHeader_profileLink__AF3AC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrapper\":\"BurgerConstructorItem_itemWrapper__3glNO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"ModalOverlay_overlay__3Zmwc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__3oxZb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"price\":\"Price_price__1_4aS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderInfo\":\"order-info_orderInfo__18y6E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orders\":\"Orders_orders__3hW8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderInfo\":\"profile-order_orderInfo__20j8u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientContainer\":\"IngredientDetails_ingredientContainer__3B6Yy\",\"image\":\"IngredientDetails_image__2WgZ6\",\"title\":\"IngredientDetails_title__2aCO9\",\"list\":\"IngredientDetails_list__2cDET\",\"calories\":\"IngredientDetails_calories___686P\",\"caloriesNum\":\"IngredientDetails_caloriesNum__yAzOL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderInfo\":\"OrderInfo_orderInfo__3GSEn\",\"orderNumber\":\"OrderInfo_orderNumber__2f2_F\",\"orderStatus\":\"OrderInfo_orderStatus__29loK\",\"descriptionList\":\"OrderInfo_descriptionList__3xU27\",\"descriptionDefinition\":\"OrderInfo_descriptionDefinition__3raQf\",\"list\":\"OrderInfo_list__1-qNf\",\"figure\":\"OrderInfo_figure__3FmMb\",\"img\":\"OrderInfo_img__2jSXY\",\"figcaption\":\"OrderInfo_figcaption__1cMmY\",\"ingredientName\":\"OrderInfo_ingredientName__1aWgw\",\"info\":\"OrderInfo_info__1f4y3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderFeed\":\"feed_orderFeed__13Zr-\",\"container\":\"feed_container__3OKf6\",\"stats\":\"feed_stats__1GNQx\",\"readyWithInProgressContainer\":\"feed_readyWithInProgressContainer__edeRX\",\"numberOfOrders\":\"feed_numberOfOrders__6rFwG\",\"list\":\"feed_list__340Mo\",\"ordersContainer\":\"feed_ordersContainer__23GU7\"};","import { NavLink } from 'react-router-dom';\nimport styles from './NavigationLink.module.css';\nimport React from \"react\";\ninterface INavigationLink {\n    path:string;\n    text:string;\n    icon:any;\n}\nconst NavigationLink:React.FC<INavigationLink>=({ icon: Component, text, path })=> {\n    return (\n        <span className={`${styles.link} text_color_inactive pl-5 pr-5 pt-4 pb-4 mt-4 mb-4`}>\n      <Component type=\"secondary\" />\n      <NavLink\n          className={`${styles.linkText} text text_type_main-default text_color_inactive ml-2`}\n          activeClassName={styles.linkTextActive}\n          to={path}\n          exact={true}\n      >\n        {text}\n      </NavLink>\n    </span>\n    );\n}\n\n/*NavigationLink.propTypes = {\n    icon: PropTypes.elementType.isRequired,\n    text: PropTypes.string.isRequired,\n    path: PropTypes.string.isRequired,\n};*/\n\nexport default NavigationLink;\n","import { BurgerIcon, ListIcon } from '@ya.praktikum/react-developer-burger-ui-components';\n\nimport NavigationLink from '../NavigationLink/NavigationLink';\n\nimport styles from './Navigation.module.css';\n\nfunction Navigation() {\n    return (\n        <nav className={styles.navigation}>\n            <NavigationLink icon={BurgerIcon} text=\"Конструктор\" path=\"/\" />\n            <NavigationLink icon={ListIcon} text=\"Лента заказов\" path=\"/feed\" />\n        </nav>\n    );\n}\n\nexport default Navigation;","import NavigationLink from '../NavigationLink/NavigationLink';\nimport { ProfileIcon } from '@ya.praktikum/react-developer-burger-ui-components';\n\nimport styles from './ProfileHeader.module.css'\n\nfunction ProfileHeader() {\n    return (\n        <div className={styles.profileLink}>\n            <NavigationLink icon={ProfileIcon} text=\"Личный кабинет\" path=\"/profile\" />\n        </div>\n    );\n}\n\nexport default ProfileHeader;\n","import { Link } from 'react-router-dom';\nimport { Logo } from '@ya.praktikum/react-developer-burger-ui-components';\nimport Navigation from '../Navigation/Navigation';\nimport ProfileHeader from \"../ProfileHeader/ProfileHeader\";\nimport styles from './AppHeader.module.css';\n\nfunction AppHeader() {\n    return (\n        <header className={styles.header}>\n            <div className={styles.headerContainer}>\n                <Navigation />\n                <Link to=\"/\">\n                    <Logo />\n                </Link>\n                <ProfileHeader/>\n            </div>\n        </header>\n    );\n}\n\nexport default AppHeader;\n","import {TypedUseSelectorHook, useSelector as selectorHook, useDispatch as dispatchHook} from 'react-redux';\nimport {AppDispatch, AppThunk, RootState} from \"./store\";\n\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>()\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook\n\n","import {TItem} from \"./otherTypes\";\n\nexport const ADD_VIEWED_INGREDIENT_DATA:\"ADD_VIEWED_INGREDIENT_DATA\" = \"ADD_VIEWED_INGREDIENT_DATA\";\nexport const REMOVE_VIEWED_INGREDIENT_DATA:\"REMOVE_VIEWED_INGREDIENT_DATA\" =\"REMOVE_VIEWED_INGREDIENT_DATA\";\n\nexport interface IAddViewedIngredientAction {\n    readonly type: typeof ADD_VIEWED_INGREDIENT_DATA;\n    readonly payload: TItem;\n}\n\nexport interface IDeleteViewedIngredientAction {\n    readonly type: typeof REMOVE_VIEWED_INGREDIENT_DATA;\n}\n\nexport type TViewedIngredientActions =\n    | IAddViewedIngredientAction\n    | IDeleteViewedIngredientAction\n","import React from 'react';\nimport {Counter, CurrencyIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport cardStyles  from './Card.module.css'\n\nimport {useDispatch, useSelector} from \"../../services/hooks\";\n\nimport {ADD_VIEWED_INGREDIENT_DATA} from \"../../services/types/viewedIngredient\";\nimport { useDrag} from \"react-dnd\";\nimport {Link, useLocation} from \"react-router-dom\";\nimport {TItem} from \"../../services/types/otherTypes\";\ninterface ICard {\n    card:TItem;\n    onCardClick: (card:TItem)=>void;\n}\n\nconst Card : React.FC<ICard> =  ({card, onCardClick}) => {\n    const dispatch=useDispatch();\n    const { constructorIngredients, isBun } :{ constructorIngredients: TItem[], isBun: TItem } = useSelector((state) => (\n        state.constructorIngredients));\n    const [, dragRef] = useDrag({\n        type: 'item',\n        item: card,\n        collect: (monitor) => ({\n            isDrag: monitor.isDragging()\n        })\n    });\n    function handleClick() {\n        dispatch({\n            type: ADD_VIEWED_INGREDIENT_DATA,\n            payload: card,\n        });\n        onCardClick(card);\n        return false;\n    }\n\n    const count = card.type === 'bun' && isBun?._id === card._id ? 2 : card.type !== 'bun' ? constructorIngredients.filter(\n            (item)=> item._id === card._id).length\n        : 0;\n\n    const location = useLocation();\n    const ingredientId = card['_id'];\n    return (\n\n                    <Link\n                        className={[\"mr-2 ml-4 mt-6 mb-10\",cardStyles.card].join(' ')}\n                        ref={dragRef}\n                        to={{\n                            pathname: `/ingredients/${ingredientId}`,\n                            state: {background: location},\n                        }}\n                        onClick={handleClick}\n                    >\n                    <div className={cardStyles.counter}>\n                        <Counter count={count} size=\"default\" />\n                    </div>\n                    <img src={card.image} alt={card.name} className={[\"pr-4 pl-4\", cardStyles.pic].join(' ')} />\n                    <div className={[\"pt-1 pb-1\", cardStyles.price].join(' ')}>\n                        <p className={[\"pr-2 text text_type_digits-default\", cardStyles.priceNum].join(' ')}>{card.price}</p>\n                        <CurrencyIcon type=\"primary\" />\n                    </div>\n                    <p className={[\"text text_type_main-default\",cardStyles.name].join(' ')}>{card.name}</p>\n                </Link>\n    );\n};\n\n/*Card.propTypes = {\n   card: cardPropTypes.isRequired,\n    onCardClick: PropTypes.func.isRequired,\n};*/\n\nexport default Card;","import React, {useEffect,  FC} from 'react';\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components'\nimport burgerIngredientsStyles from './BurgerIngredients.module.css'\nimport Card from \"../Card/Card\";\nimport {useSelector} from \"../../services/hooks\";\nimport { useInView } from 'react-intersection-observer';\nimport {TItem} from \"../../services/types/otherTypes\";\n\n\ninterface IBurgerIngredients {\n    onCardClick: ()=>void;\n}\nconst BurgerIngredients: FC<IBurgerIngredients> = ({onCardClick}) => {\n    const [current, setCurrent] = React.useState<string>('one')\n    const {  allIngredients }:{ allIngredients: TItem[] } = useSelector((state) => (state.allIngredients));\n\n    const [bunRef, inViewBuns] = useInView({ threshold: 0 });\n    const [sauceRef, inViewSauces] = useInView({ threshold: 0 });\n    const [mainRef, inViewMains] = useInView({ threshold: 0 });\n    useEffect(() => {\n        if (inViewBuns) {\n            setCurrent(\"one\");\n        }\n        else if (inViewSauces) {\n            setCurrent(\"two\");\n        }\n        else if (inViewMains) {\n            setCurrent(\"three\");\n        }\n    }, [inViewBuns, inViewSauces, inViewMains]);\n    const setTab = (tab:string) => {\n        setCurrent(tab);\n        const item = document.getElementById(tab);\n        if (item) item.scrollIntoView({ behavior: \"smooth\" });\n    };\n    const bun = allIngredients.filter((item:TItem) => {\n        return item.type === \"bun\";\n    });\n    const sauce = allIngredients.filter((item:TItem) => {\n        return item.type === \"sauce\";\n    });\n    const main = allIngredients.filter((item:TItem) => {\n        return item.type === \"main\";\n    });\n\n\n    return (\n        <section className={[\"mr-10\",burgerIngredientsStyles.section].join(' ')}>\n            <p className=\"text text_type_main-large pb-5 pt-10\">\n                Соберите бургер\n            </p>\n            <nav>\n                <div style={{ display: 'flex' }} className=\"pb-10\">\n                    <Tab value=\"one\" active={current === 'one'} onClick={setTab}>\n                        Булки\n                    </Tab>\n                    <Tab value=\"two\" active={current === 'two'} onClick={setTab}>\n                        Соусы\n                    </Tab>\n                    <Tab value=\"three\" active={current === 'three'} onClick={setTab}>\n                        Начинки\n                    </Tab>\n                </div>\n            </nav>\n            <div>\n                <div className={burgerIngredientsStyles.scroll}>\n                    <section ref={bunRef} >\n                        <p className=\"text text_type_main-medium\">\n                        Булки\n                        </p>\n                        <div className={burgerIngredientsStyles.cards}>\n                        {bun&&bun.map((card:TItem) => {\n                            return <Card card={card} key={card._id}  onCardClick={onCardClick}   />\n                        }\n                        )}\n                        </div>\n                    </section>\n                    <section ref={sauceRef}>\n                        <p className=\"text text_type_main-medium\">\n                        Соусы\n                        </p>\n                        <div className={burgerIngredientsStyles.cards}>\n                        {sauce.map((card:TItem) => {\n                            return <Card card={card} key={card._id} onCardClick={onCardClick}/>\n                            }\n                        )}\n                        </div>\n                    </section>\n                    <section ref={mainRef}>\n                        <p className=\"text text_type_main-medium\">\n                        Начинки\n                        </p>\n                        <div className={burgerIngredientsStyles.cards}>\n                        {main.map((card:TItem) => {\n                            return <Card card={card} key={card._id}  onCardClick={onCardClick}/>\n                        }\n                    )}\n                        </div>\n                    </section>\n                </div>\n            </div>\n\n        </section>\n    );\n};\n/*BurgerIngredients.propTypes = {\n    onCardClick: PropTypes.func.isRequired,\n};*/\n\nexport default BurgerIngredients;","import {TItem} from \"./otherTypes\";\n\nexport const ADD_CONSTRUCTOR_INGREDIENTS_BUN:'ADD_CONSTRUCTOR_INGREDIENTS_BUN'='ADD_CONSTRUCTOR_INGREDIENTS_BUN';\nexport const ADD_CONSTRUCTOR_INGREDIENTS:'ADD_CONSTRUCTOR_INGREDIENTS'='ADD_CONSTRUCTOR_INGREDIENTS';\nexport const DELETE_CONSTRUCTOR_INGREDIENTS:'DELETE_CONSTRUCTOR_INGREDIENTS'='DELETE_CONSTRUCTOR_INGREDIENTS';\nexport const MOVE_CONSTRUCTOR_INGREDIENTS:'MOVE_CONSTRUCTOR_INGREDIENTS'='MOVE_CONSTRUCTOR_INGREDIENTS';\nexport const RESET_CONSTRUCTOR:'RESET_CONSTRUCTOR'='RESET_CONSTRUCTOR';\n\nexport type TConstructorIngredientsState = {\n    constructorIngredients:  Array<TItem> ,\n    isBun: null,\n};\n\nexport interface IMoveIngredient {\n    readonly type: typeof MOVE_CONSTRUCTOR_INGREDIENTS;\n    payload: { dragIndex: number; hoverIndex: number };\n}\nexport interface IAddBunConstructorIngredients {\n    readonly type: typeof ADD_CONSTRUCTOR_INGREDIENTS_BUN;\n    ingredientItem:TItem;\n}\n\nexport interface IAddConstructorIngredients{\n    readonly type: typeof ADD_CONSTRUCTOR_INGREDIENTS;\n    ingredientItem:TItem;\n}\n\nexport interface IDeleteConstructorIngredients {\n    readonly type: typeof DELETE_CONSTRUCTOR_INGREDIENTS;\n    ingredientItemIndex: number;\n}\nexport interface IResetConstructorIngredients {\n    readonly type: typeof RESET_CONSTRUCTOR;\n}\nexport type TConstructorIngredientsActions =\n    | IMoveIngredient\n    | IAddBunConstructorIngredients\n    | IAddConstructorIngredients\n    | IDeleteConstructorIngredients\n    | IResetConstructorIngredients;","export const apiUrl = 'https://norma.nomoreparties.space/api';\r\nexport const WS_ALL_ORDERS_URL = 'wss://norma.nomoreparties.space/orders/all';\r\nexport const WS_USER_ORDERS_URL = 'wss://norma.nomoreparties.space/orders';\r\n\r\nexport const handleResponse=(res: Response) =>{\r\n    return res.ok ? res.json() : res.json().then((err) => Promise.reject(err));\r\n};\r\n\r\nexport const ingredientsRequest = async () => {\r\n    return await fetch(`${apiUrl}/ingredients`)\r\n};\r\nexport const getOrder = async (orderItems:string[], token: string) => {\r\n    return await fetch(`${apiUrl}/orders`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ ingredients:orderItems })\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nclass Api {\r\n    _headers: {};\r\n    _serverUrl: string;\r\n\r\n    constructor({ serverUrl, headers }: { serverUrl: string; headers: {} }) {\r\n        this._headers = headers;\r\n        this._serverUrl = serverUrl;\r\n    }\r\n\r\n    getOrdersData() {\r\n        return fetch(`${this._serverUrl}/orders/all`, {\r\n            method: 'GET',\r\n            headers: this._headers,\r\n        }).then(handleResponse);\r\n    }\r\n\r\n    getUserOrdersData(token: string) {\r\n        return fetch(`${this._serverUrl}/orders`, {\r\n            method: 'GET',\r\n            headers: { ...this._headers, Authorization: `Bearer ${token}` },\r\n        }).then(handleResponse);\r\n    }\r\n\r\n\r\n}\r\n\r\nconst api = new Api({\r\n    serverUrl: apiUrl,\r\n    headers: {\r\n        Authorization: '',\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\n\r\n\r\n\r\n\r\nexport default api;","export const GET_ORDER_REQUEST:'GET_ORDER_REQUEST' = 'GET_ORDER_REQUEST';\nexport const GET_ORDER_SUCCESS:'GET_ORDER_SUCCESS'= 'GET_ORDER_SUCCESS';\nexport const SET_ORDER_ERROR:'SET_ORDER_ERROR'='SET_ORDER_ERROR';\n\nexport type TOrderState = {\n    orderNumber: string,\n    orderRequest: boolean,\n    orderFailed: boolean,\n};\n\nexport interface IGetOrderNumberRequest {\n    readonly type: typeof GET_ORDER_REQUEST;\n}\n\nexport interface IGetOrderNumberSuccess {\n    readonly type: typeof GET_ORDER_SUCCESS;\n    orderNumber: string;\n}\n\nexport interface IGetOrderNumberError {\n    readonly type: typeof SET_ORDER_ERROR;\n}\n\nexport type TOrderActions =\n    | IGetOrderNumberRequest\n    | IGetOrderNumberSuccess\n    | IGetOrderNumberError;","import {ConstructorElement, DragIcon,} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport {useDispatch} from \"../../services/hooks\";\nimport {DropTargetMonitor, useDrag, useDrop} from \"react-dnd\";\nimport { useRef, FC } from \"react\";\nimport {MOVE_CONSTRUCTOR_INGREDIENTS} from '../../services/types/contructorIngredients'\nimport constructorItemStyles from './BurgerConstructorItem.module.css'\nimport {TItem} from \"../../services/types/otherTypes\";\nimport {deleteConstructorIngredients} from \"../../services/actions/constructorIngredients\";\n\ninterface IBurgerConstructorItem {\n    type?: \"top\" | \"bottom\" ,\n    index: number,\n    burger: TItem,\n    locked?: boolean,\n}\nconst BurgerConstructorItem: FC<IBurgerConstructorItem>=({ type, burger, index, locked })=>{\n\n    const dispatch = useDispatch();\n    function handleClose() {\n        dispatch(deleteConstructorIngredients(index));\n    }\n    const dropRef = useRef<HTMLDivElement>(null);\n    const [{ handlerId }, drop] = useDrop({\n        accept: \"ingredients\",\n        collect(monitor:DropTargetMonitor) {\n            return {\n                handlerId: monitor.getHandlerId(),\n            };\n        },\n        hover(item:{index: number}, monitor: DropTargetMonitor) {\n            if (!dropRef.current) {\n                return;\n            }\n            const dragIndex:number = item.index;\n            const hoverIndex = index;\n            if (!dragIndex || dragIndex === hoverIndex) {\n                return;\n            }\n            const hoverBoundingRect = dropRef.current.getBoundingClientRect();\n            const hoverMiddleY =\n                (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n            const clientOffset = monitor.getClientOffset();\n            if (!clientOffset) return;\n            const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n                return;\n            }\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n                return;\n            }\n\n            dispatch({\n                type: MOVE_CONSTRUCTOR_INGREDIENTS,\n                payload: { dragIndex, hoverIndex },\n            });\n            item.index = hoverIndex;\n        },\n    });\n    const [, drag] = useDrag({\n        type: \"ingredients\",\n        item: () => {\n            return { burger, index };\n        },\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging(),\n        }),\n    });\n\n    drag(drop(dropRef));\n\n    return (\n        <div ref={dropRef} data-handler-id={handlerId} className={ [\"mb-4\", constructorItemStyles.itemWrapper].join(' ')}>\n            {burger.type !== \"bun\" ? (<DragIcon type=\"primary\" />) : null}\n\n            <ConstructorElement\n\n                text={(burger.type !== \"bun\"? burger?.name: type===\"top\"? burger?.name+\" (верх)\":burger?.name+\" (низ)\")!}\n                price={burger?.price!}\n                thumbnail={burger?.image!}\n                type={type}\n                isLocked={locked}\n                handleClose={handleClose}\n            />\n        </div>\n    );\n}\n/*BurgerConstructorItem.propTypes = {\n    type: PropTypes.string,\n    index: PropTypes.number,\n    burger: cardPropTypes.isRequired,\n    locked: PropTypes.bool\n};*/\n\nexport default BurgerConstructorItem;","import {\n    ADD_CONSTRUCTOR_INGREDIENTS,\n    ADD_CONSTRUCTOR_INGREDIENTS_BUN,\n    DELETE_CONSTRUCTOR_INGREDIENTS,\n    IAddBunConstructorIngredients,\n    IAddConstructorIngredients,\n    IDeleteConstructorIngredients,\n    IMoveIngredient,\n    MOVE_CONSTRUCTOR_INGREDIENTS\n} from \"../types/contructorIngredients\";\nimport {TItem} from \"../types/otherTypes\";\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const addBunConstructorIngredients = (ingredientItem: TItem): IAddBunConstructorIngredients => {\n    return {\n        type: ADD_CONSTRUCTOR_INGREDIENTS_BUN,\n        ingredientItem: ingredientItem,\n    };\n};\n\nexport const addConstructorIngredients = (ingredientItem: TItem): IAddConstructorIngredients => {\n    return {\n        type: ADD_CONSTRUCTOR_INGREDIENTS,\n        ingredientItem: { ...ingredientItem, key: uuidv4() },\n    };\n};\n\nexport const deleteConstructorIngredients = ( ingredientItemIndex: number): IDeleteConstructorIngredients => {\n    return {\n        type: DELETE_CONSTRUCTOR_INGREDIENTS,\n        ingredientItemIndex: ingredientItemIndex,\n    };\n};\n\n\nexport const moveIngredient = ({dragIndex, hoverIndex,}: { dragIndex: number; hoverIndex: number; }): IMoveIngredient => {\n    return {\n        type:MOVE_CONSTRUCTOR_INGREDIENTS,\n        payload: { dragIndex, hoverIndex },\n    };\n};","import constructorItemsStyles from './BurgerConstructorItems.module.css'\nimport {useSelector} from \"../../services/hooks\";\nimport { useDrop } from \"react-dnd\";\nimport {useDispatch} from \"../../services/hooks\";\nimport BurgerConstructorItem from \"../BurgerConstructorItem/BurgerConstructorItem\";\nimport {TItem} from \"../../services/types/otherTypes\";\nimport {addBunConstructorIngredients, addConstructorIngredients} from \"../../services/actions/constructorIngredients\";\n\n\nfunction BurgerConstructorItems(){\n\n    const { constructorIngredients, isBun } :{ constructorIngredients: TItem[], isBun: TItem } = useSelector((state) => (\n     state.constructorIngredients));\n    const dispatch = useDispatch();\n    const [, dropTarget] = useDrop({\n        accept: \"item\",\n        drop(item:TItem) {\n            onDropHandler(item);\n        },\n    });\n\n    function onDropHandler(item:TItem) {\n        if (item.type === \"bun\") {\n            dispatch(addBunConstructorIngredients(item));\n        } else {\n            dispatch(addConstructorIngredients(item));\n        }\n    }\n\n    return (\n        <section  ref={dropTarget}>\n            <ul className={ constructorItemsStyles.ul}>\n                <li className={ constructorItemsStyles.item}>\n                    {(isBun)&& (\n                        <BurgerConstructorItem\n                            type=\"top\"\n                            burger={isBun}\n                            locked\n                            index={0}\n                        />\n                    )}\n                </li>\n                <div className={ constructorItemsStyles.scroll}>\n                    {constructorIngredients && (\n                            constructorIngredients.filter((item:TItem) => item.type !== \"bun\").map((item:TItem, index:number) => {\n                                    return (\n                                        <BurgerConstructorItem\n                                            key={item.key}\n                                            burger={item}\n                                            index={index}\n                                        />\n                                    );\n                                }))}\n                </div>\n                <li className={[\"pt-4\",  constructorItemsStyles.item].join(' ')}>\n                    <div className={ constructorItemsStyles.itemWrapper}>\n                        {isBun && (\n                            <BurgerConstructorItem\n                                type=\"bottom\"\n                                burger={isBun}\n                                locked\n                                index={0}\n                            />\n                        )}\n                    </div>\n                </li>\n\n            </ul>\n        </section>\n    );\n}\nexport default BurgerConstructorItems;","export default __webpack_public_path__ + \"static/media/done.85c3a14d.svg\";","import React from 'react';\nimport stylesOrderDetails from './OrderDetails.module.css'\nimport doneImage from '../../images/done.svg'\nimport {useSelector} from \"../../services/hooks\";\n\n\nconst OrderDetails = () => {\n    const orderNumber = useSelector((store) => store.order.orderNumber);\n    return (\n        <div className={stylesOrderDetails.orderWrapper}>\n\n                    <div className={[\"mt-4 mb-8 text text_type_digits-large\",stylesOrderDetails.orderNum].join('  ')}>\n                        { orderNumber }\n                    </div>\n\n            <p className={[\"mb-15 text text_type_main-medium\", stylesOrderDetails.order].join('  ')}>\n                идентификатор заказа\n            </p>\n            <img src={doneImage} alt={'Готово'} className=\"mb-15\"/>\n            <p className={[\"mb-2 text text_type_main-default\", stylesOrderDetails.order].join('  ')}>\n                Ваш заказ начали готовить\n            </p>\n            <p className={[\"mb-30 text text_type_main-default text_color_inactive\", stylesOrderDetails.order].join('  ')}>\n                Дождитесь готовности на орбитальной станции\n            </p>\n        </div>\n    );\n};\n\nexport default OrderDetails;","import React from 'react';\nimport stylesModalOverlay from './ModalOverlay.module.css'\n\ninterface IModalOverlay {\n    onClose: () => void;\n}\nconst ModalOverlay: React.FC<IModalOverlay> = ({onClose}) => {\n    return (\n        <div className={stylesModalOverlay.overlay} onClick={onClose}>\n        </div>\n    );\n};\n\n\nexport default ModalOverlay;","import React from 'react'\nimport ReactDom from 'react-dom'\nimport modalStyles from './Modal.module.css'\nimport {CloseIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport ModalOverlay from \"../ModalOverlay/ModalOverlay\";\nimport {useEffect} from \"react\";\ninterface IModal {\n    open: boolean;\n    onClose: (isGoBack: boolean) => void;\n    title:string;\n    isGoBack: boolean;\n}\nconst Modal: React.FC<IModal>= ({ open, children, onClose, title,isGoBack })=>{\n    const onKeydown = (event:KeyboardEvent) => {\n        if(event.key === 'Escape'){\n            onClose(isGoBack)\n        }\n    }\n     useEffect(() => {\n         document.addEventListener('keydown', onKeydown)\n         return () => document.removeEventListener('keydown', onKeydown)\n     },)\n    if (!open) return null\n    const close=() => {\n        onClose(isGoBack);\n    }\n    return ReactDom.createPortal(\n        <>\n\n            <ModalOverlay onClose={close}/>\n            <div className={[\"pr-10 pl-10 pt-10\", modalStyles.modalHeader].join(' ')}>\n                <div className={modalStyles.modalHeaderWrapper}>\n                    <h2 className={[\"text text_type_main-large\", modalStyles.headerText].join(' ')}>\n                        {title}\n                    </h2>\n                    <button onClick={close} className={modalStyles.button}>\n                        <CloseIcon type=\"primary\" />\n                    </button>\n                </div>\n                {children}\n            </div>\n        </>,\n        document.getElementById('portal')!\n    )\n}\n\n/*Modal.propTypes = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    children: PropTypes.node.isRequired,\n    title: PropTypes.string.isRequired,\n};*/\n\nexport default Modal;\n","export function setCookie(data: { accessToken: string; refreshToken: string }) {\n    const accessToken = data.accessToken.split('Bearer ')[1];\n    const refreshToken = data.refreshToken;\n    document.cookie = `accessToken=${accessToken}`;\n    document.cookie = `refreshToken=${refreshToken}`;\n}\n\nexport function getRefreshTokenFromCookie() {\n    return document.cookie.replace(/(?:(?:^|.*;\\s*)refreshToken\\s*=\\s*([^;]*).*$)|^.*$/, '$1');\n}\n\nexport function getAccessTokenFromCookie() {\n    return document.cookie.replace(/(?:(?:^|.*;\\s*)accessToken\\s*=\\s*([^;]*).*$)|^.*$/, '$1');\n}\n\n\n\n","import React, {useState, FC} from 'react';\nimport {  CurrencyIcon, Button} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport constructorStyles from './BurgerConstructor.module.css';\nimport {useDispatch, useSelector} from \"../../services/hooks\";\nimport {RESET_CONSTRUCTOR} from '../../services/types/contructorIngredients'\nimport {getOrderNum} from \"../../services/actions/order\";\nimport {SET_ORDER_ERROR} from \"../../services/types/order\";\nimport BurgerConstructorItems from \"../BurgerConstructorItems/BurgerConstructorItems\";\nimport {useMemo} from \"react\";\nimport OrderDetails from \"../OrderDetails/OrderDetails\";\nimport Modal from \"../Modal/Modal\";\nimport { getRefreshTokenFromCookie} from \"../../services/cookieFunctions\";\nimport { History } from 'history';\nimport {TItem} from \"../../services/types/otherTypes\";\n\n\ninterface IBurgerConstructor {\n    history : History\n}\n\nconst BurgerConstructor: FC<IBurgerConstructor> = ({history}) => {\n    const { loginSuccess } = useSelector((state:any) => state.auth);\n    const isRefreshToken = getRefreshTokenFromCookie();\n    const dispatch=useDispatch();\n    const { constructorIngredients, isBun } :{ constructorIngredients: TItem[], isBun: TItem } = useSelector((state) => (\n        state.constructorIngredients));\n\n    const [isOpen, setIsOpen] = useState<boolean>(false)\n\n    const handleCloseModal = () => {\n        setIsOpen(false);\n    }\n    const orderModal= (\n        <Modal open={isOpen} onClose={handleCloseModal}  title={\"\"} isGoBack={true} >\n            <OrderDetails/>\n        </Modal>\n    )\n    const orderSend=()=>{\n        const token=localStorage.getItem('token');\n        //console.log('Token user', token)\n        if (loginSuccess || isRefreshToken) {\n            if(isBun!==null){\n                if (isBun._id) {\n                    const ingredientsIds = [\n                        ...constructorIngredients.map((element) => element._id),\n                        isBun._id,\n                    ];\n                    setIsOpen(true);\n                    dispatch(getOrderNum(ingredientsIds, token));\n                    dispatch({\n                        type: RESET_CONSTRUCTOR,\n                    });\n\n\n                }\n            }\n            else {\n                dispatch({\n                    type: SET_ORDER_ERROR,\n                });\n            }\n        }\n        else {\n            history.push('/login');\n        }\n    }\n\n\n\n    const totalPrice = useMemo(() => {\n        return constructorIngredients.reduce(function (acc:number, item:TItem ) {\n            let totalPrice = item.price;\n            if (item.type === 'bun') {\n\n                totalPrice += item.price;\n            }\n\n            return acc + totalPrice;}, 0) + (isBun ? isBun.price * 2 : 0);\n    }, [constructorIngredients, isBun]);\n\n    return (\n\n        <>\n            <section className={[\"pt-25 pl-4 pr-4\", constructorStyles.items].join(' ')}>\n                <BurgerConstructorItems/>\n                <div className={[\"pt-10\", constructorStyles.totalWrapper].join(' ')}>\n                    <div className={[\"pr-10\", constructorStyles.totalPrice].join(' ')}>\n                        <p className=\"text text_type_digits-medium\">\n                            {totalPrice ||0}\n                        </p>\n                        <CurrencyIcon type=\"primary\"/>\n                    </div>\n\n                    <Button type=\"primary\" size=\"large\" onClick={()=>{\n                        orderSend();\n\n                    }}>\n                        Оформить заказ\n                    </Button>\n\n\n                    {isOpen&&orderModal}\n                </div>\n\n            </section>\n\n\n        </>\n    );\n};\n\n/*BurgerConstructor.propTypes = {\n  history: PropTypes.object.isRequired,\n};*/\n\nexport default BurgerConstructor;","import  {getOrder} from \"../api/api\";\nimport {GET_ORDER_REQUEST, GET_ORDER_SUCCESS, SET_ORDER_ERROR} from \"../types/order\";\nimport {AppDispatch, AppThunk} from \"../store\";\n\nexport const getOrderNum: AppThunk =(orderItems: string[], token: string) =>  (dispatch: AppDispatch)=>{\n        dispatch({\n            type: GET_ORDER_REQUEST,\n        });\n        getOrder(orderItems, token)\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                }\n                return Promise.reject(`Ошибка ${res.status}`);\n            })\n            .then((res) => {\n                if (res && res.success) {\n                    dispatch({\n                        type: GET_ORDER_SUCCESS,\n                        orderNumber: res.order.number,\n                    });\n\n                } else {\n                    dispatch({\n                        type: SET_ORDER_ERROR,\n                    });\n                }\n            })\n            .catch((err) => {\n                dispatch({\n                    type: SET_ORDER_ERROR,\n                });\n            });\n    };\n","import React from 'react';\nimport stylesIngredientDetails from \"./IngredientDetails.module.css\"\nimport {useSelector, useDispatch} from \"../../services/hooks\";\nimport  {useEffect} from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {getViewedIngredient} from \"../../services/actions/viewedIngredient\";\nimport {TItem} from \"../../services/types/otherTypes\";\n\n\n\nconst IngredientDetails = () => {\n\n    const { id } = useParams<{id: string}>();\n    const dispatch = useDispatch();\n    const {  allIngredients }:{ allIngredients: TItem[] } = useSelector((state) => (state.allIngredients));\n\n    useEffect(() => {\n            const itemData = allIngredients.find((item) => item._id === id);\n            itemData && dispatch(getViewedIngredient(itemData));\n        }, [id, allIngredients, dispatch]\n    );\n\n\n    const {currentIngredient}:{currentIngredient: TItem} = useSelector((state) => state.viewedIngredient);\n\n\n\n    return (\n        <div className={stylesIngredientDetails.ingredientContainer}>\n            <img src={currentIngredient.image} alt={currentIngredient.name} className={[\"mb-4\",stylesIngredientDetails.image].join(' ')}/>\n            <h3 className={[\"text text_type_main-medium mb-8\", stylesIngredientDetails.title].join(' ')}>\n                {currentIngredient.name}\n            </h3>\n            <ul className={[\"mb-15\",stylesIngredientDetails.list ].join(' ')}>\n                <li className={[\"mr-5\",stylesIngredientDetails.calories].join(' ')}>\n                    <p className=\"text text_type_main-default\">\n                        Калории,ккал\n                    </p>\n                    <p className={[\"mt-2 text text_type_digits-default\", stylesIngredientDetails.caloriesNum].join(' ')}>\n                        {currentIngredient.calories}\n                    </p>\n\n                </li>\n                <li className={[\"mr-5 text text_type_digits-default\",stylesIngredientDetails.calories].join(' ')}>\n                    <p className=\"text text_type_main-default\">\n                        Белки, г\n                    </p>\n                    <p className={[\"mt-2 text text_type_digits-default\", stylesIngredientDetails.caloriesNum].join(' ')}>\n                        {currentIngredient.proteins}\n                    </p>\n\n                </li>\n                <li className={[\"mr-5\",stylesIngredientDetails.calories].join(' ')}>\n                    <p className=\"text text_type_main-default\">\n                        Жиры, г\n                    </p>\n                    <p className={[\"mt-2 text text_type_digits-default\" , stylesIngredientDetails.caloriesNum].join(' ')}>\n                        {currentIngredient.fat}\n                    </p>\n                </li>\n                <li className={stylesIngredientDetails.calories}>\n                    <p className=\"text text_type_main-default\">\n                        Углеводы, г\n                    </p>\n                    <p className={[\"mt-2 text text_type_digits-default\", stylesIngredientDetails.caloriesNum].join(' ')}>\n                        {currentIngredient.carbohydrates}\n                    </p>\n                </li>\n            </ul>\n\n        </div>\n    );\n};\n\n\n\nexport default IngredientDetails;","import {TItem} from \"../types/otherTypes\";\nimport {\n    ADD_VIEWED_INGREDIENT_DATA,\n    IAddViewedIngredientAction, IDeleteViewedIngredientAction,\n    REMOVE_VIEWED_INGREDIENT_DATA\n} from \"../types/viewedIngredient\";\n\nexport const getViewedIngredient = (ingredientItem: TItem): IAddViewedIngredientAction => ({\n    type: ADD_VIEWED_INGREDIENT_DATA,\n    payload: ingredientItem\n})\n\nexport const removeViewedIngredient = (): IDeleteViewedIngredientAction => ({\n    type: REMOVE_VIEWED_INGREDIENT_DATA\n})\n","import {TOrders} from \"./ws\";\n\nexport const GET_ORDERS_DATA_REQUEST:'GET_ORDERS_DATA_REQUEST' = 'GET_ORDERS_DATA_REQUEST' ;\nexport const GET_ORDERS_DATA_SUCCESS:'GET_ORDERS_DATA_SUCCESS' = 'GET_ORDERS_DATA_SUCCESS';\nexport const GET_ORDERS_DATA_ERROR :'GET_ORDERS_DATA_ERROR' = 'GET_ORDERS_DATA_ERROR';\n\nexport type TOrdersDataState = {\n    ordersData: null;\n    ordersDataRequest: boolean;\n    ordersDataError: boolean;\n};\n\nexport interface IGetOrdersDataRequest {\n    readonly type: typeof GET_ORDERS_DATA_REQUEST;\n}\n\nexport interface IGetOrdersDataSuccess {\n    readonly type: typeof GET_ORDERS_DATA_SUCCESS;\n    ordersData: TOrders;\n}\n\nexport interface IGetOrdersDataError {\n    readonly type: typeof GET_ORDERS_DATA_ERROR;\n}\n\nexport type TOrdersDataActions =\n    | IGetOrdersDataRequest\n    | IGetOrdersDataSuccess\n    | IGetOrdersDataError;","import { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\n\nimport priceStyles from './Price.module.css';\n\ninterface IPrice {\n    textType: string;\n    price: number;\n    typeIcon: 'secondary' | 'primary' | 'error' | 'success';\n}\n\nconst Price: React.FC<IPrice> = ({ textType, price, typeIcon }) => {\n    return (\n        <div className={`${priceStyles.price} mt-1 mb-1`}>\n            <p className={`text ${textType} pr-2`}>{price}</p>\n            <CurrencyIcon type={typeIcon} />\n        </div>\n    );\n};\n\nexport default Price;\n","import React from \"react\";\r\nimport { useSelector } from '../../services/hooks';\r\nimport orderInfoStyles from './OrderInfo.module.css';\r\nimport {TItem} from \"../../services/types/otherTypes\";\r\nimport {TOrders, TOrder} from \"../../services/types/ws\";\r\nimport Price from \"../Price/Price\";\r\ninterface IOrderInfo {\r\n    ordersData: TOrders | null;\r\n    id: string;\r\n    orderDetailsData: TOrder | null;\r\n\r\n}\r\nconst OrderInfo: React.FC<IOrderInfo> = ({ ordersData, orderDetailsData, id }) => {\r\n    const { allIngredients }: { allIngredients: TItem[] } = useSelector(\r\n        (state) => state.allIngredients,\r\n    );\r\n\r\n   const orderInfo:TOrder | null | TOrder[]= !ordersData\r\n        ? orderDetailsData\r\n        : ordersData.orders.filter((item)=>item._id===id)[0];\r\n\r\n   //console.log('Заказ orderInfo', orderInfo)\r\n\r\n    const formatDateFromISOStringToLocaleString = (ISOString: string) => {\r\n        const dateInMs = Date.parse(ISOString);\r\n        return new Date(dateInMs).toLocaleString();\r\n    };\r\n    const date = formatDateFromISOStringToLocaleString(orderInfo ? orderInfo.createdAt : '');\r\n    let price = 0;\r\n\r\n    const status = (order: TOrder) => {\r\n        switch (order.status) {\r\n            case 'done':\r\n                return 'Выполнен';\r\n            case 'pending':\r\n                return 'Готовится';\r\n            case 'cancelled':\r\n                return 'Отменен';\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <section className={orderInfoStyles.orderInfo}>\r\n            <p className={`${orderInfoStyles.orderNumber} text text_type_digits-default`}>{`#${\r\n                orderInfo ? orderInfo.number : ''\r\n            }`}</p>\r\n            <h2 className=\"text text_type_main-medium mt-10\">{orderInfo ? orderInfo.name : ''}</h2>\r\n            <p className={`${orderInfoStyles.orderStatus} text text_type_main-default text_color_success mt-3`}>\r\n                {orderInfo ? status(orderInfo) : ''}\r\n            </p>\r\n            <dl className={`${orderInfoStyles.descriptionList} mt-15`}>\r\n                <dt className=\"text text_type_main-medium\">Состав:</dt>\r\n                <dd className={orderInfoStyles.descriptionDefinition}>\r\n                    <ul className={`${orderInfoStyles.list} mt-6`}>\r\n                        {orderInfo &&\r\n                        orderInfo.ingredients.map((ingredient, index) => {\r\n                            const ingredientData: TItem | undefined = allIngredients.find(\r\n                                (element) => {\r\n                                    return ingredient === element._id;\r\n                                },\r\n                            );\r\n\r\n                            if (ingredientData) {\r\n                                price += +ingredientData.price;\r\n                            }\r\n\r\n                            return (\r\n                                <li key={`${ingredient} + ${index}`}>\r\n                                    <figure className={`${orderInfoStyles.figure} pr-6`}>\r\n                                        <img\r\n                                            className={orderInfoStyles.img}\r\n                                            src={ingredientData ? ingredientData.image : ''}\r\n                                            alt={ingredientData ? ingredientData.name : ''}\r\n                                        />\r\n                                        <figcaption className={`${orderInfoStyles.figcaption} ml-4`}>\r\n                                            <h3 className={`${orderInfoStyles.ingredientName} text text_type_main-default mt-4`}>\r\n                                                {ingredientData ? ingredientData.name : ''}\r\n                                            </h3>\r\n                                            <Price\r\n                                                price={ingredientData ? ingredientData.price : 0}\r\n                                                textType=\"text_type_digits-default\"\r\n                                                typeIcon=\"primary\"\r\n                                            />\r\n                                        </figcaption>\r\n                                    </figure>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                </dd>\r\n            </dl>\r\n            <div className={`${orderInfoStyles.info} mt-10 mb-10`}>\r\n                <p className=\"text text_type_main-default text_color_inactive\">{orderInfo ? date : ''}</p>\r\n                <Price price={price} textType=\"text_type_digits-default\" typeIcon=\"primary\" />\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default OrderInfo;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from '../services/hooks';\r\nimport { getOrdersData } from '../services/actions/ordersData';\r\nimport OrderInfo from \"../components/OrderInfo/OrderInfo\";\r\nimport styles from './order-info.module.css';\r\n\r\nexport const OrderInfoPage: React.FC = () => {\r\n    const { id } = useParams<{ id: string }>();\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n   React.useEffect(() => {\r\n        dispatch(getOrdersData());\r\n    }, [dispatch]);\r\n\r\n    const { ordersData } = useSelector((state) => state.ordersData);\r\n   // console.log(\"Данные заказов\", ordersData)\r\n    return (\r\n        <div className={styles.orderInfo}>\r\n\r\n                <OrderInfo ordersData={ordersData} id={id} orderDetailsData={null} />\r\n\r\n        </div>\r\n    );\r\n};","import {AppDispatch, AppThunk} from \"../store\";\r\nimport {GET_ORDERS_DATA_ERROR, GET_ORDERS_DATA_REQUEST, GET_ORDERS_DATA_SUCCESS} from \"../types/ordersData\";\r\nimport api from \"../api/api\";\r\n\r\n\r\n\r\nexport const getOrdersData: AppThunk = () => (dispatch: AppDispatch) => {\r\n    dispatch({ type: GET_ORDERS_DATA_REQUEST });\r\n\r\n    return api\r\n        .getOrdersData()\r\n        .then((data) => {\r\n            dispatch({\r\n                type: GET_ORDERS_DATA_SUCCESS,\r\n                ordersData: data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            dispatch({ type: GET_ORDERS_DATA_ERROR });\r\n        });\r\n};","import {TItem} from \"./otherTypes\";\n\nexport const GET_INGREDIENTS_REQUEST:'GET_INGREDIENTS_REQUEST' = 'GET_INGREDIENTS_REQUEST';\nexport const GET_INGREDIENTS_SUCCESS:'GET_INGREDIENTS_SUCCESS' = 'GET_INGREDIENTS_SUCCESS';\nexport const GET_INGREDIENTS_ERROR:'GET_INGREDIENTS_ERROR' = 'GET_INGREDIENTS_ERROR';\n\nexport type TAllIngredientsState = {\n    allIngredients: [];\n    ingredientsRequest: boolean;\n    ingredientsFailed: boolean;\n};\nexport type TAllIngredients = {\n    success: boolean;\n    data: TItem[];\n};\nexport interface IGetAllIngredientsRequest {\n    readonly type: typeof GET_INGREDIENTS_REQUEST;\n}\nexport interface IGetAllIngredientsSuccess {\n    readonly type: typeof GET_INGREDIENTS_SUCCESS;\n    allIngredients: TAllIngredients;\n}\nexport interface IGetAllIngredientsError {\n    readonly type: typeof GET_INGREDIENTS_ERROR;\n}\n\nexport type TGetAllIngredientsActions =\n    | IGetAllIngredientsRequest\n    | IGetAllIngredientsSuccess\n    | IGetAllIngredientsError;","\nimport {\n    GET_INGREDIENTS_ERROR,\n    GET_INGREDIENTS_REQUEST,\n    GET_INGREDIENTS_SUCCESS,\n    TAllIngredientsState, TGetAllIngredientsActions\n} from \"../types/allIngredients\";\n\n\nexport const initialStateAllIngredients: TAllIngredientsState= {\n    allIngredients: [],\n    ingredientsRequest: false,\n    ingredientsFailed: false,\n}\n\nexport const allIngredientsReducer = (state = initialStateAllIngredients, action:TGetAllIngredientsActions ) => {\n    switch (action.type) {\n        case GET_INGREDIENTS_REQUEST: {\n            return {\n                ...state,\n                ingredientsRequest: true\n            };\n        }\n        case GET_INGREDIENTS_SUCCESS: {\n            return {\n                ...state,\n                ingredientsFailed: false,\n                allIngredients: action.allIngredients,\n                ingredientsRequest: false,\n            };\n        }\n        case GET_INGREDIENTS_ERROR: {\n            return {\n                ...state,\n                ingredientsFailed: true,\n                ingredientsRequest: false\n            };\n        }\n        default: {\n            return state;\n        }\n    }\n}","import {\n    ADD_CONSTRUCTOR_INGREDIENTS,\n    ADD_CONSTRUCTOR_INGREDIENTS_BUN,\n    DELETE_CONSTRUCTOR_INGREDIENTS,\n    MOVE_CONSTRUCTOR_INGREDIENTS,\n    RESET_CONSTRUCTOR,\n    TConstructorIngredientsActions,\n    TConstructorIngredientsState\n} from \"../types/contructorIngredients\";\n\n\nexport const initialStateConstructorIngredients: TConstructorIngredientsState={\n    constructorIngredients:  [] ,\n    isBun: null,\n}\n\nexport const constructorIngredientsReducer = (state = initialStateConstructorIngredients, action:TConstructorIngredientsActions)=> {\n    switch (action.type) {\n        case ADD_CONSTRUCTOR_INGREDIENTS_BUN: {\n            return {\n                ...state,\n                isBun: action.ingredientItem,\n            };\n        }\n        case  ADD_CONSTRUCTOR_INGREDIENTS: {\n            return {\n                ...state,\n                constructorIngredients: [...state.constructorIngredients, action.ingredientItem],\n            };\n        }\n        case DELETE_CONSTRUCTOR_INGREDIENTS: {\n            return {\n                ...state,\n                constructorIngredients: state.constructorIngredients.filter((elem, i) => i !== action.ingredientItemIndex),\n            }\n        }\n        case MOVE_CONSTRUCTOR_INGREDIENTS: {\n            const { dragIndex, hoverIndex } = action.payload;\n            const constructorIngredients = [...state.constructorIngredients];\n            constructorIngredients[dragIndex] = constructorIngredients.splice(hoverIndex, 1, constructorIngredients[dragIndex])[0];\n            return {\n                ...state,\n                constructorIngredients,\n            };\n        }\n        case RESET_CONSTRUCTOR: {\n            return {\n                ...state,\n                constructorIngredients: initialStateConstructorIngredients.constructorIngredients,\n                isBun: initialStateConstructorIngredients.isBun,\n            };\n        }\n\n        default: {\n            return {\n                ...state,\n            };\n        }\n    }\n}","import {ADD_VIEWED_INGREDIENT_DATA, REMOVE_VIEWED_INGREDIENT_DATA} from \"../types/viewedIngredient\";\nimport {TItem} from \"../types/otherTypes\";\nimport {TViewedIngredientActions} from \"../types/viewedIngredient\";\n\nexport type TViewedIngredientState = {\n    currentIngredient: TItem;\n}\n\nexport const initialStateViewedIngredient: TViewedIngredientState = {\n    currentIngredient: {} as TItem,\n};\nexport const viewedIngredientReducer = (state = initialStateViewedIngredient, action: TViewedIngredientActions) :TViewedIngredientState => {\n    switch (action.type) {\n\n        case ADD_VIEWED_INGREDIENT_DATA: {\n            return {\n                ...state,\n                currentIngredient: action.payload,\n            };\n        }\n        case REMOVE_VIEWED_INGREDIENT_DATA: {\n            return {\n                ...state,\n                currentIngredient: initialStateViewedIngredient.currentIngredient,\n            };\n        }\n        default: {\n            return state;\n        }\n    }\n}","import {GET_ORDER_REQUEST, GET_ORDER_SUCCESS, SET_ORDER_ERROR, TOrderActions, TOrderState} from \"../types/order\"\n\nexport const initialStateOrder:  TOrderState={\n\n    orderNumber: \"....\",\n    orderRequest: false,\n    orderFailed: false,\n};\nexport const orderReducer = (state = initialStateOrder, action: TOrderActions) => {\n    switch (action.type) {\n        case GET_ORDER_REQUEST: {\n            return {\n                ...state,\n                orderNumber: initialStateOrder.orderNumber ,\n                orderRequest: true,\n                orderFailed: false,\n            };\n        }\n        case GET_ORDER_SUCCESS: {\n            return {\n                ...state,\n                orderNumber: action.orderNumber,\n                orderRequest: false,\n            };\n        }\n        case SET_ORDER_ERROR: {\n            return {\n                ...state,\n                orderFailed: true,\n                orderRequest: false,\n            };\n        }\n        default: {\n            return state;\n        }\n    }\n}\n","export const LOGIN_REQUEST:'LOGIN_REQUEST' = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS:'LOGIN_SUCCESS' = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL:'LOGIN_FAIL' = 'LOGIN_FAIL';\n\nexport const LOGOUT_REQUEST:'LOGOUT_REQUEST' = 'LOGOUT_REQUEST';\nexport const LOGOUT_SUCCESS:'LOGOUT_SUCCESS' = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAIL:'LOGOUT_FAIL' = 'LOGOUT_FAIL';\n\nexport const REGISTER_REQUEST:'REGISTER_REQUEST' = 'REGISTER_REQUEST';\nexport const REGISTER_SUCCESS:'REGISTER_SUCCESS' = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL:'REGISTER_FAIL' = 'REGISTER_FAIL';\n\nexport const FORGOT_PASSWORD_REQUEST:'FORGOT_PASSWORD_REQUEST' = 'FORGOT_PASSWORD_REQUEST';\nexport const FORGOT_PASSWORD_SUCCESS: 'FORGOT_PASSWORD_SUCCESS'= 'FORGOT_PASSWORD_SUCCESS';\nexport const FORGOT_PASSWORD_FAIL:'FORGOT_PASSWORD_FAIL' = 'FORGOT_PASSWORD_FAIL';\n\nexport const RESET_PASSWORD_REQUEST:'RESET_PASSWORD_REQUEST' = 'RESET_PASSWORD_REQUEST';\nexport const RESET_PASSWORD_SUCCESS:'RESET_PASSWORD_SUCCESS' = 'RESET_PASSWORD_SUCCESS';\nexport const RESET_PASSWORD_FAIL:'RESET_PASSWORD_FAIL' = 'RESET_PASSWORD_FAIL';\n\nexport const GET_USER_REQUEST:'GET_USER_REQUEST' = 'GET_USER_REQUEST';\nexport const GET_USER_SUCCESS:'GET_USER_SUCCESS'= 'GET_USER_SUCCESS';\nexport const GET_USER_FAIL:'GET_USER_FAIL' = 'GET_USER_FAIL';\n\nexport const UPDATE_USER_REQUEST:'UPDATE_USER_REQUEST' = 'UPDATE_USER_REQUEST';\nexport const UPDATE_USER_SUCCESS:'UPDATE_USER_SUCCESS' = 'UPDATE_USER_SUCCESS';\nexport const UPDATE_USER_FAIL:'UPDATE_USER_FAIL' = 'UPDATE_USER_FAIL';\n\nexport const REFRESH_TOKEN_REQUEST:'REFRESH_TOKEN_REQUEST' = 'REFRESH_TOKEN_REQUEST';\nexport const REFRESH_TOKEN_SUCCESS:'REFRESH_TOKEN_SUCCESS' = 'REFRESH_TOKEN_SUCCESS';\nexport const REFRESH_TOKEN_FAIL:'REFRESH_TOKEN_ERROR' = 'REFRESH_TOKEN_ERROR';\n\nexport type TUser = {\n    email: string;\n    name: string;\n};\n\n\ntype TRegisterStartAction = {\n    readonly type: typeof REGISTER_REQUEST;\n}\n\ntype TRegisterSuccessAction = {\n    readonly type: typeof REGISTER_SUCCESS;\n    accessToken: string;\n    refreshToken: string;\n    user: TUser;\n}\n\ntype TRegisterFailedAction = {\n    readonly type: typeof REGISTER_FAIL;\n\n}\n\ntype TLoginTypeAction = {\n    readonly type: typeof LOGIN_REQUEST;\n}\n\ntype TLoginSuccessAction = {\n    readonly type: typeof LOGIN_SUCCESS;\n    accessToken: string;\n    refreshToken: string;\n    user: TUser;\n}\n\ntype TLoginFailedAction = {\n    readonly type: typeof LOGIN_FAIL;\n\n}\n\ntype TGetUserStartAction = {\n    readonly type: typeof GET_USER_REQUEST;\n}\n\ntype TGetUserSuccessAction = {\n    readonly type: typeof GET_USER_SUCCESS;\n    user: TUser;\n}\ntype TGetUserFailedAction = {\n    readonly type: typeof GET_USER_FAIL;\n\n}\n\n\ntype TUpdateUserStartAction = {\n    readonly type: typeof UPDATE_USER_REQUEST;\n}\n\ntype TUpdateUserSuccessAction = {\n    readonly type: typeof UPDATE_USER_SUCCESS;\n    user: TUser;\n}\n\ntype TUpdateUserFailedAction = {\n    readonly type: typeof UPDATE_USER_FAIL;\n\n}\n\ntype TLogoutStartAction = {\n    readonly type: typeof LOGOUT_REQUEST;\n}\n\ntype TLogoutSuccessAction = {\n    readonly type: typeof LOGOUT_SUCCESS;\n}\n\ntype TLogoutFailedAction = {\n    readonly type: typeof LOGOUT_FAIL;\n\n}\n\ntype TResetPasswordStartAction = {\n    readonly type: typeof RESET_PASSWORD_REQUEST;\n}\n\ntype TResetPasswordSuccessAction = {\n    readonly type: typeof RESET_PASSWORD_SUCCESS;\n\n}\n\ntype TResetPasswordFailedAction = {\n    readonly type: typeof RESET_PASSWORD_FAIL;\n\n}\n\ntype TForgotPasswordStartAction = {\n    readonly type: typeof FORGOT_PASSWORD_REQUEST;\n}\n\ntype TForgotPasswordSuccessAction = {\n    readonly type: typeof FORGOT_PASSWORD_SUCCESS;\n\n}\n\ntype TForgotPasswordFailedAction = {\n    readonly type: typeof FORGOT_PASSWORD_FAIL;\n\n}\ntype TRefreshTokenStartAction = {\n    readonly type: typeof REFRESH_TOKEN_REQUEST;\n}\ntype TRefreshTokenSuccessAction = {\n    readonly type: typeof REFRESH_TOKEN_SUCCESS;\n    accessToken: string;\n    refreshToken: string;\n\n}\ntype TRefreshTokenFailedAction = {\n    readonly type: typeof REFRESH_TOKEN_FAIL;\n\n}\n\nexport type TAuthState = {\n    user: {\n        email: string,\n        name: string,\n    },\n    accessToken: string,\n    refreshToken: string,\n    registerRequest: boolean,\n    registerSuccess: boolean,\n    registerError: boolean,\n    loginRequest: boolean,\n    loginSuccess: boolean,\n    loginError: boolean,\n    forgotPasswordRequest: boolean,\n    forgotPasswordSuccess: boolean,\n    forgotPasswordError: boolean,\n    resetPasswordRequest: boolean,\n    resetPasswordSuccess: boolean,\n    resetPasswordError: boolean,\n    logoutRequest: boolean,\n    logoutSuccess: boolean,\n    logoutError: boolean,\n    refreshTokenRequest: boolean,\n    refreshTokenSuccess: boolean,\n    refreshTokenError: boolean,\n    getUserInfoRequest: boolean,\n    getUserInfoSuccess: boolean,\n    getUserInfoError: boolean,\n    updateUserInfoRequest: boolean,\n    updateUserInfoSuccess: boolean,\n    updateUserInfoError: boolean,\n}\n\nexport type TAuthActions =\n    | TRegisterStartAction\n    | TRegisterSuccessAction\n    | TRegisterFailedAction\n    | TLoginTypeAction\n    | TLoginSuccessAction\n    | TLoginFailedAction\n    | TGetUserStartAction\n    | TGetUserSuccessAction\n    | TGetUserFailedAction\n    | TUpdateUserStartAction\n    | TUpdateUserSuccessAction\n    | TUpdateUserFailedAction\n    | TLogoutStartAction\n    | TLogoutSuccessAction\n    | TLogoutFailedAction\n    | TResetPasswordStartAction\n    | TResetPasswordSuccessAction\n    | TResetPasswordFailedAction\n    | TForgotPasswordStartAction\n    | TForgotPasswordSuccessAction\n    | TForgotPasswordFailedAction\n    | TRefreshTokenStartAction\n    | TRefreshTokenFailedAction\n    | TRefreshTokenSuccessAction","import {\n    FORGOT_PASSWORD_FAIL,\n    FORGOT_PASSWORD_REQUEST,\n    FORGOT_PASSWORD_SUCCESS, GET_USER_FAIL,\n    GET_USER_REQUEST,\n    GET_USER_SUCCESS,\n    LOGIN_FAIL,\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGOUT_FAIL,\n    LOGOUT_REQUEST,\n    LOGOUT_SUCCESS,\n    REFRESH_TOKEN_FAIL,\n    REFRESH_TOKEN_REQUEST,\n    REFRESH_TOKEN_SUCCESS,\n    REGISTER_FAIL,\n    REGISTER_REQUEST,\n    REGISTER_SUCCESS,\n    RESET_PASSWORD_FAIL,\n    RESET_PASSWORD_REQUEST,\n    RESET_PASSWORD_SUCCESS,\n    TAuthActions,\n    TAuthState,\n    UPDATE_USER_FAIL,\n    UPDATE_USER_REQUEST,\n    UPDATE_USER_SUCCESS\n} from '../types/auth'\n\nconst authInitialState: TAuthState = {\n    user: {\n        email: '',\n        name: '',\n    },\n    accessToken: '',\n    refreshToken: '',\n    registerRequest: false,\n    registerSuccess: false,\n    registerError: false,\n    loginRequest: false,\n    loginSuccess: false,\n    loginError: false,\n    forgotPasswordRequest: false,\n    forgotPasswordSuccess: false,\n    forgotPasswordError: false,\n    resetPasswordRequest: false,\n    resetPasswordSuccess: false,\n    resetPasswordError: false,\n    logoutRequest: false,\n    logoutSuccess: false,\n    logoutError: false,\n    refreshTokenRequest: false,\n    refreshTokenSuccess: false,\n    refreshTokenError: false,\n    getUserInfoRequest: false,\n    getUserInfoSuccess: false,\n    getUserInfoError: false,\n    updateUserInfoRequest: false,\n    updateUserInfoSuccess: false,\n    updateUserInfoError: false,\n};\n\nexport const authReducer = (state = authInitialState, action:TAuthActions) :TAuthState=> {\n    switch (action.type) {\n        case REGISTER_REQUEST: {\n            return {\n                ...state,\n                registerRequest: true,\n                registerSuccess: false,\n                registerError: false,\n            };\n        }\n        case REGISTER_SUCCESS: {\n            return {\n                ...state,\n                registerSuccess: true,\n                accessToken: action.accessToken,\n                refreshToken: action.refreshToken,\n                user: action.user,\n            };\n        }\n        case REGISTER_FAIL: {\n            return {\n                ...state,\n                registerRequest: false,\n                registerSuccess: false,\n                registerError: true,\n            };\n        }\n        case LOGIN_REQUEST: {\n            return {\n                ...state,\n                loginRequest: true,\n                loginSuccess: false,\n                loginError: false,\n            };\n        }\n        case LOGIN_SUCCESS: {\n            return {\n                ...state,\n                loginRequest: false,\n                loginSuccess: true,\n                logoutSuccess: false,\n                accessToken: action.accessToken,\n                refreshToken: action.refreshToken,\n                user: action.user,\n            };\n        }\n        case LOGIN_FAIL: {\n            return {\n                ...state,\n                loginRequest: false,\n                loginSuccess: false,\n                loginError: true,\n            };\n        }\n        case FORGOT_PASSWORD_REQUEST: {\n            return {\n                ...state,\n                forgotPasswordRequest: true,\n                forgotPasswordSuccess: false,\n                forgotPasswordError: false,\n            };\n        }\n        case FORGOT_PASSWORD_SUCCESS: {\n            return {\n                ...state,\n                forgotPasswordRequest: false,\n                forgotPasswordSuccess: true,\n            };\n        }\n        case FORGOT_PASSWORD_FAIL: {\n            return {\n                ...state,\n                forgotPasswordRequest: false,\n                forgotPasswordSuccess: false,\n                forgotPasswordError: true,\n            };\n        }\n        case RESET_PASSWORD_REQUEST: {\n            return {\n                ...state,\n                resetPasswordRequest: true,\n                resetPasswordSuccess: false,\n                resetPasswordError: false,\n            };\n        }\n        case RESET_PASSWORD_SUCCESS: {\n            return {\n                ...state,\n                resetPasswordRequest: false,\n                resetPasswordSuccess: true,\n            };\n        }\n        case RESET_PASSWORD_FAIL: {\n            return {\n                ...state,\n                resetPasswordRequest: false,\n                resetPasswordSuccess: false,\n                resetPasswordError: true,\n            };\n        }\n        case LOGOUT_REQUEST: {\n            return {\n                ...state,\n                logoutRequest: true,\n                logoutSuccess: false,\n                logoutError: false,\n            };\n        }\n        case LOGOUT_SUCCESS: {\n            return {\n                ...state,\n                logoutRequest: false,\n                logoutSuccess: true,\n                loginSuccess: false,\n                accessToken: authInitialState.accessToken,\n                refreshToken: authInitialState.refreshToken,\n                user: authInitialState.user,\n            };\n        }\n        case LOGOUT_FAIL: {\n            return {\n                ...state,\n                logoutRequest: false,\n                logoutSuccess: false,\n                logoutError: true,\n            };\n        }\n        case REFRESH_TOKEN_REQUEST: {\n            return {\n                ...state,\n                refreshTokenRequest: true,\n                refreshTokenSuccess: false,\n                refreshTokenError: false,\n            };\n        }\n        case REFRESH_TOKEN_SUCCESS: {\n            return {\n                ...state,\n                refreshTokenRequest: false,\n                refreshTokenSuccess: true,\n                accessToken: action.accessToken,\n                refreshToken: action.refreshToken,\n            };\n        }\n        case REFRESH_TOKEN_FAIL: {\n            return {\n                ...state,\n                refreshTokenRequest: false,\n                refreshTokenSuccess: false,\n                refreshTokenError: true,\n            };\n        }\n        case GET_USER_REQUEST: {\n            return {\n                ...state,\n                getUserInfoRequest: true,\n                getUserInfoSuccess: false,\n                getUserInfoError: false,\n            };\n        }\n        case GET_USER_SUCCESS: {\n            return {\n                ...state,\n                getUserInfoRequest: false,\n                getUserInfoSuccess: true,\n                user: action.user,\n            };\n        }\n        case GET_USER_FAIL: {\n            return {\n                ...state,\n                getUserInfoRequest: false,\n                getUserInfoSuccess: false,\n                getUserInfoError: true,\n            };\n        }\n        case UPDATE_USER_REQUEST: {\n            return {\n                ...state,\n                updateUserInfoRequest: true,\n                updateUserInfoSuccess: false,\n                updateUserInfoError: false,\n            };\n        }\n        case UPDATE_USER_SUCCESS: {\n            return {\n                ...state,\n                updateUserInfoRequest: false,\n                updateUserInfoSuccess: true,\n                user: action.user,\n            };\n        }\n        case UPDATE_USER_FAIL: {\n            return {\n                ...state,\n                updateUserInfoRequest: false,\n                updateUserInfoSuccess: false,\n                updateUserInfoError: true,\n            };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n","export const WS_CONNECTION_START: 'WS_CONNECTION_START' = 'WS_CONNECTION_START';\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS';\nexport const WS_CONNECTION_ERROR: 'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR';\nexport const WS_CONNECTION_CLOSED: 'WS_CONNECTION_CLOSED' = 'WS_CONNECTION_CLOSED';\nexport const WS_GET_ORDERS: 'WS_GET_ORDERS' = 'WS_GET_ORDERS';\nexport const WS_SEND_MESSAGE: 'WS_SEND_MESSAGE' = 'WS_SEND_MESSAGE';\nexport type TOrder = {\n    _id: string;\n    ingredients: string[];\n    status: string;\n    name: string;\n    createdAt: string;\n    updatedAt: string;\n    number: number;\n};\nexport type TOrders = {\n    orders: TOrder[];\n    success: boolean;\n    total: number;\n    totalToday: number;\n};\nexport type TWSState = {\n    wsConnected: boolean;\n    ordersData: null;\n    error: string;\n}\nexport interface IWSConnectionError {\n    readonly type: typeof WS_CONNECTION_ERROR;\n    payload: {};\n}\nexport interface IWSConnectionSuccess {\n    readonly type: typeof WS_CONNECTION_SUCCESS;\n}\nexport interface IWSConnectionClosed {\n    readonly type: typeof WS_CONNECTION_CLOSED;\n}\n\nexport interface IWSSendMessage {\n    readonly type: typeof WS_SEND_MESSAGE;\n    payload: string;\n}\n\nexport interface IWSGetOrders {\n    readonly type: typeof WS_GET_ORDERS;\n    payload: TOrders;\n}\n\nexport type TWSActions =\n    | IWSConnectionSuccess\n    | IWSConnectionError\n    | IWSConnectionClosed\n    | IWSSendMessage\n    | IWSGetOrders;","import {TWSActions, WS_CONNECTION_CLOSED, WS_CONNECTION_ERROR, WS_CONNECTION_SUCCESS, WS_GET_ORDERS} from \"../types/ws\";\nimport {TWSState} from \"../types/ws\";\nexport const initialStateWS: TWSState = {\n    wsConnected: false,\n    ordersData: null,\n    error: '',\n}\nexport const webSocketReducer = (state = initialStateWS, action: TWSActions) => {\n    switch (action.type) {\n        case WS_CONNECTION_SUCCESS: {\n            return {\n                ...state,\n                wsConnected: true,\n                error: null,\n            };\n        }\n        case WS_CONNECTION_ERROR: {\n            return {\n                ...state,\n                wsConnected: false,\n                error: action.payload,\n            };\n        }\n        case WS_CONNECTION_CLOSED: {\n            return {\n                ...state,\n                wsConnected: false,\n                error: null,\n            };\n        }\n        case WS_GET_ORDERS: {\n            return {\n                ...state,\n                ordersData: action.payload,\n                error: null,\n            };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n","import {\n    GET_ORDERS_DATA_REQUEST,\n    GET_ORDERS_DATA_SUCCESS,\n    GET_ORDERS_DATA_ERROR,\n} from '../types/ordersData';\n\nimport { TOrdersDataActions, TOrdersDataState} from '../types/ordersData';\n\nconst ordersDataInitialState: TOrdersDataState = {\n    ordersData: null,\n    ordersDataRequest: false,\n    ordersDataError: false,\n};\n\nexport const ordersDataReducer = (state = ordersDataInitialState, action: TOrdersDataActions) => {\n    switch (action.type) {\n        case GET_ORDERS_DATA_REQUEST: {\n            return {\n                ...state,\n                ordersDataRequest: true,\n                ordersDataError: false,\n            };\n        }\n        case GET_ORDERS_DATA_SUCCESS: {\n            return {\n                ...state,\n                ordersData: action.ordersData,\n                ordersDataRequest: false,\n            };\n        }\n        case GET_ORDERS_DATA_ERROR: {\n            return {\n                ...state,\n                ordersDataRequest: false,\n                ordersDataError: true,\n            };\n        }\n        default: {\n            return state;\n        }\n    }\n};","import {TOrders} from \"./ws\";\n\nexport const GET_USER_ORDERS_DATA_REQUEST:'GET_ORDERS_DATA_REQUEST' = 'GET_ORDERS_DATA_REQUEST' ;\nexport const GET_USER_ORDERS_DATA_SUCCESS:'GET_ORDERS_DATA_SUCCESS' = 'GET_ORDERS_DATA_SUCCESS';\nexport const GET_USER_ORDERS_DATA_ERROR :'GET_ORDERS_DATA_ERROR' = 'GET_ORDERS_DATA_ERROR';\n\n\nexport type TUserOrdersDataState = {\n    userOrdersData: null;\n    userOrdersDataRequest: boolean;\n    userOrdersDataError: boolean;\n};\n\nexport interface IGetUserOrdersDataRequest {\n    readonly type: typeof GET_USER_ORDERS_DATA_REQUEST;\n}\n\nexport interface IGetUserOrdersDataSuccess {\n    readonly type: typeof GET_USER_ORDERS_DATA_SUCCESS;\n    userOrdersData: TOrders;\n}\n\nexport interface GetUserOrdersDataError {\n    readonly type: typeof GET_USER_ORDERS_DATA_ERROR;\n}\n\nexport type TUserOrdersDataActions =\n    | IGetUserOrdersDataRequest\n    | IGetUserOrdersDataSuccess\n    | GetUserOrdersDataError;","import {\n    GET_USER_ORDERS_DATA_REQUEST,\n    GET_USER_ORDERS_DATA_SUCCESS,\n    GET_USER_ORDERS_DATA_ERROR,\n    TUserOrdersDataState, TUserOrdersDataActions\n} from '../types/userOrdersData';\n\n\nconst userOrdersDataInitialState: TUserOrdersDataState = {\n    userOrdersData: null,\n    userOrdersDataRequest: false,\n    userOrdersDataError: false,\n};\n\nexport const userOrdersDataReducer = (state = userOrdersDataInitialState, action: TUserOrdersDataActions,) => {\n    switch (action.type) {\n        case GET_USER_ORDERS_DATA_REQUEST: {\n            return {\n                ...state,\n                userOrdersDataRequest: true,\n                userOrdersDataError: false,\n            };\n        }\n        case GET_USER_ORDERS_DATA_SUCCESS: {\n            return {\n                ...state,\n                userOrdersData: action.userOrdersData,\n                userOrdersDataRequest: false,\n            };\n        }\n        case GET_USER_ORDERS_DATA_ERROR: {\n            return {\n                ...state,\n                userOrdersDataRequest: false,\n                userOrdersDataError: true,\n            };\n        }\n        default: {\n            return state;\n        }\n    }\n};","import { TOrder } from './ws';\r\n\r\nexport const  SET_ORDER_DETAILS:' SET_ORDER_DETAILS' = ' SET_ORDER_DETAILS' ;\r\nexport const CLEAR_ORDER_DETAILS:'CLEAR_ORDER_DETAILS' = 'CLEAR_ORDER_DETAILS';\r\n\r\n\r\nexport type TOrderDetailsState = {\r\n    orderDetails: null;\r\n};\r\n\r\nexport interface ISetOrderDetails {\r\n    readonly type: typeof SET_ORDER_DETAILS;\r\n    order: TOrder;\r\n}\r\n\r\nexport interface IClearOrderDetails {\r\n    readonly type: typeof CLEAR_ORDER_DETAILS;\r\n}\r\n\r\nexport type TOrderDetailsActions = ISetOrderDetails | IClearOrderDetails;","import { SET_ORDER_DETAILS, CLEAR_ORDER_DETAILS,TOrderDetailsState, TOrderDetailsActions } from '../types/orderDetails';\r\n\r\nconst orderDetailsInitialState: TOrderDetailsState = {\r\n    orderDetails: null,\r\n};\r\n\r\nexport const orderDetailsReducer = (state = orderDetailsInitialState, action: TOrderDetailsActions,) => {\r\n    switch (action.type) {\r\n        case SET_ORDER_DETAILS: {\r\n            return {\r\n                ...state,\r\n                orderDetails: action.order,\r\n            };\r\n        }\r\n        case CLEAR_ORDER_DETAILS: {\r\n            return {\r\n                ...state,\r\n                orderDetails: null,\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};","import {allIngredientsReducer} from \"./alllIngredients\";\nimport {constructorIngredientsReducer} from \"./contructorIngredients\";\nimport {viewedIngredientReducer} from \"./viewedIngredient\";\nimport {orderReducer} from \"./order\";\nimport { combineReducers } from 'redux';\nimport {authReducer} from \"./auth\";\nimport {webSocketReducer} from \"./ws\";\nimport {ordersDataReducer} from \"./ordersData\";\nimport {userOrdersDataReducer} from \"./userOrdersData\";\nimport {orderDetailsReducer} from \"./orderDetails\";\n\nexport const rootReducer = combineReducers({\n    allIngredients: allIngredientsReducer,\n    constructorIngredients: constructorIngredientsReducer,\n    viewedIngredient: viewedIngredientReducer,\n    order: orderReducer,\n    auth: authReducer,\n    webSocket: webSocketReducer,\n    ordersData: ordersDataReducer,\n    userOrdersData: userOrdersDataReducer,\n    orderDetails: orderDetailsReducer,\n});\n","import {applyMiddleware, compose, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {socketMiddleware} from './middlewares/socketMiddleware';\r\nimport { Action, ActionCreator } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport {rootReducer} from \"./reducers\";\r\nimport {\r\n    TWSActions,\r\n    WS_CONNECTION_CLOSED,\r\n    WS_CONNECTION_ERROR,\r\n    WS_CONNECTION_START,\r\n    WS_CONNECTION_SUCCESS, WS_GET_ORDERS, WS_SEND_MESSAGE\r\n} from \"./types/ws\";\r\nimport {TOrderActions} from \"./types/order\";\r\nimport {TConstructorIngredientsActions} from \"./types/contructorIngredients\";\r\nimport {TAuthActions} from \"./types/auth\";\r\nimport {TOrderDetailsActions} from \"./types/orderDetails\";\r\nimport {TOrdersDataActions} from \"./types/ordersData\";\r\nimport {TUserOrdersDataActions} from \"./types/userOrdersData\";\r\nimport {TViewedIngredientActions} from \"./types/viewedIngredient\";\r\nimport {TGetAllIngredientsActions} from \"./types/allIngredients\";\r\nexport const wsActions = {\r\n    wsStart: WS_CONNECTION_START,\r\n    wsSendMessage: WS_SEND_MESSAGE,\r\n    onOpen: WS_CONNECTION_SUCCESS,\r\n    onClose: WS_CONNECTION_CLOSED,\r\n    onError: WS_CONNECTION_ERROR,\r\n    wsGetOrders: WS_GET_ORDERS,\r\n};\r\n\r\nexport type TAppActions =\r\n    | TGetAllIngredientsActions\r\n    | TViewedIngredientActions\r\n    | TUserOrdersDataActions\r\n    | TOrdersDataActions\r\n    | TOrderDetailsActions\r\n    | TAuthActions\r\n    | TConstructorIngredientsActions\r\n    | TOrderActions\r\n    | TWSActions;\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type AppThunk<ReturnType = void> = ActionCreator<\r\n    ThunkAction<ReturnType, Action, RootState, TAppActions>\r\n    >;\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\nconst composeEnhancers = window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] as typeof compose || compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(thunk), applyMiddleware(socketMiddleware()));\r\n\r\nexport const store = createStore(rootReducer, enhancer);","import type {AnyAction, Middleware, MiddlewareAPI} from 'redux';\r\nimport { wsActions} from \"../store\";\r\nimport {getAccessTokenFromCookie} from \"../cookieFunctions\";\r\n\r\nexport const socketMiddleware = (): Middleware => {\r\n    return (store: MiddlewareAPI) => {\r\n        let socket: WebSocket | null = null;\r\n\r\n        return (next: (a: AnyAction) => void) => (action: AnyAction) => {\r\n            const { dispatch } = store;\r\n            const { type, payload } = action;\r\n            const { wsStart, wsSendMessage, onOpen, onClose, onError, wsGetOrders } =\r\n                wsActions;\r\n\r\n            if (type === wsStart) {\r\n                socket = new WebSocket(action.wsUrl);\r\n            }\r\n\r\n            if (socket) {\r\n                socket.onopen = (event) => {\r\n                    dispatch({ type: onOpen, payload: event });\r\n                };\r\n\r\n                socket.onerror = (event) => {\r\n                    dispatch({ type: onError, payload: event });\r\n                };\r\n\r\n                socket.onmessage = (event) => {\r\n                    const { data } = event;\r\n                    const parseData = JSON.parse(data);\r\n                    dispatch({ type: wsGetOrders, payload: parseData });\r\n                };\r\n\r\n                socket.onclose = (event) => {\r\n                    dispatch({ type: onClose, payload: event });\r\n                };\r\n\r\n                if (type === wsSendMessage) {\r\n                    const message = { ...payload, token: getAccessTokenFromCookie() };\r\n                    socket.send(JSON.stringify(message));\r\n                }\r\n\r\n\r\n            }\r\n\r\n            next(action);\r\n        };\r\n    };\r\n};","import { Link, useLocation } from 'react-router-dom';\r\nimport { useSelector } from '../../services/hooks';\r\nimport Price from '../Price/Price';\r\nimport { formatDateFromISOStringToLocaleString } from '../../utils/utils';\r\nimport cardOrderstyles from './CardOrder.module.css';\r\nimport {TOrder} from \"../../services/types/ws\";\r\nimport {TItem, TLocationState} from \"../../services/types/otherTypes\";\r\ninterface ICardOrder {\r\n    order: TOrder;\r\n    onCardOrderClick: (order: TOrder) => void;\r\n}\r\n\r\nconst CardOrder: React.FC<ICardOrder> = ({ order, onCardOrderClick }) => {\r\n    const location = useLocation<TLocationState>();\r\n    const {allIngredients}:{ allIngredients: TItem[] }  = useSelector((state) => state.allIngredients,\r\n    );\r\n    const date = formatDateFromISOStringToLocaleString(order.createdAt);\r\n    let price = 0;\r\n\r\n\r\n    const handleClick = () => {\r\n\r\n       onCardOrderClick(order);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <li className={`${cardOrderstyles.cardOrder} p-6`} >\r\n\r\n            <Link\r\n                className={cardOrderstyles.link}\r\n                to={{\r\n                    pathname: `${location.pathname}/${order._id}`,\r\n                    state: { backgroundOrders: location },\r\n\r\n                }}\r\n                onClick={handleClick}\r\n            >\r\n\r\n                <div className={cardOrderstyles.idWithDateContainer}>\r\n                    <p className=\"text text_type_digits-default\">{`#${order.number}`}</p>\r\n                    <p className=\"text text_type_main-default text_color_inactive\">{date}</p>\r\n                </div>\r\n                <p className=\"text text_type_main-medium mt-6\">{order.name}</p>\r\n                <div className={`${cardOrderstyles.ingredientsWithPriceContainer} mt-6`}>\r\n                    <div className={`${cardOrderstyles.ingredientsContainer} mr-6`}>\r\n                        {order.ingredients.map((ingredient, index) => {\r\n                            const ingredientData = allIngredients.find((element: TItem) => {\r\n                                return ingredient === element._id;\r\n                            });\r\n\r\n                            if (ingredientData) {\r\n                                price += +ingredientData.price;\r\n                            }\r\n\r\n                            return (\r\n                                <img\r\n                                    className={cardOrderstyles.img}\r\n                                    src={ingredientData ? ingredientData.image : ''}\r\n                                    key={`${order._id} + ${index}`}\r\n                                    style={{ zIndex: Math.abs(index - 100) }}\r\n                                    alt={ingredientData ? ingredientData.name : ' '}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </div>\r\n                    <Price price={price} textType=\"text_type_digits-default\" typeIcon=\"primary\" />\r\n                </div>\r\n            </Link>\r\n\r\n        </li>\r\n\r\n    );\r\n};\r\n\r\nexport default CardOrder;\r\n","export const formatDateFromISOStringToLocaleString = (ISOString: string) => {\n    const dateInMs = Date.parse(ISOString);\n    const formatedDate = new Date(dateInMs).toLocaleString();\n    return formatedDate;\n};\n","import CardOrder from '../CardOrder/CardOrder';\n\nimport styles from './Orders.module.css';\n\nimport { TOrder, TOrders } from '../../services/types/ws';\nimport React from \"react\";\n\ninterface IOrders {\n    onCardOrderClick: (order: TOrder) => void;\n    ordersData: TOrders;\n}\n\nconst Orders: React.FC<IOrders> = ({ onCardOrderClick, ordersData }) => {\n\n\n\n    return (\n        <>\n\n\n            {ordersData && (\n                <ul className={styles.orders}>\n                    {ordersData.orders.map((order: TOrder) => {\n                        return(\n                            <CardOrder order={order} key={order._id} onCardOrderClick={onCardOrderClick} />\n\n                        )\n                    })}\n                </ul>\n            )}\n        </>\n    );\n};\n\nexport default Orders;","import {TOrder, TOrders} from '../services/types/ws';\nimport React from 'react';\nimport { useSelector, useDispatch } from '../services/hooks';\nimport feedStyles from './feed.module.css'\nimport {wsActions} from \"../services/store\";\nimport { WS_ALL_ORDERS_URL } from '../services/api/api';\nimport Orders from \"../components/Orders/Orders\";\ninterface IOrderFeedPage {\n    onCardOrderClick: (order: TOrder)  => void;\n\n}\n\n\nconst OrderFeedPage: React.FC<IOrderFeedPage> = ({ onCardOrderClick }) => {\n    const dispatch = useDispatch();\n    const { ordersData, wsConnected }:{ordersData: TOrders, wsConnected: boolean} = useSelector((state) => state.webSocket);\n\n    //console.log(ordersData);\n    React.useEffect(() => {\n        dispatch({ type: wsActions.wsStart, wsUrl: WS_ALL_ORDERS_URL });\n        return () => {\n            dispatch({ type: wsActions.onClose });\n        };\n    }, [dispatch]);\n\n    return (\n        <main className={feedStyles.orderFeed}>\n            <h1 className={`${feedStyles.heading} text text_type_main-large mt-10`}>Лента заказов</h1>\n            {ordersData && wsConnected ? (\n                <div className={`${feedStyles.container} mt-5`}>\n                    <Orders onCardOrderClick={onCardOrderClick} ordersData={ordersData} />\n                    <dl className={feedStyles.stats}>\n                        <div className={feedStyles.readyWithInProgressContainer}>\n                            <div>\n                                <dt className=\"text text_type_main-medium\">Готовы:</dt>\n                                <dd className={feedStyles.ordersContainer}>\n                                    <ul className={`${feedStyles.list} mt-6`}>\n                                        {ordersData.orders.map((order: TOrder) => {\n                                            if (order.status === 'done')\n                                                return (\n                                                    <li\n                                                        className=\"text text_type_digits-default text_color_success\"\n                                                        key={order._id}\n                                                    >\n                                                        {order.number}\n                                                    </li>\n                                                );\n                                            return null;\n                                        })}\n                                    </ul>\n                                </dd>\n                            </div>\n                            <div>\n                                <dt className=\"text text_type_main-medium\">В работе:</dt>\n                                <dd className={feedStyles.ordersContainer}>\n                                    <ul className={`${feedStyles.list} mt-6`}>\n                                        {ordersData.orders.map((order: TOrder) => {\n                                            if (order.status === 'pending')\n                                                return (\n                                                    <li className=\"text text_type_digits-default\" key={order._id}>\n                                                        {order.number}\n                                                    </li>\n                                                );\n                                            return null;\n                                        })}\n                                    </ul>\n                                </dd>\n                            </div>\n                        </div>\n                        <dt className=\"text text_type_main-medium mt-15\">Выполнено за все время:</dt>\n                        <dd className={`${feedStyles.numberOfOrders} text text_type_digits-large`}>\n                            {ordersData.total.toLocaleString('ru-RU')}\n                        </dd>\n                        <dt className=\"text text_type_main-medium mt-15\">Выполнено за сегодня</dt>\n                        <dd className={`${feedStyles.numberOfOrders} text text_type_digits-large`}>\n                            {ordersData.totalToday.toLocaleString('ru-RU')}\n                        </dd>\n                    </dl>\n                </div>\n                ):(<></>)}\n\n        </main>\n    );\n};\n\nexport default OrderFeedPage;","import { Route, Redirect, RouteProps } from 'react-router-dom';\r\nimport {getRefreshTokenFromCookie} from \"../../services/cookieFunctions\";\r\nimport React, { FC }  from \"react\";\r\n\r\nconst ProtectedRoute: FC<RouteProps>=({ children, ...rest })=> {\r\n    const isLogin = !!getRefreshTokenFromCookie();\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({location}) => {\r\n                return isLogin ? (children) : (<Redirect to={{ pathname: '/login',  state: { from: location }}} />);\r\n            }}\r\n        />\r\n    );\r\n}\r\n\r\nexport default ProtectedRoute;","import {apiUrl, handleResponse} from \"./api\";\r\n\r\nclass AuthApi {\r\n    private serverUrl: string;\r\n    constructor({ serverUrl}:{serverUrl:string}) {\r\n        this.serverUrl = serverUrl;\r\n    }\r\n\r\n    register(email:string, password:string, name:string) {\r\n        return fetch(`${this.serverUrl}/auth/register`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Authorization: '',\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ email, password, name }),\r\n        }).then(handleResponse);\r\n    }\r\n\r\n    login(email:string, password:string) {\r\n        return fetch(`${this.serverUrl}/auth/login`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Authorization: '',\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',},\r\n            body: JSON.stringify({ email, password }),\r\n        }).then(handleResponse);\r\n    }\r\n\r\n    forgotPassword(email:string) {\r\n        return fetch(`${this.serverUrl}/password-reset`, {\r\n            method: 'POST',\r\n            headers:{\r\n                Authorization: '',\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',},\r\n            body: JSON.stringify({ email }),\r\n        }).then(handleResponse);\r\n    }\r\n\r\n    resetPassword(password:string, token:string) {\r\n        return fetch(`${this.serverUrl}/password-reset/reset`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Authorization: '',\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ password, token }),\r\n        }).then(handleResponse);\r\n    }\r\n\r\n    logout(token:string) {\r\n        return fetch(`${this.serverUrl}/auth/logout`, {\r\n            method: 'POST',\r\n            headers:{\r\n                Authorization: '',\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ token }),\r\n        }).then(handleResponse);\r\n    }\r\n\r\n    refreshToken(token:string) {\r\n        return fetch(`${this.serverUrl}/auth/token`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Authorization: '',\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ token }),\r\n        }).then(handleResponse);\r\n    }\r\n\r\n    getUserInfo(token:string) {\r\n        return fetch(`${this.serverUrl}/auth/user`, {\r\n            method: 'GET',\r\n            headers: { Authorization: `Bearer ${token}`,\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json', },\r\n        })\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                return data;\r\n            });\r\n    }\r\n\r\n    updateUserInfo(token:string, name:string, email:string, password:string) {\r\n        return fetch(`${this.serverUrl}/auth/user`, {\r\n            method: 'PATCH',\r\n            headers:\r\n                { Authorization: `Bearer ${token}`,\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json', },\r\n            body: JSON.stringify({\r\n                name: name,\r\n                email: email,\r\n                password: password,\r\n            }),\r\n        })\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                return data;\r\n            });\r\n    }\r\n}\r\n\r\nconst authApi = new AuthApi({\r\n    serverUrl: apiUrl,\r\n});\r\nexport default authApi;","import { getRefreshTokenFromCookie, setCookie} from \"../cookieFunctions\";\nimport authApi from \"../api/authApi\";\nimport {AppDispatch, AppThunk, TAppActions} from \"../store\";\nimport {UPDATE_USER_REQUEST, UPDATE_USER_FAIL, UPDATE_USER_SUCCESS,\n    GET_USER_FAIL, GET_USER_REQUEST, GET_USER_SUCCESS,\nREFRESH_TOKEN_FAIL, REFRESH_TOKEN_REQUEST, REFRESH_TOKEN_SUCCESS,\n    LOGOUT_REQUEST, LOGOUT_FAIL, LOGOUT_SUCCESS,\n    REGISTER_FAIL, REGISTER_REQUEST, REGISTER_SUCCESS,\n    LOGIN_FAIL, LOGIN_REQUEST, LOGIN_SUCCESS,\n    FORGOT_PASSWORD_FAIL, FORGOT_PASSWORD_SUCCESS, FORGOT_PASSWORD_REQUEST,\n    RESET_PASSWORD_REQUEST, RESET_PASSWORD_FAIL, RESET_PASSWORD_SUCCESS,\n} from \"../types/auth\";\n\n\nexport const register: AppThunk = (email: string, password: string, name: string) =>\n    (dispatch: AppDispatch) => {\n        dispatch({ type: REGISTER_REQUEST });\n\n        return authApi\n            .register(email, password, name)\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: REGISTER_SUCCESS,\n                        user: data.user,\n                        accessToken: data.accessToken.split('Bearer ')[1],\n                        refreshToken: data.refreshToken,\n                    });\n                    setCookie(data);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                dispatch({ type: REGISTER_FAIL });\n            });\n    };\n\n\nexport const login :AppThunk = (email: string, password: string) => (dispatch: AppDispatch) => {\n\n        dispatch({ type: LOGIN_REQUEST });\n\n        return authApi\n            .login(email, password)\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: LOGIN_SUCCESS,\n                        user: data.user,\n                        accessToken: data.accessToken.split('Bearer ')[1],\n                        refreshToken: data.refreshToken,\n                    });\n                    localStorage.setItem('token', data.accessToken.split('Bearer ')[1]);\n                    setCookie(data);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                dispatch({ type: LOGIN_FAIL });\n            });\n    };\n\nexport const forgotPassword: AppThunk = (email:string) => (dispatch: AppDispatch) => {\n        dispatch({ type: FORGOT_PASSWORD_REQUEST });\n\n        return authApi\n            .forgotPassword(email)\n            .then((data) => {\n                if (data.success) {\n                    console.log(data.message);\n                    dispatch({\n                        type: FORGOT_PASSWORD_SUCCESS,\n                    });\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                dispatch({ type: FORGOT_PASSWORD_FAIL });\n            });\n    };\n\n\nexport const resetPassword: AppThunk = (password: string, token: string) => (dispatch: AppDispatch) => {\n\n        dispatch({ type: RESET_PASSWORD_REQUEST });\n\n        return authApi\n            .resetPassword(password, token)\n            .then((data) => {\n                if (data.success) {\n                    console.log(data.message);\n                    dispatch({\n                        type: RESET_PASSWORD_SUCCESS,\n                    });\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                dispatch({ type: RESET_PASSWORD_FAIL });\n            });\n    };\nexport const logout: AppThunk = (token:string) => (dispatch: AppDispatch) =>{\n\n        dispatch({ type: LOGOUT_REQUEST });\n\n        return authApi\n            .logout(token)\n            .then((data) => {\n                if (data.success) {\n                    console.log(data.message);\n                    dispatch({\n                        type: LOGOUT_SUCCESS,\n                    });\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                dispatch({ type: LOGOUT_FAIL });\n            });\n    };\n\n\nexport const refreshToken: AppThunk =(token: string, next: TAppActions) => (dispatch: AppDispatch) => {\n    dispatch({ type: REFRESH_TOKEN_REQUEST });\n\n    return authApi\n        .refreshToken(token)\n        .then((data) => {\n            if (data.success) {\n                const accessToken = data.accessToken.split('Bearer ')[1];\n                const refreshToken = data.refreshToken;\n                document.cookie = `accessToken=${accessToken}`;\n                document.cookie = `refreshToken=${refreshToken}`;\n                dispatch({\n                    type: REFRESH_TOKEN_SUCCESS,\n                    accessToken: accessToken,\n                    refreshToken: refreshToken,\n                });\n            }\n            if (next) {\n                dispatch(next);\n            }\n        })\n        .catch((err) => {\n            console.log(err);\n            dispatch({ type: REFRESH_TOKEN_FAIL });\n        });\n};\n\n\nexport const getUserInfo: AppThunk = () => (dispatch: AppDispatch| AppThunk) => {\n    const token: string|null = localStorage.getItem('token')\n        dispatch({ type: GET_USER_REQUEST });\nif(token){\n    return authApi\n        .getUserInfo(token)\n        .then((data) => {\n            if (data.success) {\n                dispatch({\n                    type: GET_USER_SUCCESS,\n                    user: data.user,\n                });\n            } else {\n                throw data;\n            }\n        })\n        .catch((err) => {\n            if (err.message === 'jwt expired') {\n                const tokenRefresh = getRefreshTokenFromCookie();\n                dispatch(refreshToken(tokenRefresh, () => getUserInfo()));\n            } else {\n                console.log(err);\n            }\n            dispatch({ type: GET_USER_FAIL });\n        });\n}\n\n    };\n\n\nexport const updateUserInfo: AppThunk =(token: string, name: string, email: string, password: string) =>\n    (dispatch: AppDispatch | AppThunk) => {\n\n        dispatch({ type: UPDATE_USER_REQUEST });\n    return authApi\n        .updateUserInfo(token, name, email, password)\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: UPDATE_USER_SUCCESS,\n                        user: {name, email, password},\n                    });\n                } else {\n                    throw data;\n                }\n            })\n            .catch((err) => {\n                if (err.message === 'jwt expired') {\n                    const tokenRefresh = getRefreshTokenFromCookie();\n                    dispatch(refreshToken(tokenRefresh, () => getUserInfo()));\n                } else {\n                    console.log(err);\n                }\n                dispatch({type: UPDATE_USER_FAIL});\n            });\n    };\n\n\n\n\n\n","import React from 'react';\nimport styles from \"./forgot-password.module.css\"\nimport {Button, Input} from '@ya.praktikum/react-developer-burger-ui-components';\nimport {Link, Redirect,  useLocation} from 'react-router-dom';\nimport {forgotPassword} from '../services/actions/auth';\nimport {useSelector, useDispatch} from \"../services/hooks\";\nimport {getRefreshTokenFromCookie} from \"../services/cookieFunctions\";\nimport {useState} from \"react\";\nimport {TLocationState} from \"../services/types/otherTypes\";\n\n\n const  ForgotPasswordPage = () => {\n    const dispatch = useDispatch();\n    const [email, setEmail] = useState<string>('');\n    const location = useLocation<TLocationState>();\n\n    const formSubmit = (e:React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        dispatch(forgotPassword(email));\n        setEmail('');\n    };\n    const { forgotPasswordSuccess } = useSelector((state) => state.auth);\n\n    const isLogin = !!getRefreshTokenFromCookie();\n\n    if (forgotPasswordSuccess) {\n        return <Redirect to={{ pathname: '/reset-password', state: { from: location } }} />;\n    }\n\n    return (\n        <>\n        {isLogin ? (\n                <Redirect to=\"/\" />\n            ) : (\n        <div className={styles.loginWrapper}>\n            <div className={styles.loginContent}>\n                <p className={`text text_type_main-medium ${styles.formTitle}`}>Восстановление пароля</p>\n                <form onSubmit={formSubmit} className={styles.form}>\n                    <div className={styles.inputWrapper}>\n                        <Input\n                            value={email}\n                            name={'email'}\n                            type={'email'}\n                            placeholder={'Укажите e-mail'}\n                            onChange={(e) => setEmail(e.target.value)}\n                            size={'default'}\n                        />\n                    </div>\n                    <div className={styles.submitWrapper}>\n                        <Button type=\"primary\" size=\"medium\">\n                            Восстановить\n                        </Button>\n                    </div>\n                </form>\n                <div>\n                    <p className={`text text_type_main-default ${styles.paragraph}`}>Вспомнили пароль? <Link\n                        className={styles.link} to=\"/login\">Войти</Link></p>\n                </div>\n            </div>\n        </div>\n            )};\n            </>\n        );\n}\nexport default ForgotPasswordPage;","import React, { useState} from 'react';\nimport resetPasswordStyles from \"./reset-password.module.css\";\nimport {Button, Input, PasswordInput} from '@ya.praktikum/react-developer-burger-ui-components';\nimport {Link, Redirect, useHistory, useLocation} from 'react-router-dom';\nimport {resetPassword} from '../services/actions/auth';\nimport {useSelector, useDispatch} from \"../services/hooks\";\nimport {getRefreshTokenFromCookie} from \"../services/cookieFunctions\";\nimport {TLocationState} from \"../services/types/otherTypes\";\n\nconst ResetPasswordPage = () => {\n    const [password, setPassword] = useState<string>('');\n    const [token, setToken] = useState<string>('');\n    const history = useHistory();\n    const location = useLocation<TLocationState>();\n    const isLogin = !!getRefreshTokenFromCookie();\n    const dispatch = useDispatch();\n    const formSubmit = (e:React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        dispatch(resetPassword(password, token));\n        setPassword('');\n        setToken('');\n    };\n    const { resetPasswordSuccess } = useSelector((state) => state.auth);\n\n    if (resetPasswordSuccess) {\n        return <Redirect to=\"/login\" />;\n    }\n\n    if (!location.state) {\n        history.push('/');\n    }\n    return (\n        <>\n            {isLogin ? (\n                <Redirect to=\"/\"/>\n            ) : (\n                <div className={resetPasswordStyles.loginWrapper}>\n                    <div className={resetPasswordStyles.loginContent}>\n                        <p className={`text text_type_main-medium ${resetPasswordStyles.formTitle}`}>Восстановление пароля</p>\n                        <form onSubmit={formSubmit} className={resetPasswordStyles.form}>\n                            <div className={resetPasswordStyles.inputWrapper}>\n                                <PasswordInput\n                                    name={'password'}\n                                    value={password}\n                                    onChange={e => setPassword(e.target.value)}\n                                />\n                            </div>\n                            <div className={resetPasswordStyles.inputWrapper}>\n                                <Input\n                                    type={'text'}\n                                    placeholder={'Введите код из письма'}\n                                    onChange={e => setToken(e.target.value)}\n                                    name={'code'}\n                                    size={'default'}\n                                    value={token}\n                                />\n                            </div>\n                            <div className={resetPasswordStyles.buttonWrapper}>\n                                <Button type=\"primary\" size=\"medium\">\n                                    Сохранить\n                                </Button>\n                            </div>\n                        </form>\n                        <div>\n                            <p className={`text text_type_main-default ${resetPasswordStyles.paragraph}`}>Вспомнили пароль? <Link\n                                className={resetPasswordStyles.link} to=\"/login\">Войти</Link></p>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n}\nexport default ResetPasswordPage;","import React, {useState} from 'react';\nimport loginStyles from './login.module.css'\nimport {Link, Redirect} from 'react-router-dom';\nimport {login} from '../services/actions/auth'\nimport {useDispatch, useSelector} from \"../services/hooks\";\nimport {Input, PasswordInput, Button} from '@ya.praktikum/react-developer-burger-ui-components';\nimport {getRefreshTokenFromCookie} from \"../services/cookieFunctions\";\n\n\n const LoginPage = () => {\n    const dispatch = useDispatch();\n    const [email, setEmail] = useState<string>('');\n    const [password, setPassword] = useState<string>('');\n\n    const onSubmit = (e:React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        dispatch(login(email, password));\n        setEmail('');\n        setPassword('');\n    }\n    const { loginSuccess } = useSelector((state) => state.auth);\n\n    if (loginSuccess) {\n        return <Redirect to=\"/\" />;\n    }\n    const isLogin = !!getRefreshTokenFromCookie();\n\n    return (\n        <>\n            {isLogin ? (\n                <Redirect to=\"/\" />\n            ) : (\n                <form className={loginStyles.form}  onSubmit={onSubmit}>\n                    <h2 className=\"text text_type_main-medium mb-6\">Вход</h2>\n                    <div className={loginStyles.formContainer}>\n                        <Input\n                            value={email}\n                            name={'email'}\n                            type={'email'}\n                            placeholder={'E-mail'}\n                            onChange={(e) => setEmail(e.target.value)}\n                            size={'default'}\n                        />\n                        <PasswordInput\n                            value={password}\n                            name={'password'}\n                            size={'default'}\n                            onChange={(e) => setPassword(e.target.value)}\n                        />\n                    <div className={loginStyles.submitWrapper}>\n                        <Button type=\"primary\" size=\"medium\">\n                            Вход\n                        </Button>\n                    </div>\n                </div>\n                    <p className={[\"text text_type_main-default mt-20\", loginStyles.text].join(' ')}>\n                        Вы — новый пользователь?\n                        <Link className={loginStyles.link} to=\"/register\">\n                            Зарегистрироваться\n                        </Link>\n                    </p>\n                    <p className={[\"text text_type_main-default mt-4\", loginStyles.text].join(' ')}>\n                        Забыли пароль?\n                        <Link className={loginStyles.link} to=\"/forgot-password\">\n                            Восстановить пароль\n                        </Link>\n                    </p>\n                </form>\n            )}\n        </>\n    );\n}\nexport default LoginPage;","import { NavLink } from 'react-router-dom';\n\nimport profileNavigationStyles from './ProfileNavigationMenu.module.css';\n\ninterface IProfileNavigationMenu {\n    handleLogout: () => void;\n    menuText: string\n}\n\nconst ProfileNavigationMenu: React.FC<IProfileNavigationMenu> = ({handleLogout, menuText,}) => {\n    return (\n        <div className={`${profileNavigationStyles.linkContainer} mt-30 mr-15`}>\n            <NavLink\n                to={'/profile'}\n                exact={true}\n                className={`${profileNavigationStyles.link} text text_type_main-medium text_color_inactive`}\n                activeClassName={profileNavigationStyles.linkActive}\n            >\n                Профиль\n            </NavLink>\n            <NavLink\n                to={'/profile/orders'}\n                exact={true}\n                className={`${profileNavigationStyles.link} text text_type_main-medium text_color_inactive`}\n                activeClassName={profileNavigationStyles.linkActive}\n            >\n                История заказов\n            </NavLink>\n            <button\n                className={`${profileNavigationStyles.button} text text_type_main-medium text_color_inactive`}\n                onClick={handleLogout}\n            >\n                Выход\n            </button>\n            <p className={`${profileNavigationStyles.paragraph} text text_type_main-default text_color_inactive mt-20`}>\n                {menuText}\n            </p>\n        </div>\n    );\n};\n\nexport default ProfileNavigationMenu;\n","import React, {useEffect} from \"react\";\nimport profileStyles from './profile.module.css';\nimport { useHistory} from \"react-router-dom\";\nimport {useSelector, useDispatch} from \"../services/hooks\";\nimport {getAccessTokenFromCookie, getRefreshTokenFromCookie, setCookie} from \"../services/cookieFunctions\";\nimport {Button, Input} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport {getUserInfo, logout, updateUserInfo} from \"../services/actions/auth\";\nimport ProfileNavigationMenu from \"../components/ProfileNavigationMenu/ProfileNavigationMenu\";\n\n\nexport interface IUserInfo{\n    name: string,\n    email:  string,\n    password:  string,\n}\n\n const ProfilePage  = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [userInfo, setUserInfo] = React.useState<IUserInfo>({\n        name: '',\n        email: '',\n        password: '',\n    });\n    const [isUserInfoChanged, setIsUserInfoChanged] = React.useState<boolean>(false);\n    const handleSubmit = (e:React.SyntheticEvent<Element, Event>) => {\n        e.preventDefault();\n        const token = getAccessTokenFromCookie();\n        dispatch(updateUserInfo(token, userInfo.name, userInfo.email, userInfo.password));\n        setIsUserInfoChanged(false);\n    };\n\n     const handleLogout = () => {\n        const token = getRefreshTokenFromCookie();\n        dispatch(logout(token));\n        setCookie({\n            accessToken: 'Bearer ',\n            refreshToken: '',\n        });\n        setUserInfo({ name: '', email: '', password: '' });\n    };\n\n    const handleChangeUserInfo = (e:React.SyntheticEvent<Element, Event>) => {\n        const target = e.target as HTMLInputElement;\n        const { name:  inputName } = target;\n        setUserInfo((prev) => ({\n            ...prev,\n            [inputName]: target.value,\n        }));\n        setIsUserInfoChanged(true);\n    };\n\n    const { logoutSuccess } = useSelector((state) => state.auth);\n    const { user } = useSelector((state) => state.auth);\n\n    useEffect(() => {\n        const token = getAccessTokenFromCookie();\n        console.error(token);\n        dispatch(getUserInfo(token));\n    }, [dispatch]);\n\n    useEffect(() => {\n        setUserInfo((prev) => ({\n            ...prev,\n            name: user.name,\n            email: user.email,\n        }));\n    }, [user]);\n\n    useEffect(() => {\n        if (logoutSuccess) {\n            history.push('/login');\n        }\n    }, [logoutSuccess, history]);\n     const nameRef = React.useRef<HTMLInputElement>(null);\n     const emailRef = React.useRef<HTMLInputElement>(null);\n     const passwordRef = React.useRef<HTMLInputElement>(null);\n\n     const handleIconClick = (ref: React.RefObject<HTMLInputElement>) => {\n         ref.current!.classList.remove('input__textfield-disabled');\n         ref.current!.disabled = false;\n         ref.current!.focus();\n     };\n\n     const handleNameIconClick = () => {\n         handleIconClick(nameRef);\n     };\n\n     const handleEmailIconClick = () => {\n         handleIconClick(emailRef);\n     };\n\n     const handlePasswordIconClick = () => {\n         handleIconClick(passwordRef);\n     };\n    return (\n        <section className={profileStyles.section}>\n            <ProfileNavigationMenu\n                handleLogout={handleLogout}\n                menuText={'В этом разделе вы можете изменить свои персональные данные'}\n            />\n            <form className={`${profileStyles.form} mt-30`}>\n                <div className={profileStyles.formContainer}>\n                    <Input\n                        value={userInfo.name}\n                        name={'name'}\n                        type={'text'}\n                        placeholder={'Имя'}\n                        onChange={handleChangeUserInfo}\n                        size={'default'}\n                        icon={'EditIcon'}\n                        disabled={true}\n                        ref={nameRef}\n                        onIconClick={handleNameIconClick}\n\n                    />\n                    <Input\n                        value={userInfo.email}\n                        name={'email'}\n                        type={'email'}\n                        placeholder={'Логин'}\n                        onChange={handleChangeUserInfo}\n                        size={'default'}\n                        icon={'EditIcon'}\n                        disabled={true}\n                        ref={emailRef}\n                        onIconClick={handleEmailIconClick}\n\n                    />\n                    <Input\n                        value={userInfo.password}\n                        name={'password'}\n                        type={'password'}\n                        placeholder={'Пароль'}\n                        onChange={handleChangeUserInfo}\n                        size={'default'}\n                        icon={'EditIcon'}\n                        disabled={true}\n                        ref={passwordRef}\n                        onIconClick={handlePasswordIconClick}\n\n                    />\n                    {isUserInfoChanged && (\n                        <div className={profileStyles.buttonContainer}>\n                            <Button type=\"secondary\" size=\"medium\">\n                                Отмена\n                            </Button>\n                            <Button type=\"primary\" size=\"medium\" onClick={handleSubmit}>\n                                Сохранить\n                            </Button>\n                        </div>\n                    )}\n                </div>\n            </form>\n        </section>\n    );\n}\nexport default ProfilePage;","import React from 'react';\nimport InrgedientDetails from '../components/IngredientDetails/IngredientDetails';\n\nimport styles from './ingredient-details.module.css';\n\nconst IngredientDetailsPage = () => {\n\n    return (\n        <div className={`${styles.container} mt-30`}>\n            <h2 className=\"text text_type_main-large\">Детали ингредиента</h2>\n            <InrgedientDetails />\n        </div>\n    );\n};\nexport default IngredientDetailsPage;","import React from 'react';\nimport { useHistory} from 'react-router-dom';\nimport {useSelector, useDispatch} from \"../services/hooks\";\n\nimport profileOrderStyles from './profile-orders.module.css'\nimport {\n    setCookie,\n    getRefreshTokenFromCookie,\n} from '../services/cookieFunctions';\n\nimport {wsActions} from \"../services/store\";\nimport {WS_USER_ORDERS_URL} from \"../services/api/api\";\nimport {TOrder, TOrders} from \"../services/types/ws\";\nimport {getUserInfo, logout} from \"../services/actions/auth\";\nimport CardOrder from \"../components/CardOrder/CardOrder\";\nimport ProfileNavigationMenu from \"../components/ProfileNavigationMenu/ProfileNavigationMenu\";\nimport {IUserInfo} from \"./profile\";\n\ninterface IProfileOrdersPage {\n    onCardOrderClick: (order: TOrder) => void;\n}\n\nexport const ProfileOrdersPage: React.FC<IProfileOrdersPage> = ({ onCardOrderClick }) => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const { logoutSuccess } = useSelector((state) => state.auth);\n    const { user } = useSelector((state) => state.auth);\n    const {ordersData}:{ordersData: TOrders} = useSelector((state) => state.webSocket);\n\n    const [, setUserInfo] = React.useState<IUserInfo>({\n        name: '',\n        email: '',\n        password: '',\n    });\n    const handleLogout = () => {\n        const token = getRefreshTokenFromCookie();\n        dispatch(logout(token));\n        setCookie({\n            accessToken: 'Bearer ',\n            refreshToken: '',\n        });\n        setUserInfo({ name: '', email: '', password: '' });\n    };\n\n\n    React.useEffect(() => {\n        const token=localStorage.getItem('token');\n        dispatch(getUserInfo(token));\n        dispatch({ type: wsActions.wsStart, wsUrl: `${WS_USER_ORDERS_URL}?token=${token}` });\n        return () => {\n            dispatch({ type: wsActions.onClose });\n        };\n    }, [dispatch]);\n\n    React.useEffect(() => {\n        setUserInfo((prev) => ({\n            ...prev,\n            name: user.name,\n            email: user.email,\n        }));\n    }, [user]);\n\n    React.useEffect(() => {\n        if (logoutSuccess) {\n            history.push('/login');\n        }\n    }, [logoutSuccess, history]);\n\n    return (\n        <section className={profileOrderStyles.section}>\n            <ProfileNavigationMenu\n                handleLogout={handleLogout}\n                menuText={'В этом разделе вы можете просмотреть свою историю заказов'}\n            />\n            <div className={`${profileOrderStyles.container} mt-10`}>\n                    {ordersData&& (\n                        <ul className={profileOrderStyles.orders}>\n                            {ordersData.orders.map((order: TOrder) => {\n                                return <CardOrder order={order} key={order._id} onCardOrderClick={onCardOrderClick} />;\n                            })}\n\n                        </ul>\n                    )}\n            </div>\n\n        </section>\n    );\n};\n","import React, { useState, useEffect} from 'react';\nimport registerStyles from \"./register.module.css\";\nimport {Input, PasswordInput, Button} from '@ya.praktikum/react-developer-burger-ui-components';\nimport {Link, Redirect, useHistory} from 'react-router-dom';\nimport {useSelector, useDispatch} from \"../services/hooks\";\nimport {register} from '../services/actions/auth';\nimport {getRefreshTokenFromCookie} from \"../services/cookieFunctions\";\n\nconst RegisterPage = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [name, setName] = useState<string>('');\n    const [email, setEmail] = useState<string>('');\n    const [password, setPassword] = useState<string>('');\n    const isLogin = !!getRefreshTokenFromCookie();\n    const { registerSuccess } = useSelector((state) => state.auth);\n    const handleSubmit = (e:React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        dispatch(register(email, password, name));\n        setEmail('');\n        setPassword('');\n        setName('');\n    };\n    useEffect(() => {\n        if (registerSuccess) {\n            history.push('/login');\n        }\n    }, [registerSuccess, history]);\n    return (\n        <>\n            {isLogin ? (\n                <Redirect to=\"/\" />\n            ) : (\n                <form className={registerStyles.form} noValidate onSubmit={handleSubmit}>\n                    <h2 className=\"text text_type_main-medium mb-6\">Регистрация</h2>\n                    <div className={registerStyles.formContainer}>\n                        <Input\n                            type={'text'}\n                            placeholder={'Имя'}\n                            onChange={e => setName(e.target.value)}\n                            name={'name'}\n                            size={'default'}\n                            value={name}\n                        />\n                        <Input\n                            type={'email'}\n                            placeholder={'E-mail'}\n                            onChange={e => setEmail(e.target.value)}\n                            name={'email'}\n                            size={'default'}\n                            value={email}\n                        />\n                        <PasswordInput\n                            name={'password'}\n                            value={password}\n                            onChange={e => setPassword(e.target.value)}\n                        />\n                    <div className={registerStyles.submitWrapper}>\n                        <Button type=\"primary\" size=\"medium\">\n                            Зарегистрироваться\n                        </Button>\n                    </div>\n                    </div>\n\n                <div>\n                    <p className={`text text_type_main-default mt-20 ${registerStyles.paragraph}`}>Уже зарегистрированы? <Link\n                        className={registerStyles.link} to=\"/login\">Войти</Link></p>\n                </div>\n                </form>\n            )}\n        </>\n    );\n}\nexport default RegisterPage;","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from '../services/hooks';\r\nimport OrderInfo from '../components/OrderInfo/OrderInfo';\r\nimport {getUserOrdersData} from \"../services/actions/userOrdersData\";\r\nimport styles from './profile-order.module.css';\r\nimport {getUserInfo} from \"../services/actions/auth\";\r\n\r\nexport const ProfileOrderPage: React.FC = () => {\r\n    const { id } = useParams<{ id: string }>();\r\n    const { userOrdersData } = useSelector((state) => state.userOrdersData);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    React.useEffect(() => {\r\n        const token=localStorage.getItem('token');\r\n      //console.log('Token user', token)\r\n        dispatch(getUserInfo(token));\r\n        dispatch(getUserOrdersData(token));\r\n    }, [dispatch]);\r\n\r\n    //console.log(userOrdersData);\r\n    return (\r\n        <div className={styles.orderInfo}>\r\n            {userOrdersData ? (\r\n                <OrderInfo ordersData={ userOrdersData } id={id} orderDetailsData={null} />\r\n                ):(<></>)}\r\n        </div>\r\n    );\r\n};","import {AppDispatch, AppThunk} from \"../store\";\r\nimport api from \"../api/api\";\r\nimport {\r\n    GET_USER_ORDERS_DATA_ERROR,\r\n    GET_USER_ORDERS_DATA_REQUEST,\r\n    GET_USER_ORDERS_DATA_SUCCESS\r\n} from \"../types/userOrdersData\";\r\n\r\nexport const getUserOrdersData: AppThunk = (token: string) => (dispatch: AppDispatch) => {\r\n    dispatch({ type: GET_USER_ORDERS_DATA_REQUEST });\r\n\r\n    return api\r\n        .getUserOrdersData(token)\r\n        .then((data) => {\r\n            dispatch({\r\n                type: GET_USER_ORDERS_DATA_SUCCESS,\r\n                userOrdersData: data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            dispatch({ type: GET_USER_ORDERS_DATA_ERROR });\r\n        });\r\n};\r\n","import React from 'react';\r\nimport {useEffect, useState} from \"react\";\r\nimport AppHeader from \"../AppHeader/AppHeader\";\r\nimport BurgerIngredients from \"../BurgerIngredients/BurgerIngredients\";\r\nimport BurgerConstructor from \"../BurgerConstructor/BurgerConstructor\";\r\nimport mainStyles from \"./App.module.css\"\r\nimport Modal from \"../Modal/Modal\";\r\nimport IngredientDetails from \"../IngredientDetails/IngredientDetails\";\r\nimport {OrderInfoPage} from \"../../pages/order-info\";\r\nimport OrderFeedPage from \"../../pages/feed\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getIngredients} from \"../../services/actions/allIngredients\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport { Route, Switch, useHistory, useLocation} from \"react-router-dom\";\r\nimport ProtectedRoute from \"../ProtectedRoute/ProtectedRoute\";\r\nimport ForgotPasswordPage from \"../../pages/forgot-password\";\r\nimport ResetPasswordPage from \"../../pages/reset-password\";\r\nimport LoginPage from \"../../pages/login\";\r\nimport ProfilePage from \"../../pages/profile\";\r\nimport IngredientDetailsPage from \"../../pages/ingredient-details\"\r\nimport {ProfileOrdersPage} from \"../../pages/profile-orders\";\r\nimport RegisterPage from \"../../pages/register\";\r\nimport {TLocationState} from \"../../services/types/otherTypes\"\r\nimport {TOrder} from \"../../services/types/ws\";\r\nimport {setOrderDetails} from \"../../services/actions/orderDetails\";\r\nimport OrderInfo from \"../OrderInfo/OrderInfo\";\r\nimport {useSelector} from \"../../services/hooks\";\r\n//import {getOrdersData} from \"../../services/actions/ordersData\";\r\nimport {ProfileOrderPage} from \"../../pages/profile-order\";\r\nfunction App() {\r\n\r\n    const [isOpen, setIsOpen] = useState<boolean>(false);\r\n    const handleOpenIngredientModal = () => {\r\n        setIsOpen(true);\r\n    }\r\n\r\n\r\n\r\n    const dispatch=useDispatch();\r\n    useEffect(\r\n        () => {\r\n            dispatch( getIngredients());\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    const history = useHistory();\r\n\r\n    let location = useLocation<TLocationState>();\r\n    let action=(history.action === 'PUSH' || history.action === 'REPLACE');\r\n    let background = action && location.state && location.state.background;\r\n    let backgroundOrders =action && location.state && location.state.backgroundOrders;\r\n\r\n    const { orderDetails } = useSelector((state) => state.orderDetails);\r\n    const handleCardOrderClick = (order: TOrder) => {\r\n        dispatch(setOrderDetails(order));\r\n        setIsOpen(true);\r\n    };\r\n\r\n    /*React.useEffect(() => {\r\n        dispatch(getOrdersData());\r\n    }, [dispatch]);*/\r\n\r\n    const handleCloseModal = React.useCallback(\r\n        (isGoBack) => {\r\n\r\n            setIsOpen(false);\r\n            if (isGoBack) {\r\n                history.goBack();\r\n            }\r\n        },\r\n        [history],\r\n    );\r\n\r\n\r\n\r\n        return (\r\n            <>\r\n            <AppHeader/>\r\n    <Switch location={background || location|| backgroundOrders}>\r\n        <Route path=\"/\" exact={true}>\r\n            <main className={mainStyles.main}>\r\n            <DndProvider backend={HTML5Backend}>\r\n                <BurgerIngredients onCardClick={handleOpenIngredientModal} />\r\n                <BurgerConstructor history={history}/>\r\n            </DndProvider>\r\n            </main>\r\n        </Route>\r\n        <Route path=\"/login\" exact={true}>\r\n            <LoginPage />\r\n        </Route>\r\n        <Route path=\"/register\" exact={true}>\r\n            <RegisterPage />\r\n        </Route>\r\n        <Route path=\"/forgot-password\" exact={true}>\r\n            <ForgotPasswordPage />\r\n        </Route>\r\n        <Route path=\"/reset-password\" exact={true}>\r\n            <ResetPasswordPage />\r\n        </Route>\r\n        <ProtectedRoute path=\"/profile\" exact={true}>\r\n            <ProfilePage />\r\n        </ProtectedRoute>\r\n        <Route path=\"/feed\" exact={true}>\r\n            <OrderFeedPage onCardOrderClick={handleCardOrderClick} />\r\n        </Route>\r\n        <Route path=\"/feed/:id\" exact={true}>\r\n            <OrderInfoPage />\r\n        </Route>\r\n        <ProtectedRoute path=\"/profile/orders\" exact={true}>\r\n            <ProfileOrdersPage  onCardOrderClick={handleCardOrderClick}  />\r\n        </ProtectedRoute>\r\n        <Route path=\"/profile/orders/:id\" exact={true}>\r\n            <ProfileOrderPage />\r\n        </Route>\r\n        <Route path=\"/ingredients/:id\" exact={true}>\r\n            <IngredientDetailsPage />\r\n        </Route>\r\n    </Switch>\r\n\r\n                {background && (\r\n\r\n                    <Modal open={isOpen} onClose={handleCloseModal}  title={ \"Детали ингредиента\"} isGoBack={true}>\r\n                        <IngredientDetails/>\r\n                    </Modal>\r\n\r\n\r\n                )}\r\n                {backgroundOrders&&  (\r\n\r\n                            <Modal open={isOpen} onClose={handleCloseModal} title=\"\"  isGoBack={true}>\r\n                                <OrderInfo ordersData={null} orderDetailsData={orderDetails} id=\"\" />\r\n                            </Modal>\r\n                )}\r\n\r\n            </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import  {ingredientsRequest} from \"../api/api\";\nimport {AppThunk, AppDispatch} from \"../store\";\nimport {GET_INGREDIENTS_ERROR, GET_INGREDIENTS_REQUEST, GET_INGREDIENTS_SUCCESS} from \"../types/allIngredients\";\n\n\nexport const getIngredients: AppThunk = () => (dispatch: AppDispatch)=>{\n\n            dispatch({\n                type: GET_INGREDIENTS_REQUEST\n            });\n            ingredientsRequest()\n                .then(res => {\n                    if (res.ok) {\n                        return res.json();\n                    }\n                    return Promise.reject(`Ошибка ${res.status}`);\n                })\n                .then((res) => {\n                    if (res && res.success) {\n                        dispatch({\n                            type: GET_INGREDIENTS_SUCCESS,\n                            allIngredients: res.data,\n                        });\n                    } else {\n                        dispatch({\n                            type: GET_INGREDIENTS_ERROR,\n                        });\n                    }\n                })\n                .catch((err) => {\n                    dispatch({\n                        type: GET_INGREDIENTS_ERROR,\n                    });\n                });\n        };\n\n","import {TOrder} from \"../types/ws\";\nimport {CLEAR_ORDER_DETAILS, IClearOrderDetails, ISetOrderDetails, SET_ORDER_DETAILS} from \"../types/orderDetails\";\n\nexport const setOrderDetails = (order: TOrder): ISetOrderDetails => {\n    return {\n        type: SET_ORDER_DETAILS,\n        order: order,\n    };\n};\n\nexport const clearOrderDetails = (): IClearOrderDetails => {\n    return {\n        type: CLEAR_ORDER_DETAILS,\n    };\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport {Provider} from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom';\nimport {store} from \"./services/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n          <BrowserRouter>\n              <App />\n          </BrowserRouter>\n      </Provider>\n        </React.StrictMode>,\n\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrapper\":\"reset-password_loginWrapper__1BMtj\",\"loginContent\":\"reset-password_loginContent__2n5wJ\",\"formTitle\":\"reset-password_formTitle__2fJLD\",\"form\":\"reset-password_form__2c9jy\",\"inputWrapper\":\"reset-password_inputWrapper__3c58K\",\"buttonWrapper\":\"reset-password_buttonWrapper__1jRtc\",\"paragraph\":\"reset-password_paragraph__2bDpe\",\"link\":\"reset-password_link__Q_BeI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrapper\":\"forgot-password_loginWrapper__2-nqb\",\"loginContent\":\"forgot-password_loginContent__3zB4U\",\"formTitle\":\"forgot-password_formTitle__3XCLr\",\"form\":\"forgot-password_form__1R-uN\",\"inputWrapper\":\"forgot-password_inputWrapper__2jOuF\",\"submitWrapper\":\"forgot-password_submitWrapper__5xf3l\",\"paragraph\":\"forgot-password_paragraph__20-8M\",\"link\":\"forgot-password_link__2faUD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"login_form__18WSd\",\"formContainer\":\"login_formContainer__1Fp-E\",\"submitWrapper\":\"login_submitWrapper__19jHo\",\"text\":\"login_text__2Xv_W\",\"link\":\"login_link__1_K0k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"linkContainer\":\"ProfileNavigationMenu_linkContainer__2g3uJ\",\"link\":\"ProfileNavigationMenu_link__3bEz2\",\"linkActive\":\"ProfileNavigationMenu_linkActive__1IocQ\",\"button\":\"ProfileNavigationMenu_button__3jttB\",\"paragraph\":\"ProfileNavigationMenu_paragraph__3yXMC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2vDVy\",\"counter\":\"Card_counter__pMgfG\",\"price\":\"Card_price__24HFz\",\"priceNum\":\"Card_priceNum__2oucV\",\"name\":\"Card_name__mE20S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardOrder\":\"CardOrder_cardOrder__1D3O1\",\"idWithDateContainer\":\"CardOrder_idWithDateContainer__2YHKg\",\"ingredientsWithPriceContainer\":\"CardOrder_ingredientsWithPriceContainer__39Qqj\",\"img\":\"CardOrder_img__3iV4C\",\"link\":\"CardOrder_link__27FxW\",\"price\":\"CardOrder_price__R9PjS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"BurgerIngredients_section__3QJWm\",\"cards\":\"BurgerIngredients_cards__otbMP\",\"scroll\":\"BurgerIngredients_scroll__3Qo5l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"BurgerConstructorItems_ul__c2fl1\",\"item\":\"BurgerConstructorItems_item__1esmR\",\"itemWrapper\":\"BurgerConstructorItems_itemWrapper__337yb\",\"scroll\":\"BurgerConstructorItems_scroll__1gh2P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderWrapper\":\"OrderDetails_orderWrapper__2guS_\",\"order\":\"OrderDetails_order__1imyX\",\"orderNum\":\"OrderDetails_orderNum__2nrDL OrderDetails_order__1imyX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"register_form__3jzE-\",\"formContainer\":\"register_formContainer__SqqZv\",\"submitWrapper\":\"register_submitWrapper__2YmRA\",\"paragraph\":\"register_paragraph__3d-yh\",\"link\":\"register_link__1WKiv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalHeader\":\"Modal_modalHeader__1yxhH\",\"modalHeaderWrapper\":\"Modal_modalHeaderWrapper__3ByN4\",\"headerText\":\"Modal_headerText__3yTsi\",\"button\":\"Modal_button__v-eXO\",\"overlay\":\"Modal_overlay__2btyM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"profile_section__3V6WD\",\"form\":\"profile_form__3RJ5b\",\"formContainer\":\"profile_formContainer__2I6xV\",\"buttonContainer\":\"profile_buttonContainer__2qAtn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"NavigationLink_link__2gCc3\",\"linkText\":\"NavigationLink_linkText__1MCq3\",\"linkTextActive\":\"NavigationLink_linkTextActive__2lIFm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"BurgerConstructor_items__si86D\",\"totalWrapper\":\"BurgerConstructor_totalWrapper__1sKpw\",\"totalPrice\":\"BurgerConstructor_totalPrice__tN5Gh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"profile-orders_section__k1xf0\",\"container\":\"profile-orders_container__aICY-\",\"orders\":\"profile-orders_orders__2aTxN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppHeader_header__3k3xj\",\"headerContainer\":\"AppHeader_headerContainer__CzLrW\"};"],"sourceRoot":""}